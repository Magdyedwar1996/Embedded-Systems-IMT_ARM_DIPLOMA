
KeyPad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000049cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000154  00800060  000049cc  00004a40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000032c4  00000000  00000000  00004b94  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000f27  00000000  00000000  00007e58  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001c0  00000000  00000000  00008d7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000214  00000000  00000000  00008f3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002612  00000000  00000000  00009153  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014ce  00000000  00000000  0000b765  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000130b  00000000  00000000  0000cc33  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e0  00000000  00000000  0000df40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000307  00000000  00000000  0000e120  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a1a  00000000  00000000  0000e427  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000ee41  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec ec       	ldi	r30, 0xCC	; 204
      68:	f9 e4       	ldi	r31, 0x49	; 73
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 3b       	cpi	r26, 0xB4	; 180
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 55 24 	call	0x48aa	; 0x48aa <main>
      7a:	0c 94 e4 24 	jmp	0x49c8	; 0x49c8 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 ab 04 	call	0x956	; 0x956 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 ab 04 	call	0x956	; 0x956 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 ad 24 	jmp	0x495a	; 0x495a <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	ab e7       	ldi	r26, 0x7B	; 123
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 c9 24 	jmp	0x4992	; 0x4992 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 b9 24 	jmp	0x4972	; 0x4972 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 d5 24 	jmp	0x49aa	; 0x49aa <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 b9 24 	jmp	0x4972	; 0x4972 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 d5 24 	jmp	0x49aa	; 0x49aa <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 ad 24 	jmp	0x495a	; 0x495a <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	8b e7       	ldi	r24, 0x7B	; 123
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 c9 24 	jmp	0x4992	; 0x4992 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 b5 24 	jmp	0x496a	; 0x496a <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	6b e7       	ldi	r22, 0x7B	; 123
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 d1 24 	jmp	0x49a2	; 0x49a2 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 b9 24 	jmp	0x4972	; 0x4972 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 14 07 	call	0xe28	; 0xe28 <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 d5 24 	jmp	0x49aa	; 0x49aa <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 b9 24 	jmp	0x4972	; 0x4972 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 14 07 	call	0xe28	; 0xe28 <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 d5 24 	jmp	0x49aa	; 0x49aa <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 b9 24 	jmp	0x4972	; 0x4972 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 14 07 	call	0xe28	; 0xe28 <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 d5 24 	jmp	0x49aa	; 0x49aa <__epilogue_restores__+0x18>

0000089a <__floatsisf>:
     89a:	a8 e0       	ldi	r26, 0x08	; 8
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 b6 24 	jmp	0x496c	; 0x496c <__prologue_saves__+0x12>
     8a6:	9b 01       	movw	r18, r22
     8a8:	ac 01       	movw	r20, r24
     8aa:	83 e0       	ldi	r24, 0x03	; 3
     8ac:	89 83       	std	Y+1, r24	; 0x01
     8ae:	da 01       	movw	r26, r20
     8b0:	c9 01       	movw	r24, r18
     8b2:	88 27       	eor	r24, r24
     8b4:	b7 fd       	sbrc	r27, 7
     8b6:	83 95       	inc	r24
     8b8:	99 27       	eor	r25, r25
     8ba:	aa 27       	eor	r26, r26
     8bc:	bb 27       	eor	r27, r27
     8be:	b8 2e       	mov	r11, r24
     8c0:	21 15       	cp	r18, r1
     8c2:	31 05       	cpc	r19, r1
     8c4:	41 05       	cpc	r20, r1
     8c6:	51 05       	cpc	r21, r1
     8c8:	19 f4       	brne	.+6      	; 0x8d0 <__floatsisf+0x36>
     8ca:	82 e0       	ldi	r24, 0x02	; 2
     8cc:	89 83       	std	Y+1, r24	; 0x01
     8ce:	3a c0       	rjmp	.+116    	; 0x944 <__floatsisf+0xaa>
     8d0:	88 23       	and	r24, r24
     8d2:	a9 f0       	breq	.+42     	; 0x8fe <__floatsisf+0x64>
     8d4:	20 30       	cpi	r18, 0x00	; 0
     8d6:	80 e0       	ldi	r24, 0x00	; 0
     8d8:	38 07       	cpc	r19, r24
     8da:	80 e0       	ldi	r24, 0x00	; 0
     8dc:	48 07       	cpc	r20, r24
     8de:	80 e8       	ldi	r24, 0x80	; 128
     8e0:	58 07       	cpc	r21, r24
     8e2:	29 f4       	brne	.+10     	; 0x8ee <__floatsisf+0x54>
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	9f ec       	ldi	r25, 0xCF	; 207
     8ec:	30 c0       	rjmp	.+96     	; 0x94e <__floatsisf+0xb4>
     8ee:	ee 24       	eor	r14, r14
     8f0:	ff 24       	eor	r15, r15
     8f2:	87 01       	movw	r16, r14
     8f4:	e2 1a       	sub	r14, r18
     8f6:	f3 0a       	sbc	r15, r19
     8f8:	04 0b       	sbc	r16, r20
     8fa:	15 0b       	sbc	r17, r21
     8fc:	02 c0       	rjmp	.+4      	; 0x902 <__floatsisf+0x68>
     8fe:	79 01       	movw	r14, r18
     900:	8a 01       	movw	r16, r20
     902:	8e e1       	ldi	r24, 0x1E	; 30
     904:	c8 2e       	mov	r12, r24
     906:	d1 2c       	mov	r13, r1
     908:	dc 82       	std	Y+4, r13	; 0x04
     90a:	cb 82       	std	Y+3, r12	; 0x03
     90c:	ed 82       	std	Y+5, r14	; 0x05
     90e:	fe 82       	std	Y+6, r15	; 0x06
     910:	0f 83       	std	Y+7, r16	; 0x07
     912:	18 87       	std	Y+8, r17	; 0x08
     914:	c8 01       	movw	r24, r16
     916:	b7 01       	movw	r22, r14
     918:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__clzsi2>
     91c:	01 97       	sbiw	r24, 0x01	; 1
     91e:	18 16       	cp	r1, r24
     920:	19 06       	cpc	r1, r25
     922:	84 f4       	brge	.+32     	; 0x944 <__floatsisf+0xaa>
     924:	08 2e       	mov	r0, r24
     926:	04 c0       	rjmp	.+8      	; 0x930 <__floatsisf+0x96>
     928:	ee 0c       	add	r14, r14
     92a:	ff 1c       	adc	r15, r15
     92c:	00 1f       	adc	r16, r16
     92e:	11 1f       	adc	r17, r17
     930:	0a 94       	dec	r0
     932:	d2 f7       	brpl	.-12     	; 0x928 <__floatsisf+0x8e>
     934:	ed 82       	std	Y+5, r14	; 0x05
     936:	fe 82       	std	Y+6, r15	; 0x06
     938:	0f 83       	std	Y+7, r16	; 0x07
     93a:	18 87       	std	Y+8, r17	; 0x08
     93c:	c8 1a       	sub	r12, r24
     93e:	d9 0a       	sbc	r13, r25
     940:	dc 82       	std	Y+4, r13	; 0x04
     942:	cb 82       	std	Y+3, r12	; 0x03
     944:	ba 82       	std	Y+2, r11	; 0x02
     946:	ce 01       	movw	r24, r28
     948:	01 96       	adiw	r24, 0x01	; 1
     94a:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     94e:	28 96       	adiw	r28, 0x08	; 8
     950:	e9 e0       	ldi	r30, 0x09	; 9
     952:	0c 94 d2 24 	jmp	0x49a4	; 0x49a4 <__epilogue_restores__+0x12>

00000956 <__fixsfsi>:
     956:	ac e0       	ldi	r26, 0x0C	; 12
     958:	b0 e0       	ldi	r27, 0x00	; 0
     95a:	e1 eb       	ldi	r30, 0xB1	; 177
     95c:	f4 e0       	ldi	r31, 0x04	; 4
     95e:	0c 94 bd 24 	jmp	0x497a	; 0x497a <__prologue_saves__+0x20>
     962:	69 83       	std	Y+1, r22	; 0x01
     964:	7a 83       	std	Y+2, r23	; 0x02
     966:	8b 83       	std	Y+3, r24	; 0x03
     968:	9c 83       	std	Y+4, r25	; 0x04
     96a:	ce 01       	movw	r24, r28
     96c:	01 96       	adiw	r24, 0x01	; 1
     96e:	be 01       	movw	r22, r28
     970:	6b 5f       	subi	r22, 0xFB	; 251
     972:	7f 4f       	sbci	r23, 0xFF	; 255
     974:	0e 94 9c 06 	call	0xd38	; 0xd38 <__unpack_f>
     978:	8d 81       	ldd	r24, Y+5	; 0x05
     97a:	82 30       	cpi	r24, 0x02	; 2
     97c:	61 f1       	breq	.+88     	; 0x9d6 <__fixsfsi+0x80>
     97e:	82 30       	cpi	r24, 0x02	; 2
     980:	50 f1       	brcs	.+84     	; 0x9d6 <__fixsfsi+0x80>
     982:	84 30       	cpi	r24, 0x04	; 4
     984:	21 f4       	brne	.+8      	; 0x98e <__fixsfsi+0x38>
     986:	8e 81       	ldd	r24, Y+6	; 0x06
     988:	88 23       	and	r24, r24
     98a:	51 f1       	breq	.+84     	; 0x9e0 <__fixsfsi+0x8a>
     98c:	2e c0       	rjmp	.+92     	; 0x9ea <__fixsfsi+0x94>
     98e:	2f 81       	ldd	r18, Y+7	; 0x07
     990:	38 85       	ldd	r19, Y+8	; 0x08
     992:	37 fd       	sbrc	r19, 7
     994:	20 c0       	rjmp	.+64     	; 0x9d6 <__fixsfsi+0x80>
     996:	6e 81       	ldd	r22, Y+6	; 0x06
     998:	2f 31       	cpi	r18, 0x1F	; 31
     99a:	31 05       	cpc	r19, r1
     99c:	1c f0       	brlt	.+6      	; 0x9a4 <__fixsfsi+0x4e>
     99e:	66 23       	and	r22, r22
     9a0:	f9 f0       	breq	.+62     	; 0x9e0 <__fixsfsi+0x8a>
     9a2:	23 c0       	rjmp	.+70     	; 0x9ea <__fixsfsi+0x94>
     9a4:	8e e1       	ldi	r24, 0x1E	; 30
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	82 1b       	sub	r24, r18
     9aa:	93 0b       	sbc	r25, r19
     9ac:	29 85       	ldd	r18, Y+9	; 0x09
     9ae:	3a 85       	ldd	r19, Y+10	; 0x0a
     9b0:	4b 85       	ldd	r20, Y+11	; 0x0b
     9b2:	5c 85       	ldd	r21, Y+12	; 0x0c
     9b4:	04 c0       	rjmp	.+8      	; 0x9be <__fixsfsi+0x68>
     9b6:	56 95       	lsr	r21
     9b8:	47 95       	ror	r20
     9ba:	37 95       	ror	r19
     9bc:	27 95       	ror	r18
     9be:	8a 95       	dec	r24
     9c0:	d2 f7       	brpl	.-12     	; 0x9b6 <__fixsfsi+0x60>
     9c2:	66 23       	and	r22, r22
     9c4:	b1 f0       	breq	.+44     	; 0x9f2 <__fixsfsi+0x9c>
     9c6:	50 95       	com	r21
     9c8:	40 95       	com	r20
     9ca:	30 95       	com	r19
     9cc:	21 95       	neg	r18
     9ce:	3f 4f       	sbci	r19, 0xFF	; 255
     9d0:	4f 4f       	sbci	r20, 0xFF	; 255
     9d2:	5f 4f       	sbci	r21, 0xFF	; 255
     9d4:	0e c0       	rjmp	.+28     	; 0x9f2 <__fixsfsi+0x9c>
     9d6:	20 e0       	ldi	r18, 0x00	; 0
     9d8:	30 e0       	ldi	r19, 0x00	; 0
     9da:	40 e0       	ldi	r20, 0x00	; 0
     9dc:	50 e0       	ldi	r21, 0x00	; 0
     9de:	09 c0       	rjmp	.+18     	; 0x9f2 <__fixsfsi+0x9c>
     9e0:	2f ef       	ldi	r18, 0xFF	; 255
     9e2:	3f ef       	ldi	r19, 0xFF	; 255
     9e4:	4f ef       	ldi	r20, 0xFF	; 255
     9e6:	5f e7       	ldi	r21, 0x7F	; 127
     9e8:	04 c0       	rjmp	.+8      	; 0x9f2 <__fixsfsi+0x9c>
     9ea:	20 e0       	ldi	r18, 0x00	; 0
     9ec:	30 e0       	ldi	r19, 0x00	; 0
     9ee:	40 e0       	ldi	r20, 0x00	; 0
     9f0:	50 e8       	ldi	r21, 0x80	; 128
     9f2:	b9 01       	movw	r22, r18
     9f4:	ca 01       	movw	r24, r20
     9f6:	2c 96       	adiw	r28, 0x0c	; 12
     9f8:	e2 e0       	ldi	r30, 0x02	; 2
     9fa:	0c 94 d9 24 	jmp	0x49b2	; 0x49b2 <__epilogue_restores__+0x20>

000009fe <__floatunsisf>:
     9fe:	a8 e0       	ldi	r26, 0x08	; 8
     a00:	b0 e0       	ldi	r27, 0x00	; 0
     a02:	e5 e0       	ldi	r30, 0x05	; 5
     a04:	f5 e0       	ldi	r31, 0x05	; 5
     a06:	0c 94 b5 24 	jmp	0x496a	; 0x496a <__prologue_saves__+0x10>
     a0a:	7b 01       	movw	r14, r22
     a0c:	8c 01       	movw	r16, r24
     a0e:	61 15       	cp	r22, r1
     a10:	71 05       	cpc	r23, r1
     a12:	81 05       	cpc	r24, r1
     a14:	91 05       	cpc	r25, r1
     a16:	19 f4       	brne	.+6      	; 0xa1e <__floatunsisf+0x20>
     a18:	82 e0       	ldi	r24, 0x02	; 2
     a1a:	89 83       	std	Y+1, r24	; 0x01
     a1c:	60 c0       	rjmp	.+192    	; 0xade <__floatunsisf+0xe0>
     a1e:	83 e0       	ldi	r24, 0x03	; 3
     a20:	89 83       	std	Y+1, r24	; 0x01
     a22:	8e e1       	ldi	r24, 0x1E	; 30
     a24:	c8 2e       	mov	r12, r24
     a26:	d1 2c       	mov	r13, r1
     a28:	dc 82       	std	Y+4, r13	; 0x04
     a2a:	cb 82       	std	Y+3, r12	; 0x03
     a2c:	ed 82       	std	Y+5, r14	; 0x05
     a2e:	fe 82       	std	Y+6, r15	; 0x06
     a30:	0f 83       	std	Y+7, r16	; 0x07
     a32:	18 87       	std	Y+8, r17	; 0x08
     a34:	c8 01       	movw	r24, r16
     a36:	b7 01       	movw	r22, r14
     a38:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__clzsi2>
     a3c:	fc 01       	movw	r30, r24
     a3e:	31 97       	sbiw	r30, 0x01	; 1
     a40:	f7 ff       	sbrs	r31, 7
     a42:	3b c0       	rjmp	.+118    	; 0xaba <__floatunsisf+0xbc>
     a44:	22 27       	eor	r18, r18
     a46:	33 27       	eor	r19, r19
     a48:	2e 1b       	sub	r18, r30
     a4a:	3f 0b       	sbc	r19, r31
     a4c:	57 01       	movw	r10, r14
     a4e:	68 01       	movw	r12, r16
     a50:	02 2e       	mov	r0, r18
     a52:	04 c0       	rjmp	.+8      	; 0xa5c <__floatunsisf+0x5e>
     a54:	d6 94       	lsr	r13
     a56:	c7 94       	ror	r12
     a58:	b7 94       	ror	r11
     a5a:	a7 94       	ror	r10
     a5c:	0a 94       	dec	r0
     a5e:	d2 f7       	brpl	.-12     	; 0xa54 <__floatunsisf+0x56>
     a60:	40 e0       	ldi	r20, 0x00	; 0
     a62:	50 e0       	ldi	r21, 0x00	; 0
     a64:	60 e0       	ldi	r22, 0x00	; 0
     a66:	70 e0       	ldi	r23, 0x00	; 0
     a68:	81 e0       	ldi	r24, 0x01	; 1
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	a0 e0       	ldi	r26, 0x00	; 0
     a6e:	b0 e0       	ldi	r27, 0x00	; 0
     a70:	04 c0       	rjmp	.+8      	; 0xa7a <__floatunsisf+0x7c>
     a72:	88 0f       	add	r24, r24
     a74:	99 1f       	adc	r25, r25
     a76:	aa 1f       	adc	r26, r26
     a78:	bb 1f       	adc	r27, r27
     a7a:	2a 95       	dec	r18
     a7c:	d2 f7       	brpl	.-12     	; 0xa72 <__floatunsisf+0x74>
     a7e:	01 97       	sbiw	r24, 0x01	; 1
     a80:	a1 09       	sbc	r26, r1
     a82:	b1 09       	sbc	r27, r1
     a84:	8e 21       	and	r24, r14
     a86:	9f 21       	and	r25, r15
     a88:	a0 23       	and	r26, r16
     a8a:	b1 23       	and	r27, r17
     a8c:	00 97       	sbiw	r24, 0x00	; 0
     a8e:	a1 05       	cpc	r26, r1
     a90:	b1 05       	cpc	r27, r1
     a92:	21 f0       	breq	.+8      	; 0xa9c <__floatunsisf+0x9e>
     a94:	41 e0       	ldi	r20, 0x01	; 1
     a96:	50 e0       	ldi	r21, 0x00	; 0
     a98:	60 e0       	ldi	r22, 0x00	; 0
     a9a:	70 e0       	ldi	r23, 0x00	; 0
     a9c:	4a 29       	or	r20, r10
     a9e:	5b 29       	or	r21, r11
     aa0:	6c 29       	or	r22, r12
     aa2:	7d 29       	or	r23, r13
     aa4:	4d 83       	std	Y+5, r20	; 0x05
     aa6:	5e 83       	std	Y+6, r21	; 0x06
     aa8:	6f 83       	std	Y+7, r22	; 0x07
     aaa:	78 87       	std	Y+8, r23	; 0x08
     aac:	8e e1       	ldi	r24, 0x1E	; 30
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	8e 1b       	sub	r24, r30
     ab2:	9f 0b       	sbc	r25, r31
     ab4:	9c 83       	std	Y+4, r25	; 0x04
     ab6:	8b 83       	std	Y+3, r24	; 0x03
     ab8:	12 c0       	rjmp	.+36     	; 0xade <__floatunsisf+0xe0>
     aba:	30 97       	sbiw	r30, 0x00	; 0
     abc:	81 f0       	breq	.+32     	; 0xade <__floatunsisf+0xe0>
     abe:	0e 2e       	mov	r0, r30
     ac0:	04 c0       	rjmp	.+8      	; 0xaca <__floatunsisf+0xcc>
     ac2:	ee 0c       	add	r14, r14
     ac4:	ff 1c       	adc	r15, r15
     ac6:	00 1f       	adc	r16, r16
     ac8:	11 1f       	adc	r17, r17
     aca:	0a 94       	dec	r0
     acc:	d2 f7       	brpl	.-12     	; 0xac2 <__floatunsisf+0xc4>
     ace:	ed 82       	std	Y+5, r14	; 0x05
     ad0:	fe 82       	std	Y+6, r15	; 0x06
     ad2:	0f 83       	std	Y+7, r16	; 0x07
     ad4:	18 87       	std	Y+8, r17	; 0x08
     ad6:	ce 1a       	sub	r12, r30
     ad8:	df 0a       	sbc	r13, r31
     ada:	dc 82       	std	Y+4, r13	; 0x04
     adc:	cb 82       	std	Y+3, r12	; 0x03
     ade:	1a 82       	std	Y+2, r1	; 0x02
     ae0:	ce 01       	movw	r24, r28
     ae2:	01 96       	adiw	r24, 0x01	; 1
     ae4:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__pack_f>
     ae8:	28 96       	adiw	r28, 0x08	; 8
     aea:	ea e0       	ldi	r30, 0x0A	; 10
     aec:	0c 94 d1 24 	jmp	0x49a2	; 0x49a2 <__epilogue_restores__+0x10>

00000af0 <__clzsi2>:
     af0:	ef 92       	push	r14
     af2:	ff 92       	push	r15
     af4:	0f 93       	push	r16
     af6:	1f 93       	push	r17
     af8:	7b 01       	movw	r14, r22
     afa:	8c 01       	movw	r16, r24
     afc:	80 e0       	ldi	r24, 0x00	; 0
     afe:	e8 16       	cp	r14, r24
     b00:	80 e0       	ldi	r24, 0x00	; 0
     b02:	f8 06       	cpc	r15, r24
     b04:	81 e0       	ldi	r24, 0x01	; 1
     b06:	08 07       	cpc	r16, r24
     b08:	80 e0       	ldi	r24, 0x00	; 0
     b0a:	18 07       	cpc	r17, r24
     b0c:	88 f4       	brcc	.+34     	; 0xb30 <__clzsi2+0x40>
     b0e:	8f ef       	ldi	r24, 0xFF	; 255
     b10:	e8 16       	cp	r14, r24
     b12:	f1 04       	cpc	r15, r1
     b14:	01 05       	cpc	r16, r1
     b16:	11 05       	cpc	r17, r1
     b18:	31 f0       	breq	.+12     	; 0xb26 <__clzsi2+0x36>
     b1a:	28 f0       	brcs	.+10     	; 0xb26 <__clzsi2+0x36>
     b1c:	88 e0       	ldi	r24, 0x08	; 8
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	a0 e0       	ldi	r26, 0x00	; 0
     b22:	b0 e0       	ldi	r27, 0x00	; 0
     b24:	17 c0       	rjmp	.+46     	; 0xb54 <__clzsi2+0x64>
     b26:	80 e0       	ldi	r24, 0x00	; 0
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	a0 e0       	ldi	r26, 0x00	; 0
     b2c:	b0 e0       	ldi	r27, 0x00	; 0
     b2e:	12 c0       	rjmp	.+36     	; 0xb54 <__clzsi2+0x64>
     b30:	80 e0       	ldi	r24, 0x00	; 0
     b32:	e8 16       	cp	r14, r24
     b34:	80 e0       	ldi	r24, 0x00	; 0
     b36:	f8 06       	cpc	r15, r24
     b38:	80 e0       	ldi	r24, 0x00	; 0
     b3a:	08 07       	cpc	r16, r24
     b3c:	81 e0       	ldi	r24, 0x01	; 1
     b3e:	18 07       	cpc	r17, r24
     b40:	28 f0       	brcs	.+10     	; 0xb4c <__clzsi2+0x5c>
     b42:	88 e1       	ldi	r24, 0x18	; 24
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	a0 e0       	ldi	r26, 0x00	; 0
     b48:	b0 e0       	ldi	r27, 0x00	; 0
     b4a:	04 c0       	rjmp	.+8      	; 0xb54 <__clzsi2+0x64>
     b4c:	80 e1       	ldi	r24, 0x10	; 16
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	a0 e0       	ldi	r26, 0x00	; 0
     b52:	b0 e0       	ldi	r27, 0x00	; 0
     b54:	20 e2       	ldi	r18, 0x20	; 32
     b56:	30 e0       	ldi	r19, 0x00	; 0
     b58:	40 e0       	ldi	r20, 0x00	; 0
     b5a:	50 e0       	ldi	r21, 0x00	; 0
     b5c:	28 1b       	sub	r18, r24
     b5e:	39 0b       	sbc	r19, r25
     b60:	4a 0b       	sbc	r20, r26
     b62:	5b 0b       	sbc	r21, r27
     b64:	04 c0       	rjmp	.+8      	; 0xb6e <__clzsi2+0x7e>
     b66:	16 95       	lsr	r17
     b68:	07 95       	ror	r16
     b6a:	f7 94       	ror	r15
     b6c:	e7 94       	ror	r14
     b6e:	8a 95       	dec	r24
     b70:	d2 f7       	brpl	.-12     	; 0xb66 <__clzsi2+0x76>
     b72:	f7 01       	movw	r30, r14
     b74:	ed 57       	subi	r30, 0x7D	; 125
     b76:	ff 4f       	sbci	r31, 0xFF	; 255
     b78:	80 81       	ld	r24, Z
     b7a:	28 1b       	sub	r18, r24
     b7c:	31 09       	sbc	r19, r1
     b7e:	41 09       	sbc	r20, r1
     b80:	51 09       	sbc	r21, r1
     b82:	c9 01       	movw	r24, r18
     b84:	1f 91       	pop	r17
     b86:	0f 91       	pop	r16
     b88:	ff 90       	pop	r15
     b8a:	ef 90       	pop	r14
     b8c:	08 95       	ret

00000b8e <__pack_f>:
     b8e:	df 92       	push	r13
     b90:	ef 92       	push	r14
     b92:	ff 92       	push	r15
     b94:	0f 93       	push	r16
     b96:	1f 93       	push	r17
     b98:	fc 01       	movw	r30, r24
     b9a:	e4 80       	ldd	r14, Z+4	; 0x04
     b9c:	f5 80       	ldd	r15, Z+5	; 0x05
     b9e:	06 81       	ldd	r16, Z+6	; 0x06
     ba0:	17 81       	ldd	r17, Z+7	; 0x07
     ba2:	d1 80       	ldd	r13, Z+1	; 0x01
     ba4:	80 81       	ld	r24, Z
     ba6:	82 30       	cpi	r24, 0x02	; 2
     ba8:	48 f4       	brcc	.+18     	; 0xbbc <__pack_f+0x2e>
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	a0 e1       	ldi	r26, 0x10	; 16
     bb0:	b0 e0       	ldi	r27, 0x00	; 0
     bb2:	e8 2a       	or	r14, r24
     bb4:	f9 2a       	or	r15, r25
     bb6:	0a 2b       	or	r16, r26
     bb8:	1b 2b       	or	r17, r27
     bba:	a5 c0       	rjmp	.+330    	; 0xd06 <__pack_f+0x178>
     bbc:	84 30       	cpi	r24, 0x04	; 4
     bbe:	09 f4       	brne	.+2      	; 0xbc2 <__pack_f+0x34>
     bc0:	9f c0       	rjmp	.+318    	; 0xd00 <__pack_f+0x172>
     bc2:	82 30       	cpi	r24, 0x02	; 2
     bc4:	21 f4       	brne	.+8      	; 0xbce <__pack_f+0x40>
     bc6:	ee 24       	eor	r14, r14
     bc8:	ff 24       	eor	r15, r15
     bca:	87 01       	movw	r16, r14
     bcc:	05 c0       	rjmp	.+10     	; 0xbd8 <__pack_f+0x4a>
     bce:	e1 14       	cp	r14, r1
     bd0:	f1 04       	cpc	r15, r1
     bd2:	01 05       	cpc	r16, r1
     bd4:	11 05       	cpc	r17, r1
     bd6:	19 f4       	brne	.+6      	; 0xbde <__pack_f+0x50>
     bd8:	e0 e0       	ldi	r30, 0x00	; 0
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	96 c0       	rjmp	.+300    	; 0xd0a <__pack_f+0x17c>
     bde:	62 81       	ldd	r22, Z+2	; 0x02
     be0:	73 81       	ldd	r23, Z+3	; 0x03
     be2:	9f ef       	ldi	r25, 0xFF	; 255
     be4:	62 38       	cpi	r22, 0x82	; 130
     be6:	79 07       	cpc	r23, r25
     be8:	0c f0       	brlt	.+2      	; 0xbec <__pack_f+0x5e>
     bea:	5b c0       	rjmp	.+182    	; 0xca2 <__pack_f+0x114>
     bec:	22 e8       	ldi	r18, 0x82	; 130
     bee:	3f ef       	ldi	r19, 0xFF	; 255
     bf0:	26 1b       	sub	r18, r22
     bf2:	37 0b       	sbc	r19, r23
     bf4:	2a 31       	cpi	r18, 0x1A	; 26
     bf6:	31 05       	cpc	r19, r1
     bf8:	2c f0       	brlt	.+10     	; 0xc04 <__pack_f+0x76>
     bfa:	20 e0       	ldi	r18, 0x00	; 0
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	40 e0       	ldi	r20, 0x00	; 0
     c00:	50 e0       	ldi	r21, 0x00	; 0
     c02:	2a c0       	rjmp	.+84     	; 0xc58 <__pack_f+0xca>
     c04:	b8 01       	movw	r22, r16
     c06:	a7 01       	movw	r20, r14
     c08:	02 2e       	mov	r0, r18
     c0a:	04 c0       	rjmp	.+8      	; 0xc14 <__pack_f+0x86>
     c0c:	76 95       	lsr	r23
     c0e:	67 95       	ror	r22
     c10:	57 95       	ror	r21
     c12:	47 95       	ror	r20
     c14:	0a 94       	dec	r0
     c16:	d2 f7       	brpl	.-12     	; 0xc0c <__pack_f+0x7e>
     c18:	81 e0       	ldi	r24, 0x01	; 1
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	a0 e0       	ldi	r26, 0x00	; 0
     c1e:	b0 e0       	ldi	r27, 0x00	; 0
     c20:	04 c0       	rjmp	.+8      	; 0xc2a <__pack_f+0x9c>
     c22:	88 0f       	add	r24, r24
     c24:	99 1f       	adc	r25, r25
     c26:	aa 1f       	adc	r26, r26
     c28:	bb 1f       	adc	r27, r27
     c2a:	2a 95       	dec	r18
     c2c:	d2 f7       	brpl	.-12     	; 0xc22 <__pack_f+0x94>
     c2e:	01 97       	sbiw	r24, 0x01	; 1
     c30:	a1 09       	sbc	r26, r1
     c32:	b1 09       	sbc	r27, r1
     c34:	8e 21       	and	r24, r14
     c36:	9f 21       	and	r25, r15
     c38:	a0 23       	and	r26, r16
     c3a:	b1 23       	and	r27, r17
     c3c:	00 97       	sbiw	r24, 0x00	; 0
     c3e:	a1 05       	cpc	r26, r1
     c40:	b1 05       	cpc	r27, r1
     c42:	21 f0       	breq	.+8      	; 0xc4c <__pack_f+0xbe>
     c44:	81 e0       	ldi	r24, 0x01	; 1
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	a0 e0       	ldi	r26, 0x00	; 0
     c4a:	b0 e0       	ldi	r27, 0x00	; 0
     c4c:	9a 01       	movw	r18, r20
     c4e:	ab 01       	movw	r20, r22
     c50:	28 2b       	or	r18, r24
     c52:	39 2b       	or	r19, r25
     c54:	4a 2b       	or	r20, r26
     c56:	5b 2b       	or	r21, r27
     c58:	da 01       	movw	r26, r20
     c5a:	c9 01       	movw	r24, r18
     c5c:	8f 77       	andi	r24, 0x7F	; 127
     c5e:	90 70       	andi	r25, 0x00	; 0
     c60:	a0 70       	andi	r26, 0x00	; 0
     c62:	b0 70       	andi	r27, 0x00	; 0
     c64:	80 34       	cpi	r24, 0x40	; 64
     c66:	91 05       	cpc	r25, r1
     c68:	a1 05       	cpc	r26, r1
     c6a:	b1 05       	cpc	r27, r1
     c6c:	39 f4       	brne	.+14     	; 0xc7c <__pack_f+0xee>
     c6e:	27 ff       	sbrs	r18, 7
     c70:	09 c0       	rjmp	.+18     	; 0xc84 <__pack_f+0xf6>
     c72:	20 5c       	subi	r18, 0xC0	; 192
     c74:	3f 4f       	sbci	r19, 0xFF	; 255
     c76:	4f 4f       	sbci	r20, 0xFF	; 255
     c78:	5f 4f       	sbci	r21, 0xFF	; 255
     c7a:	04 c0       	rjmp	.+8      	; 0xc84 <__pack_f+0xf6>
     c7c:	21 5c       	subi	r18, 0xC1	; 193
     c7e:	3f 4f       	sbci	r19, 0xFF	; 255
     c80:	4f 4f       	sbci	r20, 0xFF	; 255
     c82:	5f 4f       	sbci	r21, 0xFF	; 255
     c84:	e0 e0       	ldi	r30, 0x00	; 0
     c86:	f0 e0       	ldi	r31, 0x00	; 0
     c88:	20 30       	cpi	r18, 0x00	; 0
     c8a:	a0 e0       	ldi	r26, 0x00	; 0
     c8c:	3a 07       	cpc	r19, r26
     c8e:	a0 e0       	ldi	r26, 0x00	; 0
     c90:	4a 07       	cpc	r20, r26
     c92:	a0 e4       	ldi	r26, 0x40	; 64
     c94:	5a 07       	cpc	r21, r26
     c96:	10 f0       	brcs	.+4      	; 0xc9c <__pack_f+0x10e>
     c98:	e1 e0       	ldi	r30, 0x01	; 1
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	79 01       	movw	r14, r18
     c9e:	8a 01       	movw	r16, r20
     ca0:	27 c0       	rjmp	.+78     	; 0xcf0 <__pack_f+0x162>
     ca2:	60 38       	cpi	r22, 0x80	; 128
     ca4:	71 05       	cpc	r23, r1
     ca6:	64 f5       	brge	.+88     	; 0xd00 <__pack_f+0x172>
     ca8:	fb 01       	movw	r30, r22
     caa:	e1 58       	subi	r30, 0x81	; 129
     cac:	ff 4f       	sbci	r31, 0xFF	; 255
     cae:	d8 01       	movw	r26, r16
     cb0:	c7 01       	movw	r24, r14
     cb2:	8f 77       	andi	r24, 0x7F	; 127
     cb4:	90 70       	andi	r25, 0x00	; 0
     cb6:	a0 70       	andi	r26, 0x00	; 0
     cb8:	b0 70       	andi	r27, 0x00	; 0
     cba:	80 34       	cpi	r24, 0x40	; 64
     cbc:	91 05       	cpc	r25, r1
     cbe:	a1 05       	cpc	r26, r1
     cc0:	b1 05       	cpc	r27, r1
     cc2:	39 f4       	brne	.+14     	; 0xcd2 <__pack_f+0x144>
     cc4:	e7 fe       	sbrs	r14, 7
     cc6:	0d c0       	rjmp	.+26     	; 0xce2 <__pack_f+0x154>
     cc8:	80 e4       	ldi	r24, 0x40	; 64
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	a0 e0       	ldi	r26, 0x00	; 0
     cce:	b0 e0       	ldi	r27, 0x00	; 0
     cd0:	04 c0       	rjmp	.+8      	; 0xcda <__pack_f+0x14c>
     cd2:	8f e3       	ldi	r24, 0x3F	; 63
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	a0 e0       	ldi	r26, 0x00	; 0
     cd8:	b0 e0       	ldi	r27, 0x00	; 0
     cda:	e8 0e       	add	r14, r24
     cdc:	f9 1e       	adc	r15, r25
     cde:	0a 1f       	adc	r16, r26
     ce0:	1b 1f       	adc	r17, r27
     ce2:	17 ff       	sbrs	r17, 7
     ce4:	05 c0       	rjmp	.+10     	; 0xcf0 <__pack_f+0x162>
     ce6:	16 95       	lsr	r17
     ce8:	07 95       	ror	r16
     cea:	f7 94       	ror	r15
     cec:	e7 94       	ror	r14
     cee:	31 96       	adiw	r30, 0x01	; 1
     cf0:	87 e0       	ldi	r24, 0x07	; 7
     cf2:	16 95       	lsr	r17
     cf4:	07 95       	ror	r16
     cf6:	f7 94       	ror	r15
     cf8:	e7 94       	ror	r14
     cfa:	8a 95       	dec	r24
     cfc:	d1 f7       	brne	.-12     	; 0xcf2 <__pack_f+0x164>
     cfe:	05 c0       	rjmp	.+10     	; 0xd0a <__pack_f+0x17c>
     d00:	ee 24       	eor	r14, r14
     d02:	ff 24       	eor	r15, r15
     d04:	87 01       	movw	r16, r14
     d06:	ef ef       	ldi	r30, 0xFF	; 255
     d08:	f0 e0       	ldi	r31, 0x00	; 0
     d0a:	6e 2f       	mov	r22, r30
     d0c:	67 95       	ror	r22
     d0e:	66 27       	eor	r22, r22
     d10:	67 95       	ror	r22
     d12:	90 2f       	mov	r25, r16
     d14:	9f 77       	andi	r25, 0x7F	; 127
     d16:	d7 94       	ror	r13
     d18:	dd 24       	eor	r13, r13
     d1a:	d7 94       	ror	r13
     d1c:	8e 2f       	mov	r24, r30
     d1e:	86 95       	lsr	r24
     d20:	49 2f       	mov	r20, r25
     d22:	46 2b       	or	r20, r22
     d24:	58 2f       	mov	r21, r24
     d26:	5d 29       	or	r21, r13
     d28:	b7 01       	movw	r22, r14
     d2a:	ca 01       	movw	r24, r20
     d2c:	1f 91       	pop	r17
     d2e:	0f 91       	pop	r16
     d30:	ff 90       	pop	r15
     d32:	ef 90       	pop	r14
     d34:	df 90       	pop	r13
     d36:	08 95       	ret

00000d38 <__unpack_f>:
     d38:	fc 01       	movw	r30, r24
     d3a:	db 01       	movw	r26, r22
     d3c:	40 81       	ld	r20, Z
     d3e:	51 81       	ldd	r21, Z+1	; 0x01
     d40:	22 81       	ldd	r18, Z+2	; 0x02
     d42:	62 2f       	mov	r22, r18
     d44:	6f 77       	andi	r22, 0x7F	; 127
     d46:	70 e0       	ldi	r23, 0x00	; 0
     d48:	22 1f       	adc	r18, r18
     d4a:	22 27       	eor	r18, r18
     d4c:	22 1f       	adc	r18, r18
     d4e:	93 81       	ldd	r25, Z+3	; 0x03
     d50:	89 2f       	mov	r24, r25
     d52:	88 0f       	add	r24, r24
     d54:	82 2b       	or	r24, r18
     d56:	28 2f       	mov	r18, r24
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	99 1f       	adc	r25, r25
     d5c:	99 27       	eor	r25, r25
     d5e:	99 1f       	adc	r25, r25
     d60:	11 96       	adiw	r26, 0x01	; 1
     d62:	9c 93       	st	X, r25
     d64:	11 97       	sbiw	r26, 0x01	; 1
     d66:	21 15       	cp	r18, r1
     d68:	31 05       	cpc	r19, r1
     d6a:	a9 f5       	brne	.+106    	; 0xdd6 <__unpack_f+0x9e>
     d6c:	41 15       	cp	r20, r1
     d6e:	51 05       	cpc	r21, r1
     d70:	61 05       	cpc	r22, r1
     d72:	71 05       	cpc	r23, r1
     d74:	11 f4       	brne	.+4      	; 0xd7a <__unpack_f+0x42>
     d76:	82 e0       	ldi	r24, 0x02	; 2
     d78:	37 c0       	rjmp	.+110    	; 0xde8 <__unpack_f+0xb0>
     d7a:	82 e8       	ldi	r24, 0x82	; 130
     d7c:	9f ef       	ldi	r25, 0xFF	; 255
     d7e:	13 96       	adiw	r26, 0x03	; 3
     d80:	9c 93       	st	X, r25
     d82:	8e 93       	st	-X, r24
     d84:	12 97       	sbiw	r26, 0x02	; 2
     d86:	9a 01       	movw	r18, r20
     d88:	ab 01       	movw	r20, r22
     d8a:	67 e0       	ldi	r22, 0x07	; 7
     d8c:	22 0f       	add	r18, r18
     d8e:	33 1f       	adc	r19, r19
     d90:	44 1f       	adc	r20, r20
     d92:	55 1f       	adc	r21, r21
     d94:	6a 95       	dec	r22
     d96:	d1 f7       	brne	.-12     	; 0xd8c <__unpack_f+0x54>
     d98:	83 e0       	ldi	r24, 0x03	; 3
     d9a:	8c 93       	st	X, r24
     d9c:	0d c0       	rjmp	.+26     	; 0xdb8 <__unpack_f+0x80>
     d9e:	22 0f       	add	r18, r18
     da0:	33 1f       	adc	r19, r19
     da2:	44 1f       	adc	r20, r20
     da4:	55 1f       	adc	r21, r21
     da6:	12 96       	adiw	r26, 0x02	; 2
     da8:	8d 91       	ld	r24, X+
     daa:	9c 91       	ld	r25, X
     dac:	13 97       	sbiw	r26, 0x03	; 3
     dae:	01 97       	sbiw	r24, 0x01	; 1
     db0:	13 96       	adiw	r26, 0x03	; 3
     db2:	9c 93       	st	X, r25
     db4:	8e 93       	st	-X, r24
     db6:	12 97       	sbiw	r26, 0x02	; 2
     db8:	20 30       	cpi	r18, 0x00	; 0
     dba:	80 e0       	ldi	r24, 0x00	; 0
     dbc:	38 07       	cpc	r19, r24
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	48 07       	cpc	r20, r24
     dc2:	80 e4       	ldi	r24, 0x40	; 64
     dc4:	58 07       	cpc	r21, r24
     dc6:	58 f3       	brcs	.-42     	; 0xd9e <__unpack_f+0x66>
     dc8:	14 96       	adiw	r26, 0x04	; 4
     dca:	2d 93       	st	X+, r18
     dcc:	3d 93       	st	X+, r19
     dce:	4d 93       	st	X+, r20
     dd0:	5c 93       	st	X, r21
     dd2:	17 97       	sbiw	r26, 0x07	; 7
     dd4:	08 95       	ret
     dd6:	2f 3f       	cpi	r18, 0xFF	; 255
     dd8:	31 05       	cpc	r19, r1
     dda:	79 f4       	brne	.+30     	; 0xdfa <__unpack_f+0xc2>
     ddc:	41 15       	cp	r20, r1
     dde:	51 05       	cpc	r21, r1
     de0:	61 05       	cpc	r22, r1
     de2:	71 05       	cpc	r23, r1
     de4:	19 f4       	brne	.+6      	; 0xdec <__unpack_f+0xb4>
     de6:	84 e0       	ldi	r24, 0x04	; 4
     de8:	8c 93       	st	X, r24
     dea:	08 95       	ret
     dec:	64 ff       	sbrs	r22, 4
     dee:	03 c0       	rjmp	.+6      	; 0xdf6 <__unpack_f+0xbe>
     df0:	81 e0       	ldi	r24, 0x01	; 1
     df2:	8c 93       	st	X, r24
     df4:	12 c0       	rjmp	.+36     	; 0xe1a <__unpack_f+0xe2>
     df6:	1c 92       	st	X, r1
     df8:	10 c0       	rjmp	.+32     	; 0xe1a <__unpack_f+0xe2>
     dfa:	2f 57       	subi	r18, 0x7F	; 127
     dfc:	30 40       	sbci	r19, 0x00	; 0
     dfe:	13 96       	adiw	r26, 0x03	; 3
     e00:	3c 93       	st	X, r19
     e02:	2e 93       	st	-X, r18
     e04:	12 97       	sbiw	r26, 0x02	; 2
     e06:	83 e0       	ldi	r24, 0x03	; 3
     e08:	8c 93       	st	X, r24
     e0a:	87 e0       	ldi	r24, 0x07	; 7
     e0c:	44 0f       	add	r20, r20
     e0e:	55 1f       	adc	r21, r21
     e10:	66 1f       	adc	r22, r22
     e12:	77 1f       	adc	r23, r23
     e14:	8a 95       	dec	r24
     e16:	d1 f7       	brne	.-12     	; 0xe0c <__unpack_f+0xd4>
     e18:	70 64       	ori	r23, 0x40	; 64
     e1a:	14 96       	adiw	r26, 0x04	; 4
     e1c:	4d 93       	st	X+, r20
     e1e:	5d 93       	st	X+, r21
     e20:	6d 93       	st	X+, r22
     e22:	7c 93       	st	X, r23
     e24:	17 97       	sbiw	r26, 0x07	; 7
     e26:	08 95       	ret

00000e28 <__fpcmp_parts_f>:
     e28:	1f 93       	push	r17
     e2a:	dc 01       	movw	r26, r24
     e2c:	fb 01       	movw	r30, r22
     e2e:	9c 91       	ld	r25, X
     e30:	92 30       	cpi	r25, 0x02	; 2
     e32:	08 f4       	brcc	.+2      	; 0xe36 <__fpcmp_parts_f+0xe>
     e34:	47 c0       	rjmp	.+142    	; 0xec4 <__fpcmp_parts_f+0x9c>
     e36:	80 81       	ld	r24, Z
     e38:	82 30       	cpi	r24, 0x02	; 2
     e3a:	08 f4       	brcc	.+2      	; 0xe3e <__fpcmp_parts_f+0x16>
     e3c:	43 c0       	rjmp	.+134    	; 0xec4 <__fpcmp_parts_f+0x9c>
     e3e:	94 30       	cpi	r25, 0x04	; 4
     e40:	51 f4       	brne	.+20     	; 0xe56 <__fpcmp_parts_f+0x2e>
     e42:	11 96       	adiw	r26, 0x01	; 1
     e44:	1c 91       	ld	r17, X
     e46:	84 30       	cpi	r24, 0x04	; 4
     e48:	99 f5       	brne	.+102    	; 0xeb0 <__fpcmp_parts_f+0x88>
     e4a:	81 81       	ldd	r24, Z+1	; 0x01
     e4c:	68 2f       	mov	r22, r24
     e4e:	70 e0       	ldi	r23, 0x00	; 0
     e50:	61 1b       	sub	r22, r17
     e52:	71 09       	sbc	r23, r1
     e54:	3f c0       	rjmp	.+126    	; 0xed4 <__fpcmp_parts_f+0xac>
     e56:	84 30       	cpi	r24, 0x04	; 4
     e58:	21 f0       	breq	.+8      	; 0xe62 <__fpcmp_parts_f+0x3a>
     e5a:	92 30       	cpi	r25, 0x02	; 2
     e5c:	31 f4       	brne	.+12     	; 0xe6a <__fpcmp_parts_f+0x42>
     e5e:	82 30       	cpi	r24, 0x02	; 2
     e60:	b9 f1       	breq	.+110    	; 0xed0 <__fpcmp_parts_f+0xa8>
     e62:	81 81       	ldd	r24, Z+1	; 0x01
     e64:	88 23       	and	r24, r24
     e66:	89 f1       	breq	.+98     	; 0xeca <__fpcmp_parts_f+0xa2>
     e68:	2d c0       	rjmp	.+90     	; 0xec4 <__fpcmp_parts_f+0x9c>
     e6a:	11 96       	adiw	r26, 0x01	; 1
     e6c:	1c 91       	ld	r17, X
     e6e:	11 97       	sbiw	r26, 0x01	; 1
     e70:	82 30       	cpi	r24, 0x02	; 2
     e72:	f1 f0       	breq	.+60     	; 0xeb0 <__fpcmp_parts_f+0x88>
     e74:	81 81       	ldd	r24, Z+1	; 0x01
     e76:	18 17       	cp	r17, r24
     e78:	d9 f4       	brne	.+54     	; 0xeb0 <__fpcmp_parts_f+0x88>
     e7a:	12 96       	adiw	r26, 0x02	; 2
     e7c:	2d 91       	ld	r18, X+
     e7e:	3c 91       	ld	r19, X
     e80:	13 97       	sbiw	r26, 0x03	; 3
     e82:	82 81       	ldd	r24, Z+2	; 0x02
     e84:	93 81       	ldd	r25, Z+3	; 0x03
     e86:	82 17       	cp	r24, r18
     e88:	93 07       	cpc	r25, r19
     e8a:	94 f0       	brlt	.+36     	; 0xeb0 <__fpcmp_parts_f+0x88>
     e8c:	28 17       	cp	r18, r24
     e8e:	39 07       	cpc	r19, r25
     e90:	bc f0       	brlt	.+46     	; 0xec0 <__fpcmp_parts_f+0x98>
     e92:	14 96       	adiw	r26, 0x04	; 4
     e94:	8d 91       	ld	r24, X+
     e96:	9d 91       	ld	r25, X+
     e98:	0d 90       	ld	r0, X+
     e9a:	bc 91       	ld	r27, X
     e9c:	a0 2d       	mov	r26, r0
     e9e:	24 81       	ldd	r18, Z+4	; 0x04
     ea0:	35 81       	ldd	r19, Z+5	; 0x05
     ea2:	46 81       	ldd	r20, Z+6	; 0x06
     ea4:	57 81       	ldd	r21, Z+7	; 0x07
     ea6:	28 17       	cp	r18, r24
     ea8:	39 07       	cpc	r19, r25
     eaa:	4a 07       	cpc	r20, r26
     eac:	5b 07       	cpc	r21, r27
     eae:	18 f4       	brcc	.+6      	; 0xeb6 <__fpcmp_parts_f+0x8e>
     eb0:	11 23       	and	r17, r17
     eb2:	41 f0       	breq	.+16     	; 0xec4 <__fpcmp_parts_f+0x9c>
     eb4:	0a c0       	rjmp	.+20     	; 0xeca <__fpcmp_parts_f+0xa2>
     eb6:	82 17       	cp	r24, r18
     eb8:	93 07       	cpc	r25, r19
     eba:	a4 07       	cpc	r26, r20
     ebc:	b5 07       	cpc	r27, r21
     ebe:	40 f4       	brcc	.+16     	; 0xed0 <__fpcmp_parts_f+0xa8>
     ec0:	11 23       	and	r17, r17
     ec2:	19 f0       	breq	.+6      	; 0xeca <__fpcmp_parts_f+0xa2>
     ec4:	61 e0       	ldi	r22, 0x01	; 1
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	05 c0       	rjmp	.+10     	; 0xed4 <__fpcmp_parts_f+0xac>
     eca:	6f ef       	ldi	r22, 0xFF	; 255
     ecc:	7f ef       	ldi	r23, 0xFF	; 255
     ece:	02 c0       	rjmp	.+4      	; 0xed4 <__fpcmp_parts_f+0xac>
     ed0:	60 e0       	ldi	r22, 0x00	; 0
     ed2:	70 e0       	ldi	r23, 0x00	; 0
     ed4:	cb 01       	movw	r24, r22
     ed6:	1f 91       	pop	r17
     ed8:	08 95       	ret

00000eda <CLCD_voidSendCommend>:
#include "CLCD_config.h"
#include "CLCD_private.h"
#include <util/delay.h>

void CLCD_voidSendCommend(u8 Copy_u8Commend)
{
     eda:	df 93       	push	r29
     edc:	cf 93       	push	r28
     ede:	cd b7       	in	r28, 0x3d	; 61
     ee0:	de b7       	in	r29, 0x3e	; 62
     ee2:	2f 97       	sbiw	r28, 0x0f	; 15
     ee4:	0f b6       	in	r0, 0x3f	; 63
     ee6:	f8 94       	cli
     ee8:	de bf       	out	0x3e, r29	; 62
     eea:	0f be       	out	0x3f, r0	; 63
     eec:	cd bf       	out	0x3d, r28	; 61
     eee:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_LOW);
     ef0:	82 e0       	ldi	r24, 0x02	; 2
     ef2:	60 e0       	ldi	r22, 0x00	; 0
     ef4:	40 e0       	ldi	r20, 0x00	; 0
     ef6:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RW_PIN,DIO_u8PIN_LOW);
     efa:	82 e0       	ldi	r24, 0x02	; 2
     efc:	61 e0       	ldi	r22, 0x01	; 1
     efe:	40 e0       	ldi	r20, 0x00	; 0
     f00:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>
	DIO_u8SetPortValue(CLCD_DATA_PORT,Copy_u8Commend);
     f04:	80 e0       	ldi	r24, 0x00	; 0
     f06:	6f 85       	ldd	r22, Y+15	; 0x0f
     f08:	0e 94 96 17 	call	0x2f2c	; 0x2f2c <DIO_u8SetPortValue>
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
     f0c:	82 e0       	ldi	r24, 0x02	; 2
     f0e:	62 e0       	ldi	r22, 0x02	; 2
     f10:	41 e0       	ldi	r20, 0x01	; 1
     f12:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>
     f16:	80 e0       	ldi	r24, 0x00	; 0
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	a0 e0       	ldi	r26, 0x00	; 0
     f1c:	b0 e4       	ldi	r27, 0x40	; 64
     f1e:	8b 87       	std	Y+11, r24	; 0x0b
     f20:	9c 87       	std	Y+12, r25	; 0x0c
     f22:	ad 87       	std	Y+13, r26	; 0x0d
     f24:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f26:	6b 85       	ldd	r22, Y+11	; 0x0b
     f28:	7c 85       	ldd	r23, Y+12	; 0x0c
     f2a:	8d 85       	ldd	r24, Y+13	; 0x0d
     f2c:	9e 85       	ldd	r25, Y+14	; 0x0e
     f2e:	20 e0       	ldi	r18, 0x00	; 0
     f30:	30 e0       	ldi	r19, 0x00	; 0
     f32:	4a ef       	ldi	r20, 0xFA	; 250
     f34:	54 e4       	ldi	r21, 0x44	; 68
     f36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f3a:	dc 01       	movw	r26, r24
     f3c:	cb 01       	movw	r24, r22
     f3e:	8f 83       	std	Y+7, r24	; 0x07
     f40:	98 87       	std	Y+8, r25	; 0x08
     f42:	a9 87       	std	Y+9, r26	; 0x09
     f44:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     f46:	6f 81       	ldd	r22, Y+7	; 0x07
     f48:	78 85       	ldd	r23, Y+8	; 0x08
     f4a:	89 85       	ldd	r24, Y+9	; 0x09
     f4c:	9a 85       	ldd	r25, Y+10	; 0x0a
     f4e:	20 e0       	ldi	r18, 0x00	; 0
     f50:	30 e0       	ldi	r19, 0x00	; 0
     f52:	40 e8       	ldi	r20, 0x80	; 128
     f54:	5f e3       	ldi	r21, 0x3F	; 63
     f56:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
     f5a:	88 23       	and	r24, r24
     f5c:	2c f4       	brge	.+10     	; 0xf68 <CLCD_voidSendCommend+0x8e>
		__ticks = 1;
     f5e:	81 e0       	ldi	r24, 0x01	; 1
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	9e 83       	std	Y+6, r25	; 0x06
     f64:	8d 83       	std	Y+5, r24	; 0x05
     f66:	3f c0       	rjmp	.+126    	; 0xfe6 <CLCD_voidSendCommend+0x10c>
	else if (__tmp > 65535)
     f68:	6f 81       	ldd	r22, Y+7	; 0x07
     f6a:	78 85       	ldd	r23, Y+8	; 0x08
     f6c:	89 85       	ldd	r24, Y+9	; 0x09
     f6e:	9a 85       	ldd	r25, Y+10	; 0x0a
     f70:	20 e0       	ldi	r18, 0x00	; 0
     f72:	3f ef       	ldi	r19, 0xFF	; 255
     f74:	4f e7       	ldi	r20, 0x7F	; 127
     f76:	57 e4       	ldi	r21, 0x47	; 71
     f78:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
     f7c:	18 16       	cp	r1, r24
     f7e:	4c f5       	brge	.+82     	; 0xfd2 <CLCD_voidSendCommend+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f80:	6b 85       	ldd	r22, Y+11	; 0x0b
     f82:	7c 85       	ldd	r23, Y+12	; 0x0c
     f84:	8d 85       	ldd	r24, Y+13	; 0x0d
     f86:	9e 85       	ldd	r25, Y+14	; 0x0e
     f88:	20 e0       	ldi	r18, 0x00	; 0
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	40 e2       	ldi	r20, 0x20	; 32
     f8e:	51 e4       	ldi	r21, 0x41	; 65
     f90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f94:	dc 01       	movw	r26, r24
     f96:	cb 01       	movw	r24, r22
     f98:	bc 01       	movw	r22, r24
     f9a:	cd 01       	movw	r24, r26
     f9c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     fa0:	dc 01       	movw	r26, r24
     fa2:	cb 01       	movw	r24, r22
     fa4:	9e 83       	std	Y+6, r25	; 0x06
     fa6:	8d 83       	std	Y+5, r24	; 0x05
     fa8:	0f c0       	rjmp	.+30     	; 0xfc8 <CLCD_voidSendCommend+0xee>
     faa:	88 ec       	ldi	r24, 0xC8	; 200
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	9c 83       	std	Y+4, r25	; 0x04
     fb0:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     fb2:	8b 81       	ldd	r24, Y+3	; 0x03
     fb4:	9c 81       	ldd	r25, Y+4	; 0x04
     fb6:	01 97       	sbiw	r24, 0x01	; 1
     fb8:	f1 f7       	brne	.-4      	; 0xfb6 <CLCD_voidSendCommend+0xdc>
     fba:	9c 83       	std	Y+4, r25	; 0x04
     fbc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fbe:	8d 81       	ldd	r24, Y+5	; 0x05
     fc0:	9e 81       	ldd	r25, Y+6	; 0x06
     fc2:	01 97       	sbiw	r24, 0x01	; 1
     fc4:	9e 83       	std	Y+6, r25	; 0x06
     fc6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fc8:	8d 81       	ldd	r24, Y+5	; 0x05
     fca:	9e 81       	ldd	r25, Y+6	; 0x06
     fcc:	00 97       	sbiw	r24, 0x00	; 0
     fce:	69 f7       	brne	.-38     	; 0xfaa <CLCD_voidSendCommend+0xd0>
     fd0:	14 c0       	rjmp	.+40     	; 0xffa <CLCD_voidSendCommend+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fd2:	6f 81       	ldd	r22, Y+7	; 0x07
     fd4:	78 85       	ldd	r23, Y+8	; 0x08
     fd6:	89 85       	ldd	r24, Y+9	; 0x09
     fd8:	9a 85       	ldd	r25, Y+10	; 0x0a
     fda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     fde:	dc 01       	movw	r26, r24
     fe0:	cb 01       	movw	r24, r22
     fe2:	9e 83       	std	Y+6, r25	; 0x06
     fe4:	8d 83       	std	Y+5, r24	; 0x05
     fe6:	8d 81       	ldd	r24, Y+5	; 0x05
     fe8:	9e 81       	ldd	r25, Y+6	; 0x06
     fea:	9a 83       	std	Y+2, r25	; 0x02
     fec:	89 83       	std	Y+1, r24	; 0x01
     fee:	89 81       	ldd	r24, Y+1	; 0x01
     ff0:	9a 81       	ldd	r25, Y+2	; 0x02
     ff2:	01 97       	sbiw	r24, 0x01	; 1
     ff4:	f1 f7       	brne	.-4      	; 0xff2 <CLCD_voidSendCommend+0x118>
     ff6:	9a 83       	std	Y+2, r25	; 0x02
     ff8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
     ffa:	82 e0       	ldi	r24, 0x02	; 2
     ffc:	62 e0       	ldi	r22, 0x02	; 2
     ffe:	40 e0       	ldi	r20, 0x00	; 0
    1000:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>

}
    1004:	2f 96       	adiw	r28, 0x0f	; 15
    1006:	0f b6       	in	r0, 0x3f	; 63
    1008:	f8 94       	cli
    100a:	de bf       	out	0x3e, r29	; 62
    100c:	0f be       	out	0x3f, r0	; 63
    100e:	cd bf       	out	0x3d, r28	; 61
    1010:	cf 91       	pop	r28
    1012:	df 91       	pop	r29
    1014:	08 95       	ret

00001016 <CLCD_voidSendData>:
void CLCD_voidSendData(u8 Copy_u8Data)
{
    1016:	df 93       	push	r29
    1018:	cf 93       	push	r28
    101a:	cd b7       	in	r28, 0x3d	; 61
    101c:	de b7       	in	r29, 0x3e	; 62
    101e:	2f 97       	sbiw	r28, 0x0f	; 15
    1020:	0f b6       	in	r0, 0x3f	; 63
    1022:	f8 94       	cli
    1024:	de bf       	out	0x3e, r29	; 62
    1026:	0f be       	out	0x3f, r0	; 63
    1028:	cd bf       	out	0x3d, r28	; 61
    102a:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_HIGH);
    102c:	82 e0       	ldi	r24, 0x02	; 2
    102e:	60 e0       	ldi	r22, 0x00	; 0
    1030:	41 e0       	ldi	r20, 0x01	; 1
    1032:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RW_PIN,DIO_u8PIN_LOW);
    1036:	82 e0       	ldi	r24, 0x02	; 2
    1038:	61 e0       	ldi	r22, 0x01	; 1
    103a:	40 e0       	ldi	r20, 0x00	; 0
    103c:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>
	DIO_u8SetPortValue(CLCD_DATA_PORT,Copy_u8Data);
    1040:	80 e0       	ldi	r24, 0x00	; 0
    1042:	6f 85       	ldd	r22, Y+15	; 0x0f
    1044:	0e 94 96 17 	call	0x2f2c	; 0x2f2c <DIO_u8SetPortValue>
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
    1048:	82 e0       	ldi	r24, 0x02	; 2
    104a:	62 e0       	ldi	r22, 0x02	; 2
    104c:	41 e0       	ldi	r20, 0x01	; 1
    104e:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>
    1052:	80 e0       	ldi	r24, 0x00	; 0
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	a0 e0       	ldi	r26, 0x00	; 0
    1058:	b0 e4       	ldi	r27, 0x40	; 64
    105a:	8b 87       	std	Y+11, r24	; 0x0b
    105c:	9c 87       	std	Y+12, r25	; 0x0c
    105e:	ad 87       	std	Y+13, r26	; 0x0d
    1060:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1062:	6b 85       	ldd	r22, Y+11	; 0x0b
    1064:	7c 85       	ldd	r23, Y+12	; 0x0c
    1066:	8d 85       	ldd	r24, Y+13	; 0x0d
    1068:	9e 85       	ldd	r25, Y+14	; 0x0e
    106a:	20 e0       	ldi	r18, 0x00	; 0
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	4a ef       	ldi	r20, 0xFA	; 250
    1070:	54 e4       	ldi	r21, 0x44	; 68
    1072:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1076:	dc 01       	movw	r26, r24
    1078:	cb 01       	movw	r24, r22
    107a:	8f 83       	std	Y+7, r24	; 0x07
    107c:	98 87       	std	Y+8, r25	; 0x08
    107e:	a9 87       	std	Y+9, r26	; 0x09
    1080:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1082:	6f 81       	ldd	r22, Y+7	; 0x07
    1084:	78 85       	ldd	r23, Y+8	; 0x08
    1086:	89 85       	ldd	r24, Y+9	; 0x09
    1088:	9a 85       	ldd	r25, Y+10	; 0x0a
    108a:	20 e0       	ldi	r18, 0x00	; 0
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	40 e8       	ldi	r20, 0x80	; 128
    1090:	5f e3       	ldi	r21, 0x3F	; 63
    1092:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1096:	88 23       	and	r24, r24
    1098:	2c f4       	brge	.+10     	; 0x10a4 <CLCD_voidSendData+0x8e>
		__ticks = 1;
    109a:	81 e0       	ldi	r24, 0x01	; 1
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	9e 83       	std	Y+6, r25	; 0x06
    10a0:	8d 83       	std	Y+5, r24	; 0x05
    10a2:	3f c0       	rjmp	.+126    	; 0x1122 <CLCD_voidSendData+0x10c>
	else if (__tmp > 65535)
    10a4:	6f 81       	ldd	r22, Y+7	; 0x07
    10a6:	78 85       	ldd	r23, Y+8	; 0x08
    10a8:	89 85       	ldd	r24, Y+9	; 0x09
    10aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    10ac:	20 e0       	ldi	r18, 0x00	; 0
    10ae:	3f ef       	ldi	r19, 0xFF	; 255
    10b0:	4f e7       	ldi	r20, 0x7F	; 127
    10b2:	57 e4       	ldi	r21, 0x47	; 71
    10b4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    10b8:	18 16       	cp	r1, r24
    10ba:	4c f5       	brge	.+82     	; 0x110e <CLCD_voidSendData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10bc:	6b 85       	ldd	r22, Y+11	; 0x0b
    10be:	7c 85       	ldd	r23, Y+12	; 0x0c
    10c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    10c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    10c4:	20 e0       	ldi	r18, 0x00	; 0
    10c6:	30 e0       	ldi	r19, 0x00	; 0
    10c8:	40 e2       	ldi	r20, 0x20	; 32
    10ca:	51 e4       	ldi	r21, 0x41	; 65
    10cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    10d0:	dc 01       	movw	r26, r24
    10d2:	cb 01       	movw	r24, r22
    10d4:	bc 01       	movw	r22, r24
    10d6:	cd 01       	movw	r24, r26
    10d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    10dc:	dc 01       	movw	r26, r24
    10de:	cb 01       	movw	r24, r22
    10e0:	9e 83       	std	Y+6, r25	; 0x06
    10e2:	8d 83       	std	Y+5, r24	; 0x05
    10e4:	0f c0       	rjmp	.+30     	; 0x1104 <CLCD_voidSendData+0xee>
    10e6:	88 ec       	ldi	r24, 0xC8	; 200
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	9c 83       	std	Y+4, r25	; 0x04
    10ec:	8b 83       	std	Y+3, r24	; 0x03
    10ee:	8b 81       	ldd	r24, Y+3	; 0x03
    10f0:	9c 81       	ldd	r25, Y+4	; 0x04
    10f2:	01 97       	sbiw	r24, 0x01	; 1
    10f4:	f1 f7       	brne	.-4      	; 0x10f2 <CLCD_voidSendData+0xdc>
    10f6:	9c 83       	std	Y+4, r25	; 0x04
    10f8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10fa:	8d 81       	ldd	r24, Y+5	; 0x05
    10fc:	9e 81       	ldd	r25, Y+6	; 0x06
    10fe:	01 97       	sbiw	r24, 0x01	; 1
    1100:	9e 83       	std	Y+6, r25	; 0x06
    1102:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1104:	8d 81       	ldd	r24, Y+5	; 0x05
    1106:	9e 81       	ldd	r25, Y+6	; 0x06
    1108:	00 97       	sbiw	r24, 0x00	; 0
    110a:	69 f7       	brne	.-38     	; 0x10e6 <CLCD_voidSendData+0xd0>
    110c:	14 c0       	rjmp	.+40     	; 0x1136 <CLCD_voidSendData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    110e:	6f 81       	ldd	r22, Y+7	; 0x07
    1110:	78 85       	ldd	r23, Y+8	; 0x08
    1112:	89 85       	ldd	r24, Y+9	; 0x09
    1114:	9a 85       	ldd	r25, Y+10	; 0x0a
    1116:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    111a:	dc 01       	movw	r26, r24
    111c:	cb 01       	movw	r24, r22
    111e:	9e 83       	std	Y+6, r25	; 0x06
    1120:	8d 83       	std	Y+5, r24	; 0x05
    1122:	8d 81       	ldd	r24, Y+5	; 0x05
    1124:	9e 81       	ldd	r25, Y+6	; 0x06
    1126:	9a 83       	std	Y+2, r25	; 0x02
    1128:	89 83       	std	Y+1, r24	; 0x01
    112a:	89 81       	ldd	r24, Y+1	; 0x01
    112c:	9a 81       	ldd	r25, Y+2	; 0x02
    112e:	01 97       	sbiw	r24, 0x01	; 1
    1130:	f1 f7       	brne	.-4      	; 0x112e <CLCD_voidSendData+0x118>
    1132:	9a 83       	std	Y+2, r25	; 0x02
    1134:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
    1136:	82 e0       	ldi	r24, 0x02	; 2
    1138:	62 e0       	ldi	r22, 0x02	; 2
    113a:	40 e0       	ldi	r20, 0x00	; 0
    113c:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>

}
    1140:	2f 96       	adiw	r28, 0x0f	; 15
    1142:	0f b6       	in	r0, 0x3f	; 63
    1144:	f8 94       	cli
    1146:	de bf       	out	0x3e, r29	; 62
    1148:	0f be       	out	0x3f, r0	; 63
    114a:	cd bf       	out	0x3d, r28	; 61
    114c:	cf 91       	pop	r28
    114e:	df 91       	pop	r29
    1150:	08 95       	ret

00001152 <CLCD_voidInit>:
void CLCD_voidInit(void)
{
    1152:	df 93       	push	r29
    1154:	cf 93       	push	r28
    1156:	cd b7       	in	r28, 0x3d	; 61
    1158:	de b7       	in	r29, 0x3e	; 62
    115a:	2e 97       	sbiw	r28, 0x0e	; 14
    115c:	0f b6       	in	r0, 0x3f	; 63
    115e:	f8 94       	cli
    1160:	de bf       	out	0x3e, r29	; 62
    1162:	0f be       	out	0x3f, r0	; 63
    1164:	cd bf       	out	0x3d, r28	; 61
    1166:	80 e0       	ldi	r24, 0x00	; 0
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	a0 e2       	ldi	r26, 0x20	; 32
    116c:	b2 e4       	ldi	r27, 0x42	; 66
    116e:	8b 87       	std	Y+11, r24	; 0x0b
    1170:	9c 87       	std	Y+12, r25	; 0x0c
    1172:	ad 87       	std	Y+13, r26	; 0x0d
    1174:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1176:	6b 85       	ldd	r22, Y+11	; 0x0b
    1178:	7c 85       	ldd	r23, Y+12	; 0x0c
    117a:	8d 85       	ldd	r24, Y+13	; 0x0d
    117c:	9e 85       	ldd	r25, Y+14	; 0x0e
    117e:	20 e0       	ldi	r18, 0x00	; 0
    1180:	30 e0       	ldi	r19, 0x00	; 0
    1182:	4a ef       	ldi	r20, 0xFA	; 250
    1184:	54 e4       	ldi	r21, 0x44	; 68
    1186:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    118a:	dc 01       	movw	r26, r24
    118c:	cb 01       	movw	r24, r22
    118e:	8f 83       	std	Y+7, r24	; 0x07
    1190:	98 87       	std	Y+8, r25	; 0x08
    1192:	a9 87       	std	Y+9, r26	; 0x09
    1194:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1196:	6f 81       	ldd	r22, Y+7	; 0x07
    1198:	78 85       	ldd	r23, Y+8	; 0x08
    119a:	89 85       	ldd	r24, Y+9	; 0x09
    119c:	9a 85       	ldd	r25, Y+10	; 0x0a
    119e:	20 e0       	ldi	r18, 0x00	; 0
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	40 e8       	ldi	r20, 0x80	; 128
    11a4:	5f e3       	ldi	r21, 0x3F	; 63
    11a6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    11aa:	88 23       	and	r24, r24
    11ac:	2c f4       	brge	.+10     	; 0x11b8 <CLCD_voidInit+0x66>
		__ticks = 1;
    11ae:	81 e0       	ldi	r24, 0x01	; 1
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	9e 83       	std	Y+6, r25	; 0x06
    11b4:	8d 83       	std	Y+5, r24	; 0x05
    11b6:	3f c0       	rjmp	.+126    	; 0x1236 <CLCD_voidInit+0xe4>
	else if (__tmp > 65535)
    11b8:	6f 81       	ldd	r22, Y+7	; 0x07
    11ba:	78 85       	ldd	r23, Y+8	; 0x08
    11bc:	89 85       	ldd	r24, Y+9	; 0x09
    11be:	9a 85       	ldd	r25, Y+10	; 0x0a
    11c0:	20 e0       	ldi	r18, 0x00	; 0
    11c2:	3f ef       	ldi	r19, 0xFF	; 255
    11c4:	4f e7       	ldi	r20, 0x7F	; 127
    11c6:	57 e4       	ldi	r21, 0x47	; 71
    11c8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    11cc:	18 16       	cp	r1, r24
    11ce:	4c f5       	brge	.+82     	; 0x1222 <CLCD_voidInit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11d0:	6b 85       	ldd	r22, Y+11	; 0x0b
    11d2:	7c 85       	ldd	r23, Y+12	; 0x0c
    11d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    11d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    11d8:	20 e0       	ldi	r18, 0x00	; 0
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	40 e2       	ldi	r20, 0x20	; 32
    11de:	51 e4       	ldi	r21, 0x41	; 65
    11e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11e4:	dc 01       	movw	r26, r24
    11e6:	cb 01       	movw	r24, r22
    11e8:	bc 01       	movw	r22, r24
    11ea:	cd 01       	movw	r24, r26
    11ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11f0:	dc 01       	movw	r26, r24
    11f2:	cb 01       	movw	r24, r22
    11f4:	9e 83       	std	Y+6, r25	; 0x06
    11f6:	8d 83       	std	Y+5, r24	; 0x05
    11f8:	0f c0       	rjmp	.+30     	; 0x1218 <CLCD_voidInit+0xc6>
    11fa:	88 ec       	ldi	r24, 0xC8	; 200
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	9c 83       	std	Y+4, r25	; 0x04
    1200:	8b 83       	std	Y+3, r24	; 0x03
    1202:	8b 81       	ldd	r24, Y+3	; 0x03
    1204:	9c 81       	ldd	r25, Y+4	; 0x04
    1206:	01 97       	sbiw	r24, 0x01	; 1
    1208:	f1 f7       	brne	.-4      	; 0x1206 <CLCD_voidInit+0xb4>
    120a:	9c 83       	std	Y+4, r25	; 0x04
    120c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    120e:	8d 81       	ldd	r24, Y+5	; 0x05
    1210:	9e 81       	ldd	r25, Y+6	; 0x06
    1212:	01 97       	sbiw	r24, 0x01	; 1
    1214:	9e 83       	std	Y+6, r25	; 0x06
    1216:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1218:	8d 81       	ldd	r24, Y+5	; 0x05
    121a:	9e 81       	ldd	r25, Y+6	; 0x06
    121c:	00 97       	sbiw	r24, 0x00	; 0
    121e:	69 f7       	brne	.-38     	; 0x11fa <CLCD_voidInit+0xa8>
    1220:	14 c0       	rjmp	.+40     	; 0x124a <CLCD_voidInit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1222:	6f 81       	ldd	r22, Y+7	; 0x07
    1224:	78 85       	ldd	r23, Y+8	; 0x08
    1226:	89 85       	ldd	r24, Y+9	; 0x09
    1228:	9a 85       	ldd	r25, Y+10	; 0x0a
    122a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    122e:	dc 01       	movw	r26, r24
    1230:	cb 01       	movw	r24, r22
    1232:	9e 83       	std	Y+6, r25	; 0x06
    1234:	8d 83       	std	Y+5, r24	; 0x05
    1236:	8d 81       	ldd	r24, Y+5	; 0x05
    1238:	9e 81       	ldd	r25, Y+6	; 0x06
    123a:	9a 83       	std	Y+2, r25	; 0x02
    123c:	89 83       	std	Y+1, r24	; 0x01
    123e:	89 81       	ldd	r24, Y+1	; 0x01
    1240:	9a 81       	ldd	r25, Y+2	; 0x02
    1242:	01 97       	sbiw	r24, 0x01	; 1
    1244:	f1 f7       	brne	.-4      	; 0x1242 <CLCD_voidInit+0xf0>
    1246:	9a 83       	std	Y+2, r25	; 0x02
    1248:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(40);
	CLCD_voidSendCommend(0b00111000);
    124a:	88 e3       	ldi	r24, 0x38	; 56
    124c:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_voidSendCommend>

	CLCD_voidSendCommend(0b00001100);
    1250:	8c e0       	ldi	r24, 0x0C	; 12
    1252:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_voidSendCommend>

	CLCD_voidSendCommend(0b00000001);
    1256:	81 e0       	ldi	r24, 0x01	; 1
    1258:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_voidSendCommend>




}
    125c:	2e 96       	adiw	r28, 0x0e	; 14
    125e:	0f b6       	in	r0, 0x3f	; 63
    1260:	f8 94       	cli
    1262:	de bf       	out	0x3e, r29	; 62
    1264:	0f be       	out	0x3f, r0	; 63
    1266:	cd bf       	out	0x3d, r28	; 61
    1268:	cf 91       	pop	r28
    126a:	df 91       	pop	r29
    126c:	08 95       	ret

0000126e <CLCD_voidSendString>:

void CLCD_voidSendString(const char* Copy_pchString)
{
    126e:	df 93       	push	r29
    1270:	cf 93       	push	r28
    1272:	00 d0       	rcall	.+0      	; 0x1274 <CLCD_voidSendString+0x6>
    1274:	0f 92       	push	r0
    1276:	cd b7       	in	r28, 0x3d	; 61
    1278:	de b7       	in	r29, 0x3e	; 62
    127a:	9b 83       	std	Y+3, r25	; 0x03
    127c:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8Counter=0;
    127e:	19 82       	std	Y+1, r1	; 0x01
    1280:	0e c0       	rjmp	.+28     	; 0x129e <CLCD_voidSendString+0x30>
	while(Copy_pchString[Local_u8Counter]!='\0')
	{
		CLCD_voidSendData(Copy_pchString[Local_u8Counter]);
    1282:	89 81       	ldd	r24, Y+1	; 0x01
    1284:	28 2f       	mov	r18, r24
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	8a 81       	ldd	r24, Y+2	; 0x02
    128a:	9b 81       	ldd	r25, Y+3	; 0x03
    128c:	fc 01       	movw	r30, r24
    128e:	e2 0f       	add	r30, r18
    1290:	f3 1f       	adc	r31, r19
    1292:	80 81       	ld	r24, Z
    1294:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		Local_u8Counter++;
    1298:	89 81       	ldd	r24, Y+1	; 0x01
    129a:	8f 5f       	subi	r24, 0xFF	; 255
    129c:	89 83       	std	Y+1, r24	; 0x01
}

void CLCD_voidSendString(const char* Copy_pchString)
{
	u8 Local_u8Counter=0;
	while(Copy_pchString[Local_u8Counter]!='\0')
    129e:	89 81       	ldd	r24, Y+1	; 0x01
    12a0:	28 2f       	mov	r18, r24
    12a2:	30 e0       	ldi	r19, 0x00	; 0
    12a4:	8a 81       	ldd	r24, Y+2	; 0x02
    12a6:	9b 81       	ldd	r25, Y+3	; 0x03
    12a8:	fc 01       	movw	r30, r24
    12aa:	e2 0f       	add	r30, r18
    12ac:	f3 1f       	adc	r31, r19
    12ae:	80 81       	ld	r24, Z
    12b0:	88 23       	and	r24, r24
    12b2:	39 f7       	brne	.-50     	; 0x1282 <CLCD_voidSendString+0x14>
	{
		CLCD_voidSendData(Copy_pchString[Local_u8Counter]);
		Local_u8Counter++;
	}
}
    12b4:	0f 90       	pop	r0
    12b6:	0f 90       	pop	r0
    12b8:	0f 90       	pop	r0
    12ba:	cf 91       	pop	r28
    12bc:	df 91       	pop	r29
    12be:	08 95       	ret

000012c0 <CLCD_voidGoToXY>:

void CLCD_voidGoToXY(u8 Copy_u8XPos,u8 Copy_u8YPos)
{
    12c0:	df 93       	push	r29
    12c2:	cf 93       	push	r28
    12c4:	00 d0       	rcall	.+0      	; 0x12c6 <CLCD_voidGoToXY+0x6>
    12c6:	0f 92       	push	r0
    12c8:	cd b7       	in	r28, 0x3d	; 61
    12ca:	de b7       	in	r29, 0x3e	; 62
    12cc:	8a 83       	std	Y+2, r24	; 0x02
    12ce:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8DDRAMAddress;
	if(Copy_u8YPos==0)
    12d0:	8b 81       	ldd	r24, Y+3	; 0x03
    12d2:	88 23       	and	r24, r24
    12d4:	19 f4       	brne	.+6      	; 0x12dc <CLCD_voidGoToXY+0x1c>
	{
		Local_u8DDRAMAddress=Copy_u8XPos;
    12d6:	8a 81       	ldd	r24, Y+2	; 0x02
    12d8:	89 83       	std	Y+1, r24	; 0x01
    12da:	06 c0       	rjmp	.+12     	; 0x12e8 <CLCD_voidGoToXY+0x28>
	}
	else if(Copy_u8YPos==1)
    12dc:	8b 81       	ldd	r24, Y+3	; 0x03
    12de:	81 30       	cpi	r24, 0x01	; 1
    12e0:	19 f4       	brne	.+6      	; 0x12e8 <CLCD_voidGoToXY+0x28>
	{
		Local_u8DDRAMAddress=0x40+Copy_u8XPos;
    12e2:	8a 81       	ldd	r24, Y+2	; 0x02
    12e4:	80 5c       	subi	r24, 0xC0	; 192
    12e6:	89 83       	std	Y+1, r24	; 0x01
	}

	CLCD_voidSendCommend(Local_u8DDRAMAddress+128);
    12e8:	89 81       	ldd	r24, Y+1	; 0x01
    12ea:	80 58       	subi	r24, 0x80	; 128
    12ec:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_voidSendCommend>
}
    12f0:	0f 90       	pop	r0
    12f2:	0f 90       	pop	r0
    12f4:	0f 90       	pop	r0
    12f6:	cf 91       	pop	r28
    12f8:	df 91       	pop	r29
    12fa:	08 95       	ret

000012fc <CLCD_voidWriteSpecialCharacter>:

void CLCD_voidWriteSpecialCharacter(u8* Copy_pu8Pattern,u8 Copy_u8PatternNumber,u8 Copy_u8XPos,u8 Copy_u8YPos)
{
    12fc:	df 93       	push	r29
    12fe:	cf 93       	push	r28
    1300:	cd b7       	in	r28, 0x3d	; 61
    1302:	de b7       	in	r29, 0x3e	; 62
    1304:	27 97       	sbiw	r28, 0x07	; 7
    1306:	0f b6       	in	r0, 0x3f	; 63
    1308:	f8 94       	cli
    130a:	de bf       	out	0x3e, r29	; 62
    130c:	0f be       	out	0x3f, r0	; 63
    130e:	cd bf       	out	0x3d, r28	; 61
    1310:	9c 83       	std	Y+4, r25	; 0x04
    1312:	8b 83       	std	Y+3, r24	; 0x03
    1314:	6d 83       	std	Y+5, r22	; 0x05
    1316:	4e 83       	std	Y+6, r20	; 0x06
    1318:	2f 83       	std	Y+7, r18	; 0x07
	u8 Local_u8CGRAMAddress,Local_u8Counter;
	Local_u8CGRAMAddress=Copy_u8PatternNumber*8;
    131a:	8d 81       	ldd	r24, Y+5	; 0x05
    131c:	88 2f       	mov	r24, r24
    131e:	90 e0       	ldi	r25, 0x00	; 0
    1320:	88 0f       	add	r24, r24
    1322:	99 1f       	adc	r25, r25
    1324:	88 0f       	add	r24, r24
    1326:	99 1f       	adc	r25, r25
    1328:	88 0f       	add	r24, r24
    132a:	99 1f       	adc	r25, r25
    132c:	8a 83       	std	Y+2, r24	; 0x02
	CLCD_voidSendCommend(Local_u8CGRAMAddress+64);
    132e:	8a 81       	ldd	r24, Y+2	; 0x02
    1330:	80 5c       	subi	r24, 0xC0	; 192
    1332:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_voidSendCommend>
	for(Local_u8Counter=0;Local_u8Counter<8;Local_u8Counter++)
    1336:	19 82       	std	Y+1, r1	; 0x01
    1338:	0e c0       	rjmp	.+28     	; 0x1356 <CLCD_voidWriteSpecialCharacter+0x5a>
	{
		CLCD_voidSendData(Copy_pu8Pattern[Local_u8Counter]);
    133a:	89 81       	ldd	r24, Y+1	; 0x01
    133c:	28 2f       	mov	r18, r24
    133e:	30 e0       	ldi	r19, 0x00	; 0
    1340:	8b 81       	ldd	r24, Y+3	; 0x03
    1342:	9c 81       	ldd	r25, Y+4	; 0x04
    1344:	fc 01       	movw	r30, r24
    1346:	e2 0f       	add	r30, r18
    1348:	f3 1f       	adc	r31, r19
    134a:	80 81       	ld	r24, Z
    134c:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
void CLCD_voidWriteSpecialCharacter(u8* Copy_pu8Pattern,u8 Copy_u8PatternNumber,u8 Copy_u8XPos,u8 Copy_u8YPos)
{
	u8 Local_u8CGRAMAddress,Local_u8Counter;
	Local_u8CGRAMAddress=Copy_u8PatternNumber*8;
	CLCD_voidSendCommend(Local_u8CGRAMAddress+64);
	for(Local_u8Counter=0;Local_u8Counter<8;Local_u8Counter++)
    1350:	89 81       	ldd	r24, Y+1	; 0x01
    1352:	8f 5f       	subi	r24, 0xFF	; 255
    1354:	89 83       	std	Y+1, r24	; 0x01
    1356:	89 81       	ldd	r24, Y+1	; 0x01
    1358:	88 30       	cpi	r24, 0x08	; 8
    135a:	78 f3       	brcs	.-34     	; 0x133a <CLCD_voidWriteSpecialCharacter+0x3e>
	{
		CLCD_voidSendData(Copy_pu8Pattern[Local_u8Counter]);
	}
	CLCD_voidGoToXY(Copy_u8XPos,Copy_u8YPos);
    135c:	8e 81       	ldd	r24, Y+6	; 0x06
    135e:	6f 81       	ldd	r22, Y+7	; 0x07
    1360:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
	CLCD_voidSendData(Copy_u8PatternNumber);
    1364:	8d 81       	ldd	r24, Y+5	; 0x05
    1366:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
}
    136a:	27 96       	adiw	r28, 0x07	; 7
    136c:	0f b6       	in	r0, 0x3f	; 63
    136e:	f8 94       	cli
    1370:	de bf       	out	0x3e, r29	; 62
    1372:	0f be       	out	0x3f, r0	; 63
    1374:	cd bf       	out	0x3d, r28	; 61
    1376:	cf 91       	pop	r28
    1378:	df 91       	pop	r29
    137a:	08 95       	ret

0000137c <CLCD_voidWriteNumber>:

void CLCD_voidWriteNumber(u32 Number)
{
    137c:	ef 92       	push	r14
    137e:	ff 92       	push	r15
    1380:	0f 93       	push	r16
    1382:	1f 93       	push	r17
    1384:	df 93       	push	r29
    1386:	cf 93       	push	r28
    1388:	cd b7       	in	r28, 0x3d	; 61
    138a:	de b7       	in	r29, 0x3e	; 62
    138c:	6c 97       	sbiw	r28, 0x1c	; 28
    138e:	0f b6       	in	r0, 0x3f	; 63
    1390:	f8 94       	cli
    1392:	de bf       	out	0x3e, r29	; 62
    1394:	0f be       	out	0x3f, r0	; 63
    1396:	cd bf       	out	0x3d, r28	; 61
    1398:	69 8f       	std	Y+25, r22	; 0x19
    139a:	7a 8f       	std	Y+26, r23	; 0x1a
    139c:	8b 8f       	std	Y+27, r24	; 0x1b
    139e:	9c 8f       	std	Y+28, r25	; 0x1c
	u32 Local_u32Number=0;
    13a0:	1d 8a       	std	Y+21, r1	; 0x15
    13a2:	1e 8a       	std	Y+22, r1	; 0x16
    13a4:	1f 8a       	std	Y+23, r1	; 0x17
    13a6:	18 8e       	std	Y+24, r1	; 0x18
	u32 Local_u32DigitNumber;
	u32 Local_u32Counter1=0;
    13a8:	1d 86       	std	Y+13, r1	; 0x0d
    13aa:	1e 86       	std	Y+14, r1	; 0x0e
    13ac:	1f 86       	std	Y+15, r1	; 0x0f
    13ae:	18 8a       	std	Y+16, r1	; 0x10
	u32 Local_u32Counter2=0;
    13b0:	19 86       	std	Y+9, r1	; 0x09
    13b2:	1a 86       	std	Y+10, r1	; 0x0a
    13b4:	1b 86       	std	Y+11, r1	; 0x0b
    13b6:	1c 86       	std	Y+12, r1	; 0x0c
	u32 Local_u32Iterms;
	u32 Local_u32Flag=0;
    13b8:	19 82       	std	Y+1, r1	; 0x01
    13ba:	1a 82       	std	Y+2, r1	; 0x02
    13bc:	1b 82       	std	Y+3, r1	; 0x03
    13be:	1c 82       	std	Y+4, r1	; 0x04
    13c0:	49 c0       	rjmp	.+146    	; 0x1454 <CLCD_voidWriteNumber+0xd8>



	while(Number!=0)
	{
		Local_u32Number=(Local_u32Number*10)+(Number%10);
    13c2:	8d 89       	ldd	r24, Y+21	; 0x15
    13c4:	9e 89       	ldd	r25, Y+22	; 0x16
    13c6:	af 89       	ldd	r26, Y+23	; 0x17
    13c8:	b8 8d       	ldd	r27, Y+24	; 0x18
    13ca:	2a e0       	ldi	r18, 0x0A	; 10
    13cc:	30 e0       	ldi	r19, 0x00	; 0
    13ce:	40 e0       	ldi	r20, 0x00	; 0
    13d0:	50 e0       	ldi	r21, 0x00	; 0
    13d2:	bc 01       	movw	r22, r24
    13d4:	cd 01       	movw	r24, r26
    13d6:	0e 94 60 24 	call	0x48c0	; 0x48c0 <__mulsi3>
    13da:	7b 01       	movw	r14, r22
    13dc:	8c 01       	movw	r16, r24
    13de:	89 8d       	ldd	r24, Y+25	; 0x19
    13e0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    13e2:	ab 8d       	ldd	r26, Y+27	; 0x1b
    13e4:	bc 8d       	ldd	r27, Y+28	; 0x1c
    13e6:	2a e0       	ldi	r18, 0x0A	; 10
    13e8:	30 e0       	ldi	r19, 0x00	; 0
    13ea:	40 e0       	ldi	r20, 0x00	; 0
    13ec:	50 e0       	ldi	r21, 0x00	; 0
    13ee:	bc 01       	movw	r22, r24
    13f0:	cd 01       	movw	r24, r26
    13f2:	0e 94 8b 24 	call	0x4916	; 0x4916 <__udivmodsi4>
    13f6:	dc 01       	movw	r26, r24
    13f8:	cb 01       	movw	r24, r22
    13fa:	8e 0d       	add	r24, r14
    13fc:	9f 1d       	adc	r25, r15
    13fe:	a0 1f       	adc	r26, r16
    1400:	b1 1f       	adc	r27, r17
    1402:	8d 8b       	std	Y+21, r24	; 0x15
    1404:	9e 8b       	std	Y+22, r25	; 0x16
    1406:	af 8b       	std	Y+23, r26	; 0x17
    1408:	b8 8f       	std	Y+24, r27	; 0x18
		Number/=10;
    140a:	89 8d       	ldd	r24, Y+25	; 0x19
    140c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    140e:	ab 8d       	ldd	r26, Y+27	; 0x1b
    1410:	bc 8d       	ldd	r27, Y+28	; 0x1c
    1412:	2a e0       	ldi	r18, 0x0A	; 10
    1414:	30 e0       	ldi	r19, 0x00	; 0
    1416:	40 e0       	ldi	r20, 0x00	; 0
    1418:	50 e0       	ldi	r21, 0x00	; 0
    141a:	bc 01       	movw	r22, r24
    141c:	cd 01       	movw	r24, r26
    141e:	0e 94 8b 24 	call	0x4916	; 0x4916 <__udivmodsi4>
    1422:	da 01       	movw	r26, r20
    1424:	c9 01       	movw	r24, r18
    1426:	89 8f       	std	Y+25, r24	; 0x19
    1428:	9a 8f       	std	Y+26, r25	; 0x1a
    142a:	ab 8f       	std	Y+27, r26	; 0x1b
    142c:	bc 8f       	std	Y+28, r27	; 0x1c
		Local_u32Counter1++;
    142e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1430:	9e 85       	ldd	r25, Y+14	; 0x0e
    1432:	af 85       	ldd	r26, Y+15	; 0x0f
    1434:	b8 89       	ldd	r27, Y+16	; 0x10
    1436:	01 96       	adiw	r24, 0x01	; 1
    1438:	a1 1d       	adc	r26, r1
    143a:	b1 1d       	adc	r27, r1
    143c:	8d 87       	std	Y+13, r24	; 0x0d
    143e:	9e 87       	std	Y+14, r25	; 0x0e
    1440:	af 87       	std	Y+15, r26	; 0x0f
    1442:	b8 8b       	std	Y+16, r27	; 0x10
		Local_u32Flag=1;
    1444:	81 e0       	ldi	r24, 0x01	; 1
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	a0 e0       	ldi	r26, 0x00	; 0
    144a:	b0 e0       	ldi	r27, 0x00	; 0
    144c:	89 83       	std	Y+1, r24	; 0x01
    144e:	9a 83       	std	Y+2, r25	; 0x02
    1450:	ab 83       	std	Y+3, r26	; 0x03
    1452:	bc 83       	std	Y+4, r27	; 0x04
	u32 Local_u32Iterms;
	u32 Local_u32Flag=0;



	while(Number!=0)
    1454:	89 8d       	ldd	r24, Y+25	; 0x19
    1456:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1458:	ab 8d       	ldd	r26, Y+27	; 0x1b
    145a:	bc 8d       	ldd	r27, Y+28	; 0x1c
    145c:	00 97       	sbiw	r24, 0x00	; 0
    145e:	a1 05       	cpc	r26, r1
    1460:	b1 05       	cpc	r27, r1
    1462:	09 f0       	breq	.+2      	; 0x1466 <CLCD_voidWriteNumber+0xea>
    1464:	ae cf       	rjmp	.-164    	; 0x13c2 <CLCD_voidWriteNumber+0x46>
    1466:	33 c0       	rjmp	.+102    	; 0x14ce <CLCD_voidWriteNumber+0x152>

	while(Local_u32Number!=0)
	{


		Local_u32DigitNumber=Local_u32Number % 10;
    1468:	8d 89       	ldd	r24, Y+21	; 0x15
    146a:	9e 89       	ldd	r25, Y+22	; 0x16
    146c:	af 89       	ldd	r26, Y+23	; 0x17
    146e:	b8 8d       	ldd	r27, Y+24	; 0x18
    1470:	2a e0       	ldi	r18, 0x0A	; 10
    1472:	30 e0       	ldi	r19, 0x00	; 0
    1474:	40 e0       	ldi	r20, 0x00	; 0
    1476:	50 e0       	ldi	r21, 0x00	; 0
    1478:	bc 01       	movw	r22, r24
    147a:	cd 01       	movw	r24, r26
    147c:	0e 94 8b 24 	call	0x4916	; 0x4916 <__udivmodsi4>
    1480:	dc 01       	movw	r26, r24
    1482:	cb 01       	movw	r24, r22
    1484:	89 8b       	std	Y+17, r24	; 0x11
    1486:	9a 8b       	std	Y+18, r25	; 0x12
    1488:	ab 8b       	std	Y+19, r26	; 0x13
    148a:	bc 8b       	std	Y+20, r27	; 0x14


		CLCD_voidSendData(Local_u32DigitNumber+'0');
    148c:	89 89       	ldd	r24, Y+17	; 0x11
    148e:	80 5d       	subi	r24, 0xD0	; 208
    1490:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>


		Local_u32Number/=10;
    1494:	8d 89       	ldd	r24, Y+21	; 0x15
    1496:	9e 89       	ldd	r25, Y+22	; 0x16
    1498:	af 89       	ldd	r26, Y+23	; 0x17
    149a:	b8 8d       	ldd	r27, Y+24	; 0x18
    149c:	2a e0       	ldi	r18, 0x0A	; 10
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	40 e0       	ldi	r20, 0x00	; 0
    14a2:	50 e0       	ldi	r21, 0x00	; 0
    14a4:	bc 01       	movw	r22, r24
    14a6:	cd 01       	movw	r24, r26
    14a8:	0e 94 8b 24 	call	0x4916	; 0x4916 <__udivmodsi4>
    14ac:	da 01       	movw	r26, r20
    14ae:	c9 01       	movw	r24, r18
    14b0:	8d 8b       	std	Y+21, r24	; 0x15
    14b2:	9e 8b       	std	Y+22, r25	; 0x16
    14b4:	af 8b       	std	Y+23, r26	; 0x17
    14b6:	b8 8f       	std	Y+24, r27	; 0x18
		Local_u32Counter2++;
    14b8:	89 85       	ldd	r24, Y+9	; 0x09
    14ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    14bc:	ab 85       	ldd	r26, Y+11	; 0x0b
    14be:	bc 85       	ldd	r27, Y+12	; 0x0c
    14c0:	01 96       	adiw	r24, 0x01	; 1
    14c2:	a1 1d       	adc	r26, r1
    14c4:	b1 1d       	adc	r27, r1
    14c6:	89 87       	std	Y+9, r24	; 0x09
    14c8:	9a 87       	std	Y+10, r25	; 0x0a
    14ca:	ab 87       	std	Y+11, r26	; 0x0b
    14cc:	bc 87       	std	Y+12, r27	; 0x0c
		Number/=10;
		Local_u32Counter1++;
		Local_u32Flag=1;
	}

	while(Local_u32Number!=0)
    14ce:	8d 89       	ldd	r24, Y+21	; 0x15
    14d0:	9e 89       	ldd	r25, Y+22	; 0x16
    14d2:	af 89       	ldd	r26, Y+23	; 0x17
    14d4:	b8 8d       	ldd	r27, Y+24	; 0x18
    14d6:	00 97       	sbiw	r24, 0x00	; 0
    14d8:	a1 05       	cpc	r26, r1
    14da:	b1 05       	cpc	r27, r1
    14dc:	29 f6       	brne	.-118    	; 0x1468 <CLCD_voidWriteNumber+0xec>
		Local_u32Number/=10;
		Local_u32Counter2++;


	}
	if(Local_u32Flag==0){
    14de:	89 81       	ldd	r24, Y+1	; 0x01
    14e0:	9a 81       	ldd	r25, Y+2	; 0x02
    14e2:	ab 81       	ldd	r26, Y+3	; 0x03
    14e4:	bc 81       	ldd	r27, Y+4	; 0x04
    14e6:	00 97       	sbiw	r24, 0x00	; 0
    14e8:	a1 05       	cpc	r26, r1
    14ea:	b1 05       	cpc	r27, r1
    14ec:	49 f5       	brne	.+82     	; 0x1540 <CLCD_voidWriteNumber+0x1c4>

		for(Local_u32Iterms=0;Local_u32Iterms<=Local_u32Counter1-Local_u32Counter2;Local_u32Iterms++)
    14ee:	1d 82       	std	Y+5, r1	; 0x05
    14f0:	1e 82       	std	Y+6, r1	; 0x06
    14f2:	1f 82       	std	Y+7, r1	; 0x07
    14f4:	18 86       	std	Y+8, r1	; 0x08
    14f6:	0e c0       	rjmp	.+28     	; 0x1514 <CLCD_voidWriteNumber+0x198>
		{
			CLCD_voidSendData('0');
    14f8:	80 e3       	ldi	r24, 0x30	; 48
    14fa:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>


	}
	if(Local_u32Flag==0){

		for(Local_u32Iterms=0;Local_u32Iterms<=Local_u32Counter1-Local_u32Counter2;Local_u32Iterms++)
    14fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1500:	9e 81       	ldd	r25, Y+6	; 0x06
    1502:	af 81       	ldd	r26, Y+7	; 0x07
    1504:	b8 85       	ldd	r27, Y+8	; 0x08
    1506:	01 96       	adiw	r24, 0x01	; 1
    1508:	a1 1d       	adc	r26, r1
    150a:	b1 1d       	adc	r27, r1
    150c:	8d 83       	std	Y+5, r24	; 0x05
    150e:	9e 83       	std	Y+6, r25	; 0x06
    1510:	af 83       	std	Y+7, r26	; 0x07
    1512:	b8 87       	std	Y+8, r27	; 0x08
    1514:	2d 85       	ldd	r18, Y+13	; 0x0d
    1516:	3e 85       	ldd	r19, Y+14	; 0x0e
    1518:	4f 85       	ldd	r20, Y+15	; 0x0f
    151a:	58 89       	ldd	r21, Y+16	; 0x10
    151c:	89 85       	ldd	r24, Y+9	; 0x09
    151e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1520:	ab 85       	ldd	r26, Y+11	; 0x0b
    1522:	bc 85       	ldd	r27, Y+12	; 0x0c
    1524:	28 1b       	sub	r18, r24
    1526:	39 0b       	sbc	r19, r25
    1528:	4a 0b       	sbc	r20, r26
    152a:	5b 0b       	sbc	r21, r27
    152c:	8d 81       	ldd	r24, Y+5	; 0x05
    152e:	9e 81       	ldd	r25, Y+6	; 0x06
    1530:	af 81       	ldd	r26, Y+7	; 0x07
    1532:	b8 85       	ldd	r27, Y+8	; 0x08
    1534:	28 17       	cp	r18, r24
    1536:	39 07       	cpc	r19, r25
    1538:	4a 07       	cpc	r20, r26
    153a:	5b 07       	cpc	r21, r27
    153c:	e8 f6       	brcc	.-70     	; 0x14f8 <CLCD_voidWriteNumber+0x17c>
    153e:	28 c0       	rjmp	.+80     	; 0x1590 <CLCD_voidWriteNumber+0x214>
			CLCD_voidSendData('0');

		}
	}
	else{
		for(Local_u32Iterms=0;Local_u32Iterms<Local_u32Counter1-Local_u32Counter2;Local_u32Iterms++)
    1540:	1d 82       	std	Y+5, r1	; 0x05
    1542:	1e 82       	std	Y+6, r1	; 0x06
    1544:	1f 82       	std	Y+7, r1	; 0x07
    1546:	18 86       	std	Y+8, r1	; 0x08
    1548:	0e c0       	rjmp	.+28     	; 0x1566 <CLCD_voidWriteNumber+0x1ea>
		{
			CLCD_voidSendData('0');
    154a:	80 e3       	ldi	r24, 0x30	; 48
    154c:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
			CLCD_voidSendData('0');

		}
	}
	else{
		for(Local_u32Iterms=0;Local_u32Iterms<Local_u32Counter1-Local_u32Counter2;Local_u32Iterms++)
    1550:	8d 81       	ldd	r24, Y+5	; 0x05
    1552:	9e 81       	ldd	r25, Y+6	; 0x06
    1554:	af 81       	ldd	r26, Y+7	; 0x07
    1556:	b8 85       	ldd	r27, Y+8	; 0x08
    1558:	01 96       	adiw	r24, 0x01	; 1
    155a:	a1 1d       	adc	r26, r1
    155c:	b1 1d       	adc	r27, r1
    155e:	8d 83       	std	Y+5, r24	; 0x05
    1560:	9e 83       	std	Y+6, r25	; 0x06
    1562:	af 83       	std	Y+7, r26	; 0x07
    1564:	b8 87       	std	Y+8, r27	; 0x08
    1566:	2d 85       	ldd	r18, Y+13	; 0x0d
    1568:	3e 85       	ldd	r19, Y+14	; 0x0e
    156a:	4f 85       	ldd	r20, Y+15	; 0x0f
    156c:	58 89       	ldd	r21, Y+16	; 0x10
    156e:	89 85       	ldd	r24, Y+9	; 0x09
    1570:	9a 85       	ldd	r25, Y+10	; 0x0a
    1572:	ab 85       	ldd	r26, Y+11	; 0x0b
    1574:	bc 85       	ldd	r27, Y+12	; 0x0c
    1576:	28 1b       	sub	r18, r24
    1578:	39 0b       	sbc	r19, r25
    157a:	4a 0b       	sbc	r20, r26
    157c:	5b 0b       	sbc	r21, r27
    157e:	8d 81       	ldd	r24, Y+5	; 0x05
    1580:	9e 81       	ldd	r25, Y+6	; 0x06
    1582:	af 81       	ldd	r26, Y+7	; 0x07
    1584:	b8 85       	ldd	r27, Y+8	; 0x08
    1586:	82 17       	cp	r24, r18
    1588:	93 07       	cpc	r25, r19
    158a:	a4 07       	cpc	r26, r20
    158c:	b5 07       	cpc	r27, r21
    158e:	e8 f2       	brcs	.-70     	; 0x154a <CLCD_voidWriteNumber+0x1ce>
		{
			CLCD_voidSendData('0');

		}
	}
}
    1590:	6c 96       	adiw	r28, 0x1c	; 28
    1592:	0f b6       	in	r0, 0x3f	; 63
    1594:	f8 94       	cli
    1596:	de bf       	out	0x3e, r29	; 62
    1598:	0f be       	out	0x3f, r0	; 63
    159a:	cd bf       	out	0x3d, r28	; 61
    159c:	cf 91       	pop	r28
    159e:	df 91       	pop	r29
    15a0:	1f 91       	pop	r17
    15a2:	0f 91       	pop	r16
    15a4:	ff 90       	pop	r15
    15a6:	ef 90       	pop	r14
    15a8:	08 95       	ret

000015aa <CLCD_voidSimpleCalculator>:

void CLCD_voidSimpleCalculator()
{
    15aa:	cf 92       	push	r12
    15ac:	df 92       	push	r13
    15ae:	ef 92       	push	r14
    15b0:	ff 92       	push	r15
    15b2:	0f 93       	push	r16
    15b4:	1f 93       	push	r17
    15b6:	df 93       	push	r29
    15b8:	cf 93       	push	r28
    15ba:	cd b7       	in	r28, 0x3d	; 61
    15bc:	de b7       	in	r29, 0x3e	; 62
    15be:	cc 5c       	subi	r28, 0xCC	; 204
    15c0:	d0 40       	sbci	r29, 0x00	; 0
    15c2:	0f b6       	in	r0, 0x3f	; 63
    15c4:	f8 94       	cli
    15c6:	de bf       	out	0x3e, r29	; 62
    15c8:	0f be       	out	0x3f, r0	; 63
    15ca:	cd bf       	out	0x3d, r28	; 61
	u8 Local_u8Pattern[8]={0b00000100,0b00000100,0b00001110,0b00010101,0b00010101,0b00000100,0b00000100,0};
    15cc:	ce 01       	movw	r24, r28
    15ce:	83 55       	subi	r24, 0x53	; 83
    15d0:	9f 4f       	sbci	r25, 0xFF	; 255
    15d2:	c0 54       	subi	r28, 0x40	; 64
    15d4:	df 4f       	sbci	r29, 0xFF	; 255
    15d6:	99 83       	std	Y+1, r25	; 0x01
    15d8:	88 83       	st	Y, r24
    15da:	c0 5c       	subi	r28, 0xC0	; 192
    15dc:	d0 40       	sbci	r29, 0x00	; 0
    15de:	03 e8       	ldi	r16, 0x83	; 131
    15e0:	11 e0       	ldi	r17, 0x01	; 1
    15e2:	ce 53       	subi	r28, 0x3E	; 62
    15e4:	df 4f       	sbci	r29, 0xFF	; 255
    15e6:	19 83       	std	Y+1, r17	; 0x01
    15e8:	08 83       	st	Y, r16
    15ea:	c2 5c       	subi	r28, 0xC2	; 194
    15ec:	d0 40       	sbci	r29, 0x00	; 0
    15ee:	18 e0       	ldi	r17, 0x08	; 8
    15f0:	cc 53       	subi	r28, 0x3C	; 60
    15f2:	df 4f       	sbci	r29, 0xFF	; 255
    15f4:	18 83       	st	Y, r17
    15f6:	c4 5c       	subi	r28, 0xC4	; 196
    15f8:	d0 40       	sbci	r29, 0x00	; 0
    15fa:	ce 53       	subi	r28, 0x3E	; 62
    15fc:	df 4f       	sbci	r29, 0xFF	; 255
    15fe:	a8 81       	ld	r26, Y
    1600:	b9 81       	ldd	r27, Y+1	; 0x01
    1602:	c2 5c       	subi	r28, 0xC2	; 194
    1604:	d0 40       	sbci	r29, 0x00	; 0
    1606:	0c 90       	ld	r0, X
    1608:	ce 53       	subi	r28, 0x3E	; 62
    160a:	df 4f       	sbci	r29, 0xFF	; 255
    160c:	e8 81       	ld	r30, Y
    160e:	f9 81       	ldd	r31, Y+1	; 0x01
    1610:	c2 5c       	subi	r28, 0xC2	; 194
    1612:	d0 40       	sbci	r29, 0x00	; 0
    1614:	31 96       	adiw	r30, 0x01	; 1
    1616:	ce 53       	subi	r28, 0x3E	; 62
    1618:	df 4f       	sbci	r29, 0xFF	; 255
    161a:	f9 83       	std	Y+1, r31	; 0x01
    161c:	e8 83       	st	Y, r30
    161e:	c2 5c       	subi	r28, 0xC2	; 194
    1620:	d0 40       	sbci	r29, 0x00	; 0
    1622:	c0 54       	subi	r28, 0x40	; 64
    1624:	df 4f       	sbci	r29, 0xFF	; 255
    1626:	a8 81       	ld	r26, Y
    1628:	b9 81       	ldd	r27, Y+1	; 0x01
    162a:	c0 5c       	subi	r28, 0xC0	; 192
    162c:	d0 40       	sbci	r29, 0x00	; 0
    162e:	0c 92       	st	X, r0
    1630:	c0 54       	subi	r28, 0x40	; 64
    1632:	df 4f       	sbci	r29, 0xFF	; 255
    1634:	e8 81       	ld	r30, Y
    1636:	f9 81       	ldd	r31, Y+1	; 0x01
    1638:	c0 5c       	subi	r28, 0xC0	; 192
    163a:	d0 40       	sbci	r29, 0x00	; 0
    163c:	31 96       	adiw	r30, 0x01	; 1
    163e:	c0 54       	subi	r28, 0x40	; 64
    1640:	df 4f       	sbci	r29, 0xFF	; 255
    1642:	f9 83       	std	Y+1, r31	; 0x01
    1644:	e8 83       	st	Y, r30
    1646:	c0 5c       	subi	r28, 0xC0	; 192
    1648:	d0 40       	sbci	r29, 0x00	; 0
    164a:	cc 53       	subi	r28, 0x3C	; 60
    164c:	df 4f       	sbci	r29, 0xFF	; 255
    164e:	f8 81       	ld	r31, Y
    1650:	c4 5c       	subi	r28, 0xC4	; 196
    1652:	d0 40       	sbci	r29, 0x00	; 0
    1654:	f1 50       	subi	r31, 0x01	; 1
    1656:	cc 53       	subi	r28, 0x3C	; 60
    1658:	df 4f       	sbci	r29, 0xFF	; 255
    165a:	f8 83       	st	Y, r31
    165c:	c4 5c       	subi	r28, 0xC4	; 196
    165e:	d0 40       	sbci	r29, 0x00	; 0
    1660:	cc 53       	subi	r28, 0x3C	; 60
    1662:	df 4f       	sbci	r29, 0xFF	; 255
    1664:	e8 80       	ld	r14, Y
    1666:	c4 5c       	subi	r28, 0xC4	; 196
    1668:	d0 40       	sbci	r29, 0x00	; 0
    166a:	ee 20       	and	r14, r14
    166c:	31 f6       	brne	.-116    	; 0x15fa <CLCD_voidSimpleCalculator+0x50>
	u8 Local_u8Pattern1[8]={0};
    166e:	ce 01       	movw	r24, r28
    1670:	8b 54       	subi	r24, 0x4B	; 75
    1672:	9f 4f       	sbci	r25, 0xFF	; 255
    1674:	28 e0       	ldi	r18, 0x08	; 8
    1676:	fc 01       	movw	r30, r24
    1678:	df 01       	movw	r26, r30
    167a:	e2 2e       	mov	r14, r18
    167c:	1d 92       	st	X+, r1
    167e:	ea 94       	dec	r14
    1680:	e9 f7       	brne	.-6      	; 0x167c <CLCD_voidSimpleCalculator+0xd2>
	u8 pu8Value;
	u8 pu8Value1;
	u8 pu8Value2;
	u32 Local_counter=1;
    1682:	fe 01       	movw	r30, r28
    1684:	e7 55       	subi	r30, 0x57	; 87
    1686:	ff 4f       	sbci	r31, 0xFF	; 255
    1688:	81 e0       	ldi	r24, 0x01	; 1
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	a0 e0       	ldi	r26, 0x00	; 0
    168e:	b0 e0       	ldi	r27, 0x00	; 0
    1690:	80 83       	st	Z, r24
    1692:	91 83       	std	Z+1, r25	; 0x01
    1694:	a2 83       	std	Z+2, r26	; 0x02
    1696:	b3 83       	std	Z+3, r27	; 0x03
	u32 Local_Mark=1;
    1698:	fe 01       	movw	r30, r28
    169a:	eb 55       	subi	r30, 0x5B	; 91
    169c:	ff 4f       	sbci	r31, 0xFF	; 255
    169e:	81 e0       	ldi	r24, 0x01	; 1
    16a0:	90 e0       	ldi	r25, 0x00	; 0
    16a2:	a0 e0       	ldi	r26, 0x00	; 0
    16a4:	b0 e0       	ldi	r27, 0x00	; 0
    16a6:	80 83       	st	Z, r24
    16a8:	91 83       	std	Z+1, r25	; 0x01
    16aa:	a2 83       	std	Z+2, r26	; 0x02
    16ac:	b3 83       	std	Z+3, r27	; 0x03
	u32 Local_counter2=1;
    16ae:	fe 01       	movw	r30, r28
    16b0:	ef 55       	subi	r30, 0x5F	; 95
    16b2:	ff 4f       	sbci	r31, 0xFF	; 255
    16b4:	81 e0       	ldi	r24, 0x01	; 1
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	a0 e0       	ldi	r26, 0x00	; 0
    16ba:	b0 e0       	ldi	r27, 0x00	; 0
    16bc:	80 83       	st	Z, r24
    16be:	91 83       	std	Z+1, r25	; 0x01
    16c0:	a2 83       	std	Z+2, r26	; 0x02
    16c2:	b3 83       	std	Z+3, r27	; 0x03
	u8 Local_u8XPos=0;
    16c4:	fe 01       	movw	r30, r28
    16c6:	e0 56       	subi	r30, 0x60	; 96
    16c8:	ff 4f       	sbci	r31, 0xFF	; 255
    16ca:	10 82       	st	Z, r1
	u8 Local_u8YPos=0;
    16cc:	fe 01       	movw	r30, r28
    16ce:	e1 56       	subi	r30, 0x61	; 97
    16d0:	ff 4f       	sbci	r31, 0xFF	; 255
    16d2:	10 82       	st	Z, r1
	CLCD_voidGoToXY(0,0);
    16d4:	80 e0       	ldi	r24, 0x00	; 0
    16d6:	60 e0       	ldi	r22, 0x00	; 0
    16d8:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
	CLCD_voidWriteNumber(Local_counter);
    16dc:	fe 01       	movw	r30, r28
    16de:	e7 55       	subi	r30, 0x57	; 87
    16e0:	ff 4f       	sbci	r31, 0xFF	; 255
    16e2:	80 81       	ld	r24, Z
    16e4:	91 81       	ldd	r25, Z+1	; 0x01
    16e6:	a2 81       	ldd	r26, Z+2	; 0x02
    16e8:	b3 81       	ldd	r27, Z+3	; 0x03
    16ea:	bc 01       	movw	r22, r24
    16ec:	cd 01       	movw	r24, r26
    16ee:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
	CLCD_voidGoToXY(1,0);
    16f2:	81 e0       	ldi	r24, 0x01	; 1
    16f4:	60 e0       	ldi	r22, 0x00	; 0
    16f6:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
	CLCD_voidSendData('+');
    16fa:	8b e2       	ldi	r24, 0x2B	; 43
    16fc:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
	CLCD_voidGoToXY(2,0);
    1700:	82 e0       	ldi	r24, 0x02	; 2
    1702:	60 e0       	ldi	r22, 0x00	; 0
    1704:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
	CLCD_voidWriteNumber(Local_counter);
    1708:	fe 01       	movw	r30, r28
    170a:	e7 55       	subi	r30, 0x57	; 87
    170c:	ff 4f       	sbci	r31, 0xFF	; 255
    170e:	80 81       	ld	r24, Z
    1710:	91 81       	ldd	r25, Z+1	; 0x01
    1712:	a2 81       	ldd	r26, Z+2	; 0x02
    1714:	b3 81       	ldd	r27, Z+3	; 0x03
    1716:	bc 01       	movw	r22, r24
    1718:	cd 01       	movw	r24, r26
    171a:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    171e:	18 c2       	rjmp	.+1072   	; 0x1b50 <CLCD_voidSimpleCalculator+0x5a6>



	while(Local_u8XPos==0)
	{
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,0,1);
    1720:	ce 01       	movw	r24, r28
    1722:	83 55       	subi	r24, 0x53	; 83
    1724:	9f 4f       	sbci	r25, 0xFF	; 255
    1726:	60 e0       	ldi	r22, 0x00	; 0
    1728:	40 e0       	ldi	r20, 0x00	; 0
    172a:	21 e0       	ldi	r18, 0x01	; 1
    172c:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
    1730:	fe 01       	movw	r30, r28
    1732:	e0 56       	subi	r30, 0x60	; 96
    1734:	ff 4f       	sbci	r31, 0xFF	; 255
    1736:	de 01       	movw	r26, r28
    1738:	a1 56       	subi	r26, 0x61	; 97
    173a:	bf 4f       	sbci	r27, 0xFF	; 255
    173c:	80 81       	ld	r24, Z
    173e:	6c 91       	ld	r22, X
    1740:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		DIO_u8GetPinValue(DIO_u8PORTD,DIO_u8PIN0,&pu8Value1);
    1744:	9e 01       	movw	r18, r28
    1746:	22 54       	subi	r18, 0x42	; 66
    1748:	3f 4f       	sbci	r19, 0xFF	; 255
    174a:	83 e0       	ldi	r24, 0x03	; 3
    174c:	60 e0       	ldi	r22, 0x00	; 0
    174e:	a9 01       	movw	r20, r18
    1750:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
		if(pu8Value1==0   )
    1754:	fe 01       	movw	r30, r28
    1756:	e2 54       	subi	r30, 0x42	; 66
    1758:	ff 4f       	sbci	r31, 0xFF	; 255
    175a:	80 81       	ld	r24, Z
    175c:	88 23       	and	r24, r24
    175e:	09 f0       	breq	.+2      	; 0x1762 <CLCD_voidSimpleCalculator+0x1b8>
    1760:	d8 c0       	rjmp	.+432    	; 0x1912 <CLCD_voidSimpleCalculator+0x368>
		{
			Local_counter++;
    1762:	9e 01       	movw	r18, r28
    1764:	27 55       	subi	r18, 0x57	; 87
    1766:	3f 4f       	sbci	r19, 0xFF	; 255
    1768:	fe 01       	movw	r30, r28
    176a:	e7 55       	subi	r30, 0x57	; 87
    176c:	ff 4f       	sbci	r31, 0xFF	; 255
    176e:	80 81       	ld	r24, Z
    1770:	91 81       	ldd	r25, Z+1	; 0x01
    1772:	a2 81       	ldd	r26, Z+2	; 0x02
    1774:	b3 81       	ldd	r27, Z+3	; 0x03
    1776:	01 96       	adiw	r24, 0x01	; 1
    1778:	a1 1d       	adc	r26, r1
    177a:	b1 1d       	adc	r27, r1
    177c:	f9 01       	movw	r30, r18
    177e:	80 83       	st	Z, r24
    1780:	91 83       	std	Z+1, r25	; 0x01
    1782:	a2 83       	std	Z+2, r26	; 0x02
    1784:	b3 83       	std	Z+3, r27	; 0x03
			if(Local_counter==10)
    1786:	fe 01       	movw	r30, r28
    1788:	e7 55       	subi	r30, 0x57	; 87
    178a:	ff 4f       	sbci	r31, 0xFF	; 255
    178c:	80 81       	ld	r24, Z
    178e:	91 81       	ldd	r25, Z+1	; 0x01
    1790:	a2 81       	ldd	r26, Z+2	; 0x02
    1792:	b3 81       	ldd	r27, Z+3	; 0x03
    1794:	8a 30       	cpi	r24, 0x0A	; 10
    1796:	91 05       	cpc	r25, r1
    1798:	a1 05       	cpc	r26, r1
    179a:	b1 05       	cpc	r27, r1
    179c:	39 f4       	brne	.+14     	; 0x17ac <CLCD_voidSimpleCalculator+0x202>
			{
				Local_counter=0;
    179e:	fe 01       	movw	r30, r28
    17a0:	e7 55       	subi	r30, 0x57	; 87
    17a2:	ff 4f       	sbci	r31, 0xFF	; 255
    17a4:	10 82       	st	Z, r1
    17a6:	11 82       	std	Z+1, r1	; 0x01
    17a8:	12 82       	std	Z+2, r1	; 0x02
    17aa:	13 82       	std	Z+3, r1	; 0x03
    17ac:	fe 01       	movw	r30, r28
    17ae:	e9 56       	subi	r30, 0x69	; 105
    17b0:	ff 4f       	sbci	r31, 0xFF	; 255
    17b2:	80 e0       	ldi	r24, 0x00	; 0
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	aa e7       	ldi	r26, 0x7A	; 122
    17b8:	b3 e4       	ldi	r27, 0x43	; 67
    17ba:	80 83       	st	Z, r24
    17bc:	91 83       	std	Z+1, r25	; 0x01
    17be:	a2 83       	std	Z+2, r26	; 0x02
    17c0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17c2:	8e 01       	movw	r16, r28
    17c4:	0d 56       	subi	r16, 0x6D	; 109
    17c6:	1f 4f       	sbci	r17, 0xFF	; 255
    17c8:	fe 01       	movw	r30, r28
    17ca:	e9 56       	subi	r30, 0x69	; 105
    17cc:	ff 4f       	sbci	r31, 0xFF	; 255
    17ce:	60 81       	ld	r22, Z
    17d0:	71 81       	ldd	r23, Z+1	; 0x01
    17d2:	82 81       	ldd	r24, Z+2	; 0x02
    17d4:	93 81       	ldd	r25, Z+3	; 0x03
    17d6:	20 e0       	ldi	r18, 0x00	; 0
    17d8:	30 e0       	ldi	r19, 0x00	; 0
    17da:	4a ef       	ldi	r20, 0xFA	; 250
    17dc:	54 e4       	ldi	r21, 0x44	; 68
    17de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17e2:	dc 01       	movw	r26, r24
    17e4:	cb 01       	movw	r24, r22
    17e6:	f8 01       	movw	r30, r16
    17e8:	80 83       	st	Z, r24
    17ea:	91 83       	std	Z+1, r25	; 0x01
    17ec:	a2 83       	std	Z+2, r26	; 0x02
    17ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17f0:	fe 01       	movw	r30, r28
    17f2:	ed 56       	subi	r30, 0x6D	; 109
    17f4:	ff 4f       	sbci	r31, 0xFF	; 255
    17f6:	60 81       	ld	r22, Z
    17f8:	71 81       	ldd	r23, Z+1	; 0x01
    17fa:	82 81       	ldd	r24, Z+2	; 0x02
    17fc:	93 81       	ldd	r25, Z+3	; 0x03
    17fe:	20 e0       	ldi	r18, 0x00	; 0
    1800:	30 e0       	ldi	r19, 0x00	; 0
    1802:	40 e8       	ldi	r20, 0x80	; 128
    1804:	5f e3       	ldi	r21, 0x3F	; 63
    1806:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    180a:	88 23       	and	r24, r24
    180c:	44 f4       	brge	.+16     	; 0x181e <CLCD_voidSimpleCalculator+0x274>
		__ticks = 1;
    180e:	fe 01       	movw	r30, r28
    1810:	ef 56       	subi	r30, 0x6F	; 111
    1812:	ff 4f       	sbci	r31, 0xFF	; 255
    1814:	81 e0       	ldi	r24, 0x01	; 1
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	91 83       	std	Z+1, r25	; 0x01
    181a:	80 83       	st	Z, r24
    181c:	64 c0       	rjmp	.+200    	; 0x18e6 <CLCD_voidSimpleCalculator+0x33c>
	else if (__tmp > 65535)
    181e:	fe 01       	movw	r30, r28
    1820:	ed 56       	subi	r30, 0x6D	; 109
    1822:	ff 4f       	sbci	r31, 0xFF	; 255
    1824:	60 81       	ld	r22, Z
    1826:	71 81       	ldd	r23, Z+1	; 0x01
    1828:	82 81       	ldd	r24, Z+2	; 0x02
    182a:	93 81       	ldd	r25, Z+3	; 0x03
    182c:	20 e0       	ldi	r18, 0x00	; 0
    182e:	3f ef       	ldi	r19, 0xFF	; 255
    1830:	4f e7       	ldi	r20, 0x7F	; 127
    1832:	57 e4       	ldi	r21, 0x47	; 71
    1834:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1838:	18 16       	cp	r1, r24
    183a:	0c f0       	brlt	.+2      	; 0x183e <CLCD_voidSimpleCalculator+0x294>
    183c:	43 c0       	rjmp	.+134    	; 0x18c4 <CLCD_voidSimpleCalculator+0x31a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    183e:	fe 01       	movw	r30, r28
    1840:	e9 56       	subi	r30, 0x69	; 105
    1842:	ff 4f       	sbci	r31, 0xFF	; 255
    1844:	60 81       	ld	r22, Z
    1846:	71 81       	ldd	r23, Z+1	; 0x01
    1848:	82 81       	ldd	r24, Z+2	; 0x02
    184a:	93 81       	ldd	r25, Z+3	; 0x03
    184c:	20 e0       	ldi	r18, 0x00	; 0
    184e:	30 e0       	ldi	r19, 0x00	; 0
    1850:	40 e2       	ldi	r20, 0x20	; 32
    1852:	51 e4       	ldi	r21, 0x41	; 65
    1854:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1858:	dc 01       	movw	r26, r24
    185a:	cb 01       	movw	r24, r22
    185c:	8e 01       	movw	r16, r28
    185e:	0f 56       	subi	r16, 0x6F	; 111
    1860:	1f 4f       	sbci	r17, 0xFF	; 255
    1862:	bc 01       	movw	r22, r24
    1864:	cd 01       	movw	r24, r26
    1866:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    186a:	dc 01       	movw	r26, r24
    186c:	cb 01       	movw	r24, r22
    186e:	f8 01       	movw	r30, r16
    1870:	91 83       	std	Z+1, r25	; 0x01
    1872:	80 83       	st	Z, r24
    1874:	1f c0       	rjmp	.+62     	; 0x18b4 <CLCD_voidSimpleCalculator+0x30a>
    1876:	fe 01       	movw	r30, r28
    1878:	e1 57       	subi	r30, 0x71	; 113
    187a:	ff 4f       	sbci	r31, 0xFF	; 255
    187c:	88 ec       	ldi	r24, 0xC8	; 200
    187e:	90 e0       	ldi	r25, 0x00	; 0
    1880:	91 83       	std	Z+1, r25	; 0x01
    1882:	80 83       	st	Z, r24
    1884:	fe 01       	movw	r30, r28
    1886:	e1 57       	subi	r30, 0x71	; 113
    1888:	ff 4f       	sbci	r31, 0xFF	; 255
    188a:	80 81       	ld	r24, Z
    188c:	91 81       	ldd	r25, Z+1	; 0x01
    188e:	01 97       	sbiw	r24, 0x01	; 1
    1890:	f1 f7       	brne	.-4      	; 0x188e <CLCD_voidSimpleCalculator+0x2e4>
    1892:	fe 01       	movw	r30, r28
    1894:	e1 57       	subi	r30, 0x71	; 113
    1896:	ff 4f       	sbci	r31, 0xFF	; 255
    1898:	91 83       	std	Z+1, r25	; 0x01
    189a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    189c:	de 01       	movw	r26, r28
    189e:	af 56       	subi	r26, 0x6F	; 111
    18a0:	bf 4f       	sbci	r27, 0xFF	; 255
    18a2:	fe 01       	movw	r30, r28
    18a4:	ef 56       	subi	r30, 0x6F	; 111
    18a6:	ff 4f       	sbci	r31, 0xFF	; 255
    18a8:	80 81       	ld	r24, Z
    18aa:	91 81       	ldd	r25, Z+1	; 0x01
    18ac:	01 97       	sbiw	r24, 0x01	; 1
    18ae:	11 96       	adiw	r26, 0x01	; 1
    18b0:	9c 93       	st	X, r25
    18b2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18b4:	fe 01       	movw	r30, r28
    18b6:	ef 56       	subi	r30, 0x6F	; 111
    18b8:	ff 4f       	sbci	r31, 0xFF	; 255
    18ba:	80 81       	ld	r24, Z
    18bc:	91 81       	ldd	r25, Z+1	; 0x01
    18be:	00 97       	sbiw	r24, 0x00	; 0
    18c0:	d1 f6       	brne	.-76     	; 0x1876 <CLCD_voidSimpleCalculator+0x2cc>
    18c2:	27 c0       	rjmp	.+78     	; 0x1912 <CLCD_voidSimpleCalculator+0x368>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18c4:	8e 01       	movw	r16, r28
    18c6:	0f 56       	subi	r16, 0x6F	; 111
    18c8:	1f 4f       	sbci	r17, 0xFF	; 255
    18ca:	fe 01       	movw	r30, r28
    18cc:	ed 56       	subi	r30, 0x6D	; 109
    18ce:	ff 4f       	sbci	r31, 0xFF	; 255
    18d0:	60 81       	ld	r22, Z
    18d2:	71 81       	ldd	r23, Z+1	; 0x01
    18d4:	82 81       	ldd	r24, Z+2	; 0x02
    18d6:	93 81       	ldd	r25, Z+3	; 0x03
    18d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18dc:	dc 01       	movw	r26, r24
    18de:	cb 01       	movw	r24, r22
    18e0:	f8 01       	movw	r30, r16
    18e2:	91 83       	std	Z+1, r25	; 0x01
    18e4:	80 83       	st	Z, r24
    18e6:	de 01       	movw	r26, r28
    18e8:	a3 57       	subi	r26, 0x73	; 115
    18ea:	bf 4f       	sbci	r27, 0xFF	; 255
    18ec:	fe 01       	movw	r30, r28
    18ee:	ef 56       	subi	r30, 0x6F	; 111
    18f0:	ff 4f       	sbci	r31, 0xFF	; 255
    18f2:	80 81       	ld	r24, Z
    18f4:	91 81       	ldd	r25, Z+1	; 0x01
    18f6:	8d 93       	st	X+, r24
    18f8:	9c 93       	st	X, r25
    18fa:	fe 01       	movw	r30, r28
    18fc:	e3 57       	subi	r30, 0x73	; 115
    18fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1900:	80 81       	ld	r24, Z
    1902:	91 81       	ldd	r25, Z+1	; 0x01
    1904:	01 97       	sbiw	r24, 0x01	; 1
    1906:	f1 f7       	brne	.-4      	; 0x1904 <CLCD_voidSimpleCalculator+0x35a>
    1908:	fe 01       	movw	r30, r28
    190a:	e3 57       	subi	r30, 0x73	; 115
    190c:	ff 4f       	sbci	r31, 0xFF	; 255
    190e:	91 83       	std	Z+1, r25	; 0x01
    1910:	80 83       	st	Z, r24
			}
			_delay_ms(250);

		}
		CLCD_voidGoToXY(0,0);
    1912:	80 e0       	ldi	r24, 0x00	; 0
    1914:	60 e0       	ldi	r22, 0x00	; 0
    1916:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		CLCD_voidWriteNumber(Local_counter);
    191a:	fe 01       	movw	r30, r28
    191c:	e7 55       	subi	r30, 0x57	; 87
    191e:	ff 4f       	sbci	r31, 0xFF	; 255
    1920:	80 81       	ld	r24, Z
    1922:	91 81       	ldd	r25, Z+1	; 0x01
    1924:	a2 81       	ldd	r26, Z+2	; 0x02
    1926:	b3 81       	ldd	r27, Z+3	; 0x03
    1928:	bc 01       	movw	r22, r24
    192a:	cd 01       	movw	r24, r26
    192c:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
		DIO_u8GetPinValue(DIO_u8PORTD,DIO_u8PIN1,&pu8Value2);
    1930:	9e 01       	movw	r18, r28
    1932:	21 54       	subi	r18, 0x41	; 65
    1934:	3f 4f       	sbci	r19, 0xFF	; 255
    1936:	83 e0       	ldi	r24, 0x03	; 3
    1938:	61 e0       	ldi	r22, 0x01	; 1
    193a:	a9 01       	movw	r20, r18
    193c:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
		if(pu8Value2==0   )
    1940:	fe 01       	movw	r30, r28
    1942:	e1 54       	subi	r30, 0x41	; 65
    1944:	ff 4f       	sbci	r31, 0xFF	; 255
    1946:	80 81       	ld	r24, Z
    1948:	88 23       	and	r24, r24
    194a:	09 f0       	breq	.+2      	; 0x194e <CLCD_voidSimpleCalculator+0x3a4>
    194c:	db c0       	rjmp	.+438    	; 0x1b04 <CLCD_voidSimpleCalculator+0x55a>
		{
			Local_counter--;
    194e:	9e 01       	movw	r18, r28
    1950:	27 55       	subi	r18, 0x57	; 87
    1952:	3f 4f       	sbci	r19, 0xFF	; 255
    1954:	fe 01       	movw	r30, r28
    1956:	e7 55       	subi	r30, 0x57	; 87
    1958:	ff 4f       	sbci	r31, 0xFF	; 255
    195a:	80 81       	ld	r24, Z
    195c:	91 81       	ldd	r25, Z+1	; 0x01
    195e:	a2 81       	ldd	r26, Z+2	; 0x02
    1960:	b3 81       	ldd	r27, Z+3	; 0x03
    1962:	01 97       	sbiw	r24, 0x01	; 1
    1964:	a1 09       	sbc	r26, r1
    1966:	b1 09       	sbc	r27, r1
    1968:	f9 01       	movw	r30, r18
    196a:	80 83       	st	Z, r24
    196c:	91 83       	std	Z+1, r25	; 0x01
    196e:	a2 83       	std	Z+2, r26	; 0x02
    1970:	b3 83       	std	Z+3, r27	; 0x03
			if(Local_counter==0)
    1972:	fe 01       	movw	r30, r28
    1974:	e7 55       	subi	r30, 0x57	; 87
    1976:	ff 4f       	sbci	r31, 0xFF	; 255
    1978:	80 81       	ld	r24, Z
    197a:	91 81       	ldd	r25, Z+1	; 0x01
    197c:	a2 81       	ldd	r26, Z+2	; 0x02
    197e:	b3 81       	ldd	r27, Z+3	; 0x03
    1980:	00 97       	sbiw	r24, 0x00	; 0
    1982:	a1 05       	cpc	r26, r1
    1984:	b1 05       	cpc	r27, r1
    1986:	59 f4       	brne	.+22     	; 0x199e <CLCD_voidSimpleCalculator+0x3f4>
			{
				Local_counter=9;
    1988:	fe 01       	movw	r30, r28
    198a:	e7 55       	subi	r30, 0x57	; 87
    198c:	ff 4f       	sbci	r31, 0xFF	; 255
    198e:	89 e0       	ldi	r24, 0x09	; 9
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	a0 e0       	ldi	r26, 0x00	; 0
    1994:	b0 e0       	ldi	r27, 0x00	; 0
    1996:	80 83       	st	Z, r24
    1998:	91 83       	std	Z+1, r25	; 0x01
    199a:	a2 83       	std	Z+2, r26	; 0x02
    199c:	b3 83       	std	Z+3, r27	; 0x03
    199e:	fe 01       	movw	r30, r28
    19a0:	e7 57       	subi	r30, 0x77	; 119
    19a2:	ff 4f       	sbci	r31, 0xFF	; 255
    19a4:	80 e0       	ldi	r24, 0x00	; 0
    19a6:	90 e0       	ldi	r25, 0x00	; 0
    19a8:	aa e7       	ldi	r26, 0x7A	; 122
    19aa:	b3 e4       	ldi	r27, 0x43	; 67
    19ac:	80 83       	st	Z, r24
    19ae:	91 83       	std	Z+1, r25	; 0x01
    19b0:	a2 83       	std	Z+2, r26	; 0x02
    19b2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19b4:	8e 01       	movw	r16, r28
    19b6:	0b 57       	subi	r16, 0x7B	; 123
    19b8:	1f 4f       	sbci	r17, 0xFF	; 255
    19ba:	fe 01       	movw	r30, r28
    19bc:	e7 57       	subi	r30, 0x77	; 119
    19be:	ff 4f       	sbci	r31, 0xFF	; 255
    19c0:	60 81       	ld	r22, Z
    19c2:	71 81       	ldd	r23, Z+1	; 0x01
    19c4:	82 81       	ldd	r24, Z+2	; 0x02
    19c6:	93 81       	ldd	r25, Z+3	; 0x03
    19c8:	20 e0       	ldi	r18, 0x00	; 0
    19ca:	30 e0       	ldi	r19, 0x00	; 0
    19cc:	4a ef       	ldi	r20, 0xFA	; 250
    19ce:	54 e4       	ldi	r21, 0x44	; 68
    19d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19d4:	dc 01       	movw	r26, r24
    19d6:	cb 01       	movw	r24, r22
    19d8:	f8 01       	movw	r30, r16
    19da:	80 83       	st	Z, r24
    19dc:	91 83       	std	Z+1, r25	; 0x01
    19de:	a2 83       	std	Z+2, r26	; 0x02
    19e0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19e2:	fe 01       	movw	r30, r28
    19e4:	eb 57       	subi	r30, 0x7B	; 123
    19e6:	ff 4f       	sbci	r31, 0xFF	; 255
    19e8:	60 81       	ld	r22, Z
    19ea:	71 81       	ldd	r23, Z+1	; 0x01
    19ec:	82 81       	ldd	r24, Z+2	; 0x02
    19ee:	93 81       	ldd	r25, Z+3	; 0x03
    19f0:	20 e0       	ldi	r18, 0x00	; 0
    19f2:	30 e0       	ldi	r19, 0x00	; 0
    19f4:	40 e8       	ldi	r20, 0x80	; 128
    19f6:	5f e3       	ldi	r21, 0x3F	; 63
    19f8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    19fc:	88 23       	and	r24, r24
    19fe:	44 f4       	brge	.+16     	; 0x1a10 <CLCD_voidSimpleCalculator+0x466>
		__ticks = 1;
    1a00:	fe 01       	movw	r30, r28
    1a02:	ed 57       	subi	r30, 0x7D	; 125
    1a04:	ff 4f       	sbci	r31, 0xFF	; 255
    1a06:	81 e0       	ldi	r24, 0x01	; 1
    1a08:	90 e0       	ldi	r25, 0x00	; 0
    1a0a:	91 83       	std	Z+1, r25	; 0x01
    1a0c:	80 83       	st	Z, r24
    1a0e:	64 c0       	rjmp	.+200    	; 0x1ad8 <CLCD_voidSimpleCalculator+0x52e>
	else if (__tmp > 65535)
    1a10:	fe 01       	movw	r30, r28
    1a12:	eb 57       	subi	r30, 0x7B	; 123
    1a14:	ff 4f       	sbci	r31, 0xFF	; 255
    1a16:	60 81       	ld	r22, Z
    1a18:	71 81       	ldd	r23, Z+1	; 0x01
    1a1a:	82 81       	ldd	r24, Z+2	; 0x02
    1a1c:	93 81       	ldd	r25, Z+3	; 0x03
    1a1e:	20 e0       	ldi	r18, 0x00	; 0
    1a20:	3f ef       	ldi	r19, 0xFF	; 255
    1a22:	4f e7       	ldi	r20, 0x7F	; 127
    1a24:	57 e4       	ldi	r21, 0x47	; 71
    1a26:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1a2a:	18 16       	cp	r1, r24
    1a2c:	0c f0       	brlt	.+2      	; 0x1a30 <CLCD_voidSimpleCalculator+0x486>
    1a2e:	43 c0       	rjmp	.+134    	; 0x1ab6 <CLCD_voidSimpleCalculator+0x50c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a30:	fe 01       	movw	r30, r28
    1a32:	e7 57       	subi	r30, 0x77	; 119
    1a34:	ff 4f       	sbci	r31, 0xFF	; 255
    1a36:	60 81       	ld	r22, Z
    1a38:	71 81       	ldd	r23, Z+1	; 0x01
    1a3a:	82 81       	ldd	r24, Z+2	; 0x02
    1a3c:	93 81       	ldd	r25, Z+3	; 0x03
    1a3e:	20 e0       	ldi	r18, 0x00	; 0
    1a40:	30 e0       	ldi	r19, 0x00	; 0
    1a42:	40 e2       	ldi	r20, 0x20	; 32
    1a44:	51 e4       	ldi	r21, 0x41	; 65
    1a46:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a4a:	dc 01       	movw	r26, r24
    1a4c:	cb 01       	movw	r24, r22
    1a4e:	8e 01       	movw	r16, r28
    1a50:	0d 57       	subi	r16, 0x7D	; 125
    1a52:	1f 4f       	sbci	r17, 0xFF	; 255
    1a54:	bc 01       	movw	r22, r24
    1a56:	cd 01       	movw	r24, r26
    1a58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a5c:	dc 01       	movw	r26, r24
    1a5e:	cb 01       	movw	r24, r22
    1a60:	f8 01       	movw	r30, r16
    1a62:	91 83       	std	Z+1, r25	; 0x01
    1a64:	80 83       	st	Z, r24
    1a66:	1f c0       	rjmp	.+62     	; 0x1aa6 <CLCD_voidSimpleCalculator+0x4fc>
    1a68:	fe 01       	movw	r30, r28
    1a6a:	ef 57       	subi	r30, 0x7F	; 127
    1a6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6e:	88 ec       	ldi	r24, 0xC8	; 200
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	91 83       	std	Z+1, r25	; 0x01
    1a74:	80 83       	st	Z, r24
    1a76:	fe 01       	movw	r30, r28
    1a78:	ef 57       	subi	r30, 0x7F	; 127
    1a7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a7c:	80 81       	ld	r24, Z
    1a7e:	91 81       	ldd	r25, Z+1	; 0x01
    1a80:	01 97       	sbiw	r24, 0x01	; 1
    1a82:	f1 f7       	brne	.-4      	; 0x1a80 <CLCD_voidSimpleCalculator+0x4d6>
    1a84:	fe 01       	movw	r30, r28
    1a86:	ef 57       	subi	r30, 0x7F	; 127
    1a88:	ff 4f       	sbci	r31, 0xFF	; 255
    1a8a:	91 83       	std	Z+1, r25	; 0x01
    1a8c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a8e:	de 01       	movw	r26, r28
    1a90:	ad 57       	subi	r26, 0x7D	; 125
    1a92:	bf 4f       	sbci	r27, 0xFF	; 255
    1a94:	fe 01       	movw	r30, r28
    1a96:	ed 57       	subi	r30, 0x7D	; 125
    1a98:	ff 4f       	sbci	r31, 0xFF	; 255
    1a9a:	80 81       	ld	r24, Z
    1a9c:	91 81       	ldd	r25, Z+1	; 0x01
    1a9e:	01 97       	sbiw	r24, 0x01	; 1
    1aa0:	11 96       	adiw	r26, 0x01	; 1
    1aa2:	9c 93       	st	X, r25
    1aa4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1aa6:	fe 01       	movw	r30, r28
    1aa8:	ed 57       	subi	r30, 0x7D	; 125
    1aaa:	ff 4f       	sbci	r31, 0xFF	; 255
    1aac:	80 81       	ld	r24, Z
    1aae:	91 81       	ldd	r25, Z+1	; 0x01
    1ab0:	00 97       	sbiw	r24, 0x00	; 0
    1ab2:	d1 f6       	brne	.-76     	; 0x1a68 <CLCD_voidSimpleCalculator+0x4be>
    1ab4:	27 c0       	rjmp	.+78     	; 0x1b04 <CLCD_voidSimpleCalculator+0x55a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ab6:	8e 01       	movw	r16, r28
    1ab8:	0d 57       	subi	r16, 0x7D	; 125
    1aba:	1f 4f       	sbci	r17, 0xFF	; 255
    1abc:	fe 01       	movw	r30, r28
    1abe:	eb 57       	subi	r30, 0x7B	; 123
    1ac0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac2:	60 81       	ld	r22, Z
    1ac4:	71 81       	ldd	r23, Z+1	; 0x01
    1ac6:	82 81       	ldd	r24, Z+2	; 0x02
    1ac8:	93 81       	ldd	r25, Z+3	; 0x03
    1aca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ace:	dc 01       	movw	r26, r24
    1ad0:	cb 01       	movw	r24, r22
    1ad2:	f8 01       	movw	r30, r16
    1ad4:	91 83       	std	Z+1, r25	; 0x01
    1ad6:	80 83       	st	Z, r24
    1ad8:	de 01       	movw	r26, r28
    1ada:	a1 58       	subi	r26, 0x81	; 129
    1adc:	bf 4f       	sbci	r27, 0xFF	; 255
    1ade:	fe 01       	movw	r30, r28
    1ae0:	ed 57       	subi	r30, 0x7D	; 125
    1ae2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ae4:	80 81       	ld	r24, Z
    1ae6:	91 81       	ldd	r25, Z+1	; 0x01
    1ae8:	8d 93       	st	X+, r24
    1aea:	9c 93       	st	X, r25
    1aec:	fe 01       	movw	r30, r28
    1aee:	e1 58       	subi	r30, 0x81	; 129
    1af0:	ff 4f       	sbci	r31, 0xFF	; 255
    1af2:	80 81       	ld	r24, Z
    1af4:	91 81       	ldd	r25, Z+1	; 0x01
    1af6:	01 97       	sbiw	r24, 0x01	; 1
    1af8:	f1 f7       	brne	.-4      	; 0x1af6 <CLCD_voidSimpleCalculator+0x54c>
    1afa:	fe 01       	movw	r30, r28
    1afc:	e1 58       	subi	r30, 0x81	; 129
    1afe:	ff 4f       	sbci	r31, 0xFF	; 255
    1b00:	91 83       	std	Z+1, r25	; 0x01
    1b02:	80 83       	st	Z, r24
			}
			_delay_ms(250);


		}
		CLCD_voidGoToXY(0,0);
    1b04:	80 e0       	ldi	r24, 0x00	; 0
    1b06:	60 e0       	ldi	r22, 0x00	; 0
    1b08:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		CLCD_voidWriteNumber(Local_counter);
    1b0c:	fe 01       	movw	r30, r28
    1b0e:	e7 55       	subi	r30, 0x57	; 87
    1b10:	ff 4f       	sbci	r31, 0xFF	; 255
    1b12:	80 81       	ld	r24, Z
    1b14:	91 81       	ldd	r25, Z+1	; 0x01
    1b16:	a2 81       	ldd	r26, Z+2	; 0x02
    1b18:	b3 81       	ldd	r27, Z+3	; 0x03
    1b1a:	bc 01       	movw	r22, r24
    1b1c:	cd 01       	movw	r24, r26
    1b1e:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
		DIO_u8GetPinValue(DIO_u8PORTD,DIO_u8PIN2,&pu8Value);
    1b22:	9e 01       	movw	r18, r28
    1b24:	23 54       	subi	r18, 0x43	; 67
    1b26:	3f 4f       	sbci	r19, 0xFF	; 255
    1b28:	83 e0       	ldi	r24, 0x03	; 3
    1b2a:	62 e0       	ldi	r22, 0x02	; 2
    1b2c:	a9 01       	movw	r20, r18
    1b2e:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
		if(pu8Value==0)
    1b32:	fe 01       	movw	r30, r28
    1b34:	e3 54       	subi	r30, 0x43	; 67
    1b36:	ff 4f       	sbci	r31, 0xFF	; 255
    1b38:	80 81       	ld	r24, Z
    1b3a:	88 23       	and	r24, r24
    1b3c:	49 f4       	brne	.+18     	; 0x1b50 <CLCD_voidSimpleCalculator+0x5a6>
		{

			Local_u8XPos=Local_u8XPos+1;
    1b3e:	de 01       	movw	r26, r28
    1b40:	a0 56       	subi	r26, 0x60	; 96
    1b42:	bf 4f       	sbci	r27, 0xFF	; 255
    1b44:	fe 01       	movw	r30, r28
    1b46:	e0 56       	subi	r30, 0x60	; 96
    1b48:	ff 4f       	sbci	r31, 0xFF	; 255
    1b4a:	80 81       	ld	r24, Z
    1b4c:	8f 5f       	subi	r24, 0xFF	; 255
    1b4e:	8c 93       	st	X, r24
	CLCD_voidGoToXY(2,0);
	CLCD_voidWriteNumber(Local_counter);



	while(Local_u8XPos==0)
    1b50:	fe 01       	movw	r30, r28
    1b52:	e0 56       	subi	r30, 0x60	; 96
    1b54:	ff 4f       	sbci	r31, 0xFF	; 255
    1b56:	80 81       	ld	r24, Z
    1b58:	88 23       	and	r24, r24
    1b5a:	09 f4       	brne	.+2      	; 0x1b5e <CLCD_voidSimpleCalculator+0x5b4>
    1b5c:	e1 cd       	rjmp	.-1086   	; 0x1720 <CLCD_voidSimpleCalculator+0x176>
    1b5e:	fe 01       	movw	r30, r28
    1b60:	e5 58       	subi	r30, 0x85	; 133
    1b62:	ff 4f       	sbci	r31, 0xFF	; 255
    1b64:	80 e0       	ldi	r24, 0x00	; 0
    1b66:	90 e0       	ldi	r25, 0x00	; 0
    1b68:	aa e7       	ldi	r26, 0x7A	; 122
    1b6a:	b3 e4       	ldi	r27, 0x43	; 67
    1b6c:	80 83       	st	Z, r24
    1b6e:	91 83       	std	Z+1, r25	; 0x01
    1b70:	a2 83       	std	Z+2, r26	; 0x02
    1b72:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b74:	8e 01       	movw	r16, r28
    1b76:	09 58       	subi	r16, 0x89	; 137
    1b78:	1f 4f       	sbci	r17, 0xFF	; 255
    1b7a:	fe 01       	movw	r30, r28
    1b7c:	e5 58       	subi	r30, 0x85	; 133
    1b7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b80:	60 81       	ld	r22, Z
    1b82:	71 81       	ldd	r23, Z+1	; 0x01
    1b84:	82 81       	ldd	r24, Z+2	; 0x02
    1b86:	93 81       	ldd	r25, Z+3	; 0x03
    1b88:	20 e0       	ldi	r18, 0x00	; 0
    1b8a:	30 e0       	ldi	r19, 0x00	; 0
    1b8c:	4a ef       	ldi	r20, 0xFA	; 250
    1b8e:	54 e4       	ldi	r21, 0x44	; 68
    1b90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b94:	dc 01       	movw	r26, r24
    1b96:	cb 01       	movw	r24, r22
    1b98:	f8 01       	movw	r30, r16
    1b9a:	80 83       	st	Z, r24
    1b9c:	91 83       	std	Z+1, r25	; 0x01
    1b9e:	a2 83       	std	Z+2, r26	; 0x02
    1ba0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ba2:	fe 01       	movw	r30, r28
    1ba4:	e9 58       	subi	r30, 0x89	; 137
    1ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba8:	60 81       	ld	r22, Z
    1baa:	71 81       	ldd	r23, Z+1	; 0x01
    1bac:	82 81       	ldd	r24, Z+2	; 0x02
    1bae:	93 81       	ldd	r25, Z+3	; 0x03
    1bb0:	20 e0       	ldi	r18, 0x00	; 0
    1bb2:	30 e0       	ldi	r19, 0x00	; 0
    1bb4:	40 e8       	ldi	r20, 0x80	; 128
    1bb6:	5f e3       	ldi	r21, 0x3F	; 63
    1bb8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1bbc:	88 23       	and	r24, r24
    1bbe:	44 f4       	brge	.+16     	; 0x1bd0 <CLCD_voidSimpleCalculator+0x626>
		__ticks = 1;
    1bc0:	fe 01       	movw	r30, r28
    1bc2:	eb 58       	subi	r30, 0x8B	; 139
    1bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc6:	81 e0       	ldi	r24, 0x01	; 1
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	91 83       	std	Z+1, r25	; 0x01
    1bcc:	80 83       	st	Z, r24
    1bce:	64 c0       	rjmp	.+200    	; 0x1c98 <CLCD_voidSimpleCalculator+0x6ee>
	else if (__tmp > 65535)
    1bd0:	fe 01       	movw	r30, r28
    1bd2:	e9 58       	subi	r30, 0x89	; 137
    1bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd6:	60 81       	ld	r22, Z
    1bd8:	71 81       	ldd	r23, Z+1	; 0x01
    1bda:	82 81       	ldd	r24, Z+2	; 0x02
    1bdc:	93 81       	ldd	r25, Z+3	; 0x03
    1bde:	20 e0       	ldi	r18, 0x00	; 0
    1be0:	3f ef       	ldi	r19, 0xFF	; 255
    1be2:	4f e7       	ldi	r20, 0x7F	; 127
    1be4:	57 e4       	ldi	r21, 0x47	; 71
    1be6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1bea:	18 16       	cp	r1, r24
    1bec:	0c f0       	brlt	.+2      	; 0x1bf0 <CLCD_voidSimpleCalculator+0x646>
    1bee:	43 c0       	rjmp	.+134    	; 0x1c76 <CLCD_voidSimpleCalculator+0x6cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bf0:	fe 01       	movw	r30, r28
    1bf2:	e5 58       	subi	r30, 0x85	; 133
    1bf4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf6:	60 81       	ld	r22, Z
    1bf8:	71 81       	ldd	r23, Z+1	; 0x01
    1bfa:	82 81       	ldd	r24, Z+2	; 0x02
    1bfc:	93 81       	ldd	r25, Z+3	; 0x03
    1bfe:	20 e0       	ldi	r18, 0x00	; 0
    1c00:	30 e0       	ldi	r19, 0x00	; 0
    1c02:	40 e2       	ldi	r20, 0x20	; 32
    1c04:	51 e4       	ldi	r21, 0x41	; 65
    1c06:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c0a:	dc 01       	movw	r26, r24
    1c0c:	cb 01       	movw	r24, r22
    1c0e:	8e 01       	movw	r16, r28
    1c10:	0b 58       	subi	r16, 0x8B	; 139
    1c12:	1f 4f       	sbci	r17, 0xFF	; 255
    1c14:	bc 01       	movw	r22, r24
    1c16:	cd 01       	movw	r24, r26
    1c18:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c1c:	dc 01       	movw	r26, r24
    1c1e:	cb 01       	movw	r24, r22
    1c20:	f8 01       	movw	r30, r16
    1c22:	91 83       	std	Z+1, r25	; 0x01
    1c24:	80 83       	st	Z, r24
    1c26:	1f c0       	rjmp	.+62     	; 0x1c66 <CLCD_voidSimpleCalculator+0x6bc>
    1c28:	fe 01       	movw	r30, r28
    1c2a:	ed 58       	subi	r30, 0x8D	; 141
    1c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c2e:	88 ec       	ldi	r24, 0xC8	; 200
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	91 83       	std	Z+1, r25	; 0x01
    1c34:	80 83       	st	Z, r24
    1c36:	fe 01       	movw	r30, r28
    1c38:	ed 58       	subi	r30, 0x8D	; 141
    1c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3c:	80 81       	ld	r24, Z
    1c3e:	91 81       	ldd	r25, Z+1	; 0x01
    1c40:	01 97       	sbiw	r24, 0x01	; 1
    1c42:	f1 f7       	brne	.-4      	; 0x1c40 <CLCD_voidSimpleCalculator+0x696>
    1c44:	fe 01       	movw	r30, r28
    1c46:	ed 58       	subi	r30, 0x8D	; 141
    1c48:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4a:	91 83       	std	Z+1, r25	; 0x01
    1c4c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c4e:	de 01       	movw	r26, r28
    1c50:	ab 58       	subi	r26, 0x8B	; 139
    1c52:	bf 4f       	sbci	r27, 0xFF	; 255
    1c54:	fe 01       	movw	r30, r28
    1c56:	eb 58       	subi	r30, 0x8B	; 139
    1c58:	ff 4f       	sbci	r31, 0xFF	; 255
    1c5a:	80 81       	ld	r24, Z
    1c5c:	91 81       	ldd	r25, Z+1	; 0x01
    1c5e:	01 97       	sbiw	r24, 0x01	; 1
    1c60:	11 96       	adiw	r26, 0x01	; 1
    1c62:	9c 93       	st	X, r25
    1c64:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c66:	fe 01       	movw	r30, r28
    1c68:	eb 58       	subi	r30, 0x8B	; 139
    1c6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c6c:	80 81       	ld	r24, Z
    1c6e:	91 81       	ldd	r25, Z+1	; 0x01
    1c70:	00 97       	sbiw	r24, 0x00	; 0
    1c72:	d1 f6       	brne	.-76     	; 0x1c28 <CLCD_voidSimpleCalculator+0x67e>
    1c74:	27 c0       	rjmp	.+78     	; 0x1cc4 <CLCD_voidSimpleCalculator+0x71a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c76:	8e 01       	movw	r16, r28
    1c78:	0b 58       	subi	r16, 0x8B	; 139
    1c7a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c7c:	fe 01       	movw	r30, r28
    1c7e:	e9 58       	subi	r30, 0x89	; 137
    1c80:	ff 4f       	sbci	r31, 0xFF	; 255
    1c82:	60 81       	ld	r22, Z
    1c84:	71 81       	ldd	r23, Z+1	; 0x01
    1c86:	82 81       	ldd	r24, Z+2	; 0x02
    1c88:	93 81       	ldd	r25, Z+3	; 0x03
    1c8a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c8e:	dc 01       	movw	r26, r24
    1c90:	cb 01       	movw	r24, r22
    1c92:	f8 01       	movw	r30, r16
    1c94:	91 83       	std	Z+1, r25	; 0x01
    1c96:	80 83       	st	Z, r24
    1c98:	de 01       	movw	r26, r28
    1c9a:	af 58       	subi	r26, 0x8F	; 143
    1c9c:	bf 4f       	sbci	r27, 0xFF	; 255
    1c9e:	fe 01       	movw	r30, r28
    1ca0:	eb 58       	subi	r30, 0x8B	; 139
    1ca2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ca4:	80 81       	ld	r24, Z
    1ca6:	91 81       	ldd	r25, Z+1	; 0x01
    1ca8:	8d 93       	st	X+, r24
    1caa:	9c 93       	st	X, r25
    1cac:	fe 01       	movw	r30, r28
    1cae:	ef 58       	subi	r30, 0x8F	; 143
    1cb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb2:	80 81       	ld	r24, Z
    1cb4:	91 81       	ldd	r25, Z+1	; 0x01
    1cb6:	01 97       	sbiw	r24, 0x01	; 1
    1cb8:	f1 f7       	brne	.-4      	; 0x1cb6 <CLCD_voidSimpleCalculator+0x70c>
    1cba:	fe 01       	movw	r30, r28
    1cbc:	ef 58       	subi	r30, 0x8F	; 143
    1cbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc0:	91 83       	std	Z+1, r25	; 0x01
    1cc2:	80 83       	st	Z, r24
			Local_u8XPos=Local_u8XPos+1;
		}

	}
	_delay_ms(250);
	CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,0,1);
    1cc4:	ce 01       	movw	r24, r28
    1cc6:	8b 54       	subi	r24, 0x4B	; 75
    1cc8:	9f 4f       	sbci	r25, 0xFF	; 255
    1cca:	61 e0       	ldi	r22, 0x01	; 1
    1ccc:	40 e0       	ldi	r20, 0x00	; 0
    1cce:	21 e0       	ldi	r18, 0x01	; 1
    1cd0:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    1cd4:	5f c2       	rjmp	.+1214   	; 0x2194 <CLCD_voidSimpleCalculator+0xbea>
	while(Local_u8XPos==1)
	{
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,1,1);
    1cd6:	ce 01       	movw	r24, r28
    1cd8:	83 55       	subi	r24, 0x53	; 83
    1cda:	9f 4f       	sbci	r25, 0xFF	; 255
    1cdc:	60 e0       	ldi	r22, 0x00	; 0
    1cde:	41 e0       	ldi	r20, 0x01	; 1
    1ce0:	21 e0       	ldi	r18, 0x01	; 1
    1ce2:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
    1ce6:	fe 01       	movw	r30, r28
    1ce8:	e0 56       	subi	r30, 0x60	; 96
    1cea:	ff 4f       	sbci	r31, 0xFF	; 255
    1cec:	de 01       	movw	r26, r28
    1cee:	a1 56       	subi	r26, 0x61	; 97
    1cf0:	bf 4f       	sbci	r27, 0xFF	; 255
    1cf2:	80 81       	ld	r24, Z
    1cf4:	6c 91       	ld	r22, X
    1cf6:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		DIO_u8GetPinValue(DIO_u8PORTD,DIO_u8PIN0,&pu8Value1);
    1cfa:	9e 01       	movw	r18, r28
    1cfc:	22 54       	subi	r18, 0x42	; 66
    1cfe:	3f 4f       	sbci	r19, 0xFF	; 255
    1d00:	83 e0       	ldi	r24, 0x03	; 3
    1d02:	60 e0       	ldi	r22, 0x00	; 0
    1d04:	a9 01       	movw	r20, r18
    1d06:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
		if(pu8Value1==0   )
    1d0a:	fe 01       	movw	r30, r28
    1d0c:	e2 54       	subi	r30, 0x42	; 66
    1d0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d10:	80 81       	ld	r24, Z
    1d12:	88 23       	and	r24, r24
    1d14:	09 f0       	breq	.+2      	; 0x1d18 <CLCD_voidSimpleCalculator+0x76e>
    1d16:	dc c0       	rjmp	.+440    	; 0x1ed0 <CLCD_voidSimpleCalculator+0x926>
		{
			Local_Mark++;
    1d18:	9e 01       	movw	r18, r28
    1d1a:	2b 55       	subi	r18, 0x5B	; 91
    1d1c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d1e:	fe 01       	movw	r30, r28
    1d20:	eb 55       	subi	r30, 0x5B	; 91
    1d22:	ff 4f       	sbci	r31, 0xFF	; 255
    1d24:	80 81       	ld	r24, Z
    1d26:	91 81       	ldd	r25, Z+1	; 0x01
    1d28:	a2 81       	ldd	r26, Z+2	; 0x02
    1d2a:	b3 81       	ldd	r27, Z+3	; 0x03
    1d2c:	01 96       	adiw	r24, 0x01	; 1
    1d2e:	a1 1d       	adc	r26, r1
    1d30:	b1 1d       	adc	r27, r1
    1d32:	f9 01       	movw	r30, r18
    1d34:	80 83       	st	Z, r24
    1d36:	91 83       	std	Z+1, r25	; 0x01
    1d38:	a2 83       	std	Z+2, r26	; 0x02
    1d3a:	b3 83       	std	Z+3, r27	; 0x03
			if(Local_Mark==5)
    1d3c:	fe 01       	movw	r30, r28
    1d3e:	eb 55       	subi	r30, 0x5B	; 91
    1d40:	ff 4f       	sbci	r31, 0xFF	; 255
    1d42:	80 81       	ld	r24, Z
    1d44:	91 81       	ldd	r25, Z+1	; 0x01
    1d46:	a2 81       	ldd	r26, Z+2	; 0x02
    1d48:	b3 81       	ldd	r27, Z+3	; 0x03
    1d4a:	85 30       	cpi	r24, 0x05	; 5
    1d4c:	91 05       	cpc	r25, r1
    1d4e:	a1 05       	cpc	r26, r1
    1d50:	b1 05       	cpc	r27, r1
    1d52:	59 f4       	brne	.+22     	; 0x1d6a <CLCD_voidSimpleCalculator+0x7c0>
			{
				Local_Mark=1;
    1d54:	fe 01       	movw	r30, r28
    1d56:	eb 55       	subi	r30, 0x5B	; 91
    1d58:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5a:	81 e0       	ldi	r24, 0x01	; 1
    1d5c:	90 e0       	ldi	r25, 0x00	; 0
    1d5e:	a0 e0       	ldi	r26, 0x00	; 0
    1d60:	b0 e0       	ldi	r27, 0x00	; 0
    1d62:	80 83       	st	Z, r24
    1d64:	91 83       	std	Z+1, r25	; 0x01
    1d66:	a2 83       	std	Z+2, r26	; 0x02
    1d68:	b3 83       	std	Z+3, r27	; 0x03
    1d6a:	fe 01       	movw	r30, r28
    1d6c:	e3 59       	subi	r30, 0x93	; 147
    1d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d70:	80 e0       	ldi	r24, 0x00	; 0
    1d72:	90 e0       	ldi	r25, 0x00	; 0
    1d74:	aa e7       	ldi	r26, 0x7A	; 122
    1d76:	b3 e4       	ldi	r27, 0x43	; 67
    1d78:	80 83       	st	Z, r24
    1d7a:	91 83       	std	Z+1, r25	; 0x01
    1d7c:	a2 83       	std	Z+2, r26	; 0x02
    1d7e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d80:	8e 01       	movw	r16, r28
    1d82:	07 59       	subi	r16, 0x97	; 151
    1d84:	1f 4f       	sbci	r17, 0xFF	; 255
    1d86:	fe 01       	movw	r30, r28
    1d88:	e3 59       	subi	r30, 0x93	; 147
    1d8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d8c:	60 81       	ld	r22, Z
    1d8e:	71 81       	ldd	r23, Z+1	; 0x01
    1d90:	82 81       	ldd	r24, Z+2	; 0x02
    1d92:	93 81       	ldd	r25, Z+3	; 0x03
    1d94:	20 e0       	ldi	r18, 0x00	; 0
    1d96:	30 e0       	ldi	r19, 0x00	; 0
    1d98:	4a ef       	ldi	r20, 0xFA	; 250
    1d9a:	54 e4       	ldi	r21, 0x44	; 68
    1d9c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1da0:	dc 01       	movw	r26, r24
    1da2:	cb 01       	movw	r24, r22
    1da4:	f8 01       	movw	r30, r16
    1da6:	80 83       	st	Z, r24
    1da8:	91 83       	std	Z+1, r25	; 0x01
    1daa:	a2 83       	std	Z+2, r26	; 0x02
    1dac:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1dae:	fe 01       	movw	r30, r28
    1db0:	e7 59       	subi	r30, 0x97	; 151
    1db2:	ff 4f       	sbci	r31, 0xFF	; 255
    1db4:	60 81       	ld	r22, Z
    1db6:	71 81       	ldd	r23, Z+1	; 0x01
    1db8:	82 81       	ldd	r24, Z+2	; 0x02
    1dba:	93 81       	ldd	r25, Z+3	; 0x03
    1dbc:	20 e0       	ldi	r18, 0x00	; 0
    1dbe:	30 e0       	ldi	r19, 0x00	; 0
    1dc0:	40 e8       	ldi	r20, 0x80	; 128
    1dc2:	5f e3       	ldi	r21, 0x3F	; 63
    1dc4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1dc8:	88 23       	and	r24, r24
    1dca:	44 f4       	brge	.+16     	; 0x1ddc <CLCD_voidSimpleCalculator+0x832>
		__ticks = 1;
    1dcc:	fe 01       	movw	r30, r28
    1dce:	e9 59       	subi	r30, 0x99	; 153
    1dd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd2:	81 e0       	ldi	r24, 0x01	; 1
    1dd4:	90 e0       	ldi	r25, 0x00	; 0
    1dd6:	91 83       	std	Z+1, r25	; 0x01
    1dd8:	80 83       	st	Z, r24
    1dda:	64 c0       	rjmp	.+200    	; 0x1ea4 <CLCD_voidSimpleCalculator+0x8fa>
	else if (__tmp > 65535)
    1ddc:	fe 01       	movw	r30, r28
    1dde:	e7 59       	subi	r30, 0x97	; 151
    1de0:	ff 4f       	sbci	r31, 0xFF	; 255
    1de2:	60 81       	ld	r22, Z
    1de4:	71 81       	ldd	r23, Z+1	; 0x01
    1de6:	82 81       	ldd	r24, Z+2	; 0x02
    1de8:	93 81       	ldd	r25, Z+3	; 0x03
    1dea:	20 e0       	ldi	r18, 0x00	; 0
    1dec:	3f ef       	ldi	r19, 0xFF	; 255
    1dee:	4f e7       	ldi	r20, 0x7F	; 127
    1df0:	57 e4       	ldi	r21, 0x47	; 71
    1df2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1df6:	18 16       	cp	r1, r24
    1df8:	0c f0       	brlt	.+2      	; 0x1dfc <CLCD_voidSimpleCalculator+0x852>
    1dfa:	43 c0       	rjmp	.+134    	; 0x1e82 <CLCD_voidSimpleCalculator+0x8d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dfc:	fe 01       	movw	r30, r28
    1dfe:	e3 59       	subi	r30, 0x93	; 147
    1e00:	ff 4f       	sbci	r31, 0xFF	; 255
    1e02:	60 81       	ld	r22, Z
    1e04:	71 81       	ldd	r23, Z+1	; 0x01
    1e06:	82 81       	ldd	r24, Z+2	; 0x02
    1e08:	93 81       	ldd	r25, Z+3	; 0x03
    1e0a:	20 e0       	ldi	r18, 0x00	; 0
    1e0c:	30 e0       	ldi	r19, 0x00	; 0
    1e0e:	40 e2       	ldi	r20, 0x20	; 32
    1e10:	51 e4       	ldi	r21, 0x41	; 65
    1e12:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e16:	dc 01       	movw	r26, r24
    1e18:	cb 01       	movw	r24, r22
    1e1a:	8e 01       	movw	r16, r28
    1e1c:	09 59       	subi	r16, 0x99	; 153
    1e1e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e20:	bc 01       	movw	r22, r24
    1e22:	cd 01       	movw	r24, r26
    1e24:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e28:	dc 01       	movw	r26, r24
    1e2a:	cb 01       	movw	r24, r22
    1e2c:	f8 01       	movw	r30, r16
    1e2e:	91 83       	std	Z+1, r25	; 0x01
    1e30:	80 83       	st	Z, r24
    1e32:	1f c0       	rjmp	.+62     	; 0x1e72 <CLCD_voidSimpleCalculator+0x8c8>
    1e34:	fe 01       	movw	r30, r28
    1e36:	eb 59       	subi	r30, 0x9B	; 155
    1e38:	ff 4f       	sbci	r31, 0xFF	; 255
    1e3a:	88 ec       	ldi	r24, 0xC8	; 200
    1e3c:	90 e0       	ldi	r25, 0x00	; 0
    1e3e:	91 83       	std	Z+1, r25	; 0x01
    1e40:	80 83       	st	Z, r24
    1e42:	fe 01       	movw	r30, r28
    1e44:	eb 59       	subi	r30, 0x9B	; 155
    1e46:	ff 4f       	sbci	r31, 0xFF	; 255
    1e48:	80 81       	ld	r24, Z
    1e4a:	91 81       	ldd	r25, Z+1	; 0x01
    1e4c:	01 97       	sbiw	r24, 0x01	; 1
    1e4e:	f1 f7       	brne	.-4      	; 0x1e4c <CLCD_voidSimpleCalculator+0x8a2>
    1e50:	fe 01       	movw	r30, r28
    1e52:	eb 59       	subi	r30, 0x9B	; 155
    1e54:	ff 4f       	sbci	r31, 0xFF	; 255
    1e56:	91 83       	std	Z+1, r25	; 0x01
    1e58:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e5a:	de 01       	movw	r26, r28
    1e5c:	a9 59       	subi	r26, 0x99	; 153
    1e5e:	bf 4f       	sbci	r27, 0xFF	; 255
    1e60:	fe 01       	movw	r30, r28
    1e62:	e9 59       	subi	r30, 0x99	; 153
    1e64:	ff 4f       	sbci	r31, 0xFF	; 255
    1e66:	80 81       	ld	r24, Z
    1e68:	91 81       	ldd	r25, Z+1	; 0x01
    1e6a:	01 97       	sbiw	r24, 0x01	; 1
    1e6c:	11 96       	adiw	r26, 0x01	; 1
    1e6e:	9c 93       	st	X, r25
    1e70:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e72:	fe 01       	movw	r30, r28
    1e74:	e9 59       	subi	r30, 0x99	; 153
    1e76:	ff 4f       	sbci	r31, 0xFF	; 255
    1e78:	80 81       	ld	r24, Z
    1e7a:	91 81       	ldd	r25, Z+1	; 0x01
    1e7c:	00 97       	sbiw	r24, 0x00	; 0
    1e7e:	d1 f6       	brne	.-76     	; 0x1e34 <CLCD_voidSimpleCalculator+0x88a>
    1e80:	27 c0       	rjmp	.+78     	; 0x1ed0 <CLCD_voidSimpleCalculator+0x926>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e82:	8e 01       	movw	r16, r28
    1e84:	09 59       	subi	r16, 0x99	; 153
    1e86:	1f 4f       	sbci	r17, 0xFF	; 255
    1e88:	fe 01       	movw	r30, r28
    1e8a:	e7 59       	subi	r30, 0x97	; 151
    1e8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8e:	60 81       	ld	r22, Z
    1e90:	71 81       	ldd	r23, Z+1	; 0x01
    1e92:	82 81       	ldd	r24, Z+2	; 0x02
    1e94:	93 81       	ldd	r25, Z+3	; 0x03
    1e96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e9a:	dc 01       	movw	r26, r24
    1e9c:	cb 01       	movw	r24, r22
    1e9e:	f8 01       	movw	r30, r16
    1ea0:	91 83       	std	Z+1, r25	; 0x01
    1ea2:	80 83       	st	Z, r24
    1ea4:	de 01       	movw	r26, r28
    1ea6:	ad 59       	subi	r26, 0x9D	; 157
    1ea8:	bf 4f       	sbci	r27, 0xFF	; 255
    1eaa:	fe 01       	movw	r30, r28
    1eac:	e9 59       	subi	r30, 0x99	; 153
    1eae:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb0:	80 81       	ld	r24, Z
    1eb2:	91 81       	ldd	r25, Z+1	; 0x01
    1eb4:	8d 93       	st	X+, r24
    1eb6:	9c 93       	st	X, r25
    1eb8:	fe 01       	movw	r30, r28
    1eba:	ed 59       	subi	r30, 0x9D	; 157
    1ebc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebe:	80 81       	ld	r24, Z
    1ec0:	91 81       	ldd	r25, Z+1	; 0x01
    1ec2:	01 97       	sbiw	r24, 0x01	; 1
    1ec4:	f1 f7       	brne	.-4      	; 0x1ec2 <CLCD_voidSimpleCalculator+0x918>
    1ec6:	fe 01       	movw	r30, r28
    1ec8:	ed 59       	subi	r30, 0x9D	; 157
    1eca:	ff 4f       	sbci	r31, 0xFF	; 255
    1ecc:	91 83       	std	Z+1, r25	; 0x01
    1ece:	80 83       	st	Z, r24
			}
			_delay_ms(250);

		}
		DIO_u8GetPinValue(DIO_u8PORTD,DIO_u8PIN1,&pu8Value2);
    1ed0:	9e 01       	movw	r18, r28
    1ed2:	21 54       	subi	r18, 0x41	; 65
    1ed4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ed6:	83 e0       	ldi	r24, 0x03	; 3
    1ed8:	61 e0       	ldi	r22, 0x01	; 1
    1eda:	a9 01       	movw	r20, r18
    1edc:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
		if(pu8Value2==0 )
    1ee0:	fe 01       	movw	r30, r28
    1ee2:	e1 54       	subi	r30, 0x41	; 65
    1ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee6:	80 81       	ld	r24, Z
    1ee8:	88 23       	and	r24, r24
    1eea:	09 f0       	breq	.+2      	; 0x1eee <CLCD_voidSimpleCalculator+0x944>
    1eec:	db c0       	rjmp	.+438    	; 0x20a4 <CLCD_voidSimpleCalculator+0xafa>
		{
			Local_Mark--;
    1eee:	9e 01       	movw	r18, r28
    1ef0:	2b 55       	subi	r18, 0x5B	; 91
    1ef2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ef4:	fe 01       	movw	r30, r28
    1ef6:	eb 55       	subi	r30, 0x5B	; 91
    1ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    1efa:	80 81       	ld	r24, Z
    1efc:	91 81       	ldd	r25, Z+1	; 0x01
    1efe:	a2 81       	ldd	r26, Z+2	; 0x02
    1f00:	b3 81       	ldd	r27, Z+3	; 0x03
    1f02:	01 97       	sbiw	r24, 0x01	; 1
    1f04:	a1 09       	sbc	r26, r1
    1f06:	b1 09       	sbc	r27, r1
    1f08:	f9 01       	movw	r30, r18
    1f0a:	80 83       	st	Z, r24
    1f0c:	91 83       	std	Z+1, r25	; 0x01
    1f0e:	a2 83       	std	Z+2, r26	; 0x02
    1f10:	b3 83       	std	Z+3, r27	; 0x03
			if( Local_Mark<1)
    1f12:	fe 01       	movw	r30, r28
    1f14:	eb 55       	subi	r30, 0x5B	; 91
    1f16:	ff 4f       	sbci	r31, 0xFF	; 255
    1f18:	80 81       	ld	r24, Z
    1f1a:	91 81       	ldd	r25, Z+1	; 0x01
    1f1c:	a2 81       	ldd	r26, Z+2	; 0x02
    1f1e:	b3 81       	ldd	r27, Z+3	; 0x03
    1f20:	00 97       	sbiw	r24, 0x00	; 0
    1f22:	a1 05       	cpc	r26, r1
    1f24:	b1 05       	cpc	r27, r1
    1f26:	59 f4       	brne	.+22     	; 0x1f3e <CLCD_voidSimpleCalculator+0x994>
			{
				Local_Mark=4;
    1f28:	fe 01       	movw	r30, r28
    1f2a:	eb 55       	subi	r30, 0x5B	; 91
    1f2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f2e:	84 e0       	ldi	r24, 0x04	; 4
    1f30:	90 e0       	ldi	r25, 0x00	; 0
    1f32:	a0 e0       	ldi	r26, 0x00	; 0
    1f34:	b0 e0       	ldi	r27, 0x00	; 0
    1f36:	80 83       	st	Z, r24
    1f38:	91 83       	std	Z+1, r25	; 0x01
    1f3a:	a2 83       	std	Z+2, r26	; 0x02
    1f3c:	b3 83       	std	Z+3, r27	; 0x03
    1f3e:	fe 01       	movw	r30, r28
    1f40:	e1 5a       	subi	r30, 0xA1	; 161
    1f42:	ff 4f       	sbci	r31, 0xFF	; 255
    1f44:	80 e0       	ldi	r24, 0x00	; 0
    1f46:	90 e0       	ldi	r25, 0x00	; 0
    1f48:	aa e7       	ldi	r26, 0x7A	; 122
    1f4a:	b3 e4       	ldi	r27, 0x43	; 67
    1f4c:	80 83       	st	Z, r24
    1f4e:	91 83       	std	Z+1, r25	; 0x01
    1f50:	a2 83       	std	Z+2, r26	; 0x02
    1f52:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f54:	8e 01       	movw	r16, r28
    1f56:	05 5a       	subi	r16, 0xA5	; 165
    1f58:	1f 4f       	sbci	r17, 0xFF	; 255
    1f5a:	fe 01       	movw	r30, r28
    1f5c:	e1 5a       	subi	r30, 0xA1	; 161
    1f5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f60:	60 81       	ld	r22, Z
    1f62:	71 81       	ldd	r23, Z+1	; 0x01
    1f64:	82 81       	ldd	r24, Z+2	; 0x02
    1f66:	93 81       	ldd	r25, Z+3	; 0x03
    1f68:	20 e0       	ldi	r18, 0x00	; 0
    1f6a:	30 e0       	ldi	r19, 0x00	; 0
    1f6c:	4a ef       	ldi	r20, 0xFA	; 250
    1f6e:	54 e4       	ldi	r21, 0x44	; 68
    1f70:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f74:	dc 01       	movw	r26, r24
    1f76:	cb 01       	movw	r24, r22
    1f78:	f8 01       	movw	r30, r16
    1f7a:	80 83       	st	Z, r24
    1f7c:	91 83       	std	Z+1, r25	; 0x01
    1f7e:	a2 83       	std	Z+2, r26	; 0x02
    1f80:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f82:	fe 01       	movw	r30, r28
    1f84:	e5 5a       	subi	r30, 0xA5	; 165
    1f86:	ff 4f       	sbci	r31, 0xFF	; 255
    1f88:	60 81       	ld	r22, Z
    1f8a:	71 81       	ldd	r23, Z+1	; 0x01
    1f8c:	82 81       	ldd	r24, Z+2	; 0x02
    1f8e:	93 81       	ldd	r25, Z+3	; 0x03
    1f90:	20 e0       	ldi	r18, 0x00	; 0
    1f92:	30 e0       	ldi	r19, 0x00	; 0
    1f94:	40 e8       	ldi	r20, 0x80	; 128
    1f96:	5f e3       	ldi	r21, 0x3F	; 63
    1f98:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1f9c:	88 23       	and	r24, r24
    1f9e:	44 f4       	brge	.+16     	; 0x1fb0 <CLCD_voidSimpleCalculator+0xa06>
		__ticks = 1;
    1fa0:	fe 01       	movw	r30, r28
    1fa2:	e7 5a       	subi	r30, 0xA7	; 167
    1fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa6:	81 e0       	ldi	r24, 0x01	; 1
    1fa8:	90 e0       	ldi	r25, 0x00	; 0
    1faa:	91 83       	std	Z+1, r25	; 0x01
    1fac:	80 83       	st	Z, r24
    1fae:	64 c0       	rjmp	.+200    	; 0x2078 <CLCD_voidSimpleCalculator+0xace>
	else if (__tmp > 65535)
    1fb0:	fe 01       	movw	r30, r28
    1fb2:	e5 5a       	subi	r30, 0xA5	; 165
    1fb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb6:	60 81       	ld	r22, Z
    1fb8:	71 81       	ldd	r23, Z+1	; 0x01
    1fba:	82 81       	ldd	r24, Z+2	; 0x02
    1fbc:	93 81       	ldd	r25, Z+3	; 0x03
    1fbe:	20 e0       	ldi	r18, 0x00	; 0
    1fc0:	3f ef       	ldi	r19, 0xFF	; 255
    1fc2:	4f e7       	ldi	r20, 0x7F	; 127
    1fc4:	57 e4       	ldi	r21, 0x47	; 71
    1fc6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1fca:	18 16       	cp	r1, r24
    1fcc:	0c f0       	brlt	.+2      	; 0x1fd0 <CLCD_voidSimpleCalculator+0xa26>
    1fce:	43 c0       	rjmp	.+134    	; 0x2056 <CLCD_voidSimpleCalculator+0xaac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fd0:	fe 01       	movw	r30, r28
    1fd2:	e1 5a       	subi	r30, 0xA1	; 161
    1fd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd6:	60 81       	ld	r22, Z
    1fd8:	71 81       	ldd	r23, Z+1	; 0x01
    1fda:	82 81       	ldd	r24, Z+2	; 0x02
    1fdc:	93 81       	ldd	r25, Z+3	; 0x03
    1fde:	20 e0       	ldi	r18, 0x00	; 0
    1fe0:	30 e0       	ldi	r19, 0x00	; 0
    1fe2:	40 e2       	ldi	r20, 0x20	; 32
    1fe4:	51 e4       	ldi	r21, 0x41	; 65
    1fe6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fea:	dc 01       	movw	r26, r24
    1fec:	cb 01       	movw	r24, r22
    1fee:	8e 01       	movw	r16, r28
    1ff0:	07 5a       	subi	r16, 0xA7	; 167
    1ff2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ff4:	bc 01       	movw	r22, r24
    1ff6:	cd 01       	movw	r24, r26
    1ff8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ffc:	dc 01       	movw	r26, r24
    1ffe:	cb 01       	movw	r24, r22
    2000:	f8 01       	movw	r30, r16
    2002:	91 83       	std	Z+1, r25	; 0x01
    2004:	80 83       	st	Z, r24
    2006:	1f c0       	rjmp	.+62     	; 0x2046 <CLCD_voidSimpleCalculator+0xa9c>
    2008:	fe 01       	movw	r30, r28
    200a:	e9 5a       	subi	r30, 0xA9	; 169
    200c:	ff 4f       	sbci	r31, 0xFF	; 255
    200e:	88 ec       	ldi	r24, 0xC8	; 200
    2010:	90 e0       	ldi	r25, 0x00	; 0
    2012:	91 83       	std	Z+1, r25	; 0x01
    2014:	80 83       	st	Z, r24
    2016:	fe 01       	movw	r30, r28
    2018:	e9 5a       	subi	r30, 0xA9	; 169
    201a:	ff 4f       	sbci	r31, 0xFF	; 255
    201c:	80 81       	ld	r24, Z
    201e:	91 81       	ldd	r25, Z+1	; 0x01
    2020:	01 97       	sbiw	r24, 0x01	; 1
    2022:	f1 f7       	brne	.-4      	; 0x2020 <CLCD_voidSimpleCalculator+0xa76>
    2024:	fe 01       	movw	r30, r28
    2026:	e9 5a       	subi	r30, 0xA9	; 169
    2028:	ff 4f       	sbci	r31, 0xFF	; 255
    202a:	91 83       	std	Z+1, r25	; 0x01
    202c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    202e:	de 01       	movw	r26, r28
    2030:	a7 5a       	subi	r26, 0xA7	; 167
    2032:	bf 4f       	sbci	r27, 0xFF	; 255
    2034:	fe 01       	movw	r30, r28
    2036:	e7 5a       	subi	r30, 0xA7	; 167
    2038:	ff 4f       	sbci	r31, 0xFF	; 255
    203a:	80 81       	ld	r24, Z
    203c:	91 81       	ldd	r25, Z+1	; 0x01
    203e:	01 97       	sbiw	r24, 0x01	; 1
    2040:	11 96       	adiw	r26, 0x01	; 1
    2042:	9c 93       	st	X, r25
    2044:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2046:	fe 01       	movw	r30, r28
    2048:	e7 5a       	subi	r30, 0xA7	; 167
    204a:	ff 4f       	sbci	r31, 0xFF	; 255
    204c:	80 81       	ld	r24, Z
    204e:	91 81       	ldd	r25, Z+1	; 0x01
    2050:	00 97       	sbiw	r24, 0x00	; 0
    2052:	d1 f6       	brne	.-76     	; 0x2008 <CLCD_voidSimpleCalculator+0xa5e>
    2054:	27 c0       	rjmp	.+78     	; 0x20a4 <CLCD_voidSimpleCalculator+0xafa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2056:	8e 01       	movw	r16, r28
    2058:	07 5a       	subi	r16, 0xA7	; 167
    205a:	1f 4f       	sbci	r17, 0xFF	; 255
    205c:	fe 01       	movw	r30, r28
    205e:	e5 5a       	subi	r30, 0xA5	; 165
    2060:	ff 4f       	sbci	r31, 0xFF	; 255
    2062:	60 81       	ld	r22, Z
    2064:	71 81       	ldd	r23, Z+1	; 0x01
    2066:	82 81       	ldd	r24, Z+2	; 0x02
    2068:	93 81       	ldd	r25, Z+3	; 0x03
    206a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    206e:	dc 01       	movw	r26, r24
    2070:	cb 01       	movw	r24, r22
    2072:	f8 01       	movw	r30, r16
    2074:	91 83       	std	Z+1, r25	; 0x01
    2076:	80 83       	st	Z, r24
    2078:	de 01       	movw	r26, r28
    207a:	ab 5a       	subi	r26, 0xAB	; 171
    207c:	bf 4f       	sbci	r27, 0xFF	; 255
    207e:	fe 01       	movw	r30, r28
    2080:	e7 5a       	subi	r30, 0xA7	; 167
    2082:	ff 4f       	sbci	r31, 0xFF	; 255
    2084:	80 81       	ld	r24, Z
    2086:	91 81       	ldd	r25, Z+1	; 0x01
    2088:	8d 93       	st	X+, r24
    208a:	9c 93       	st	X, r25
    208c:	fe 01       	movw	r30, r28
    208e:	eb 5a       	subi	r30, 0xAB	; 171
    2090:	ff 4f       	sbci	r31, 0xFF	; 255
    2092:	80 81       	ld	r24, Z
    2094:	91 81       	ldd	r25, Z+1	; 0x01
    2096:	01 97       	sbiw	r24, 0x01	; 1
    2098:	f1 f7       	brne	.-4      	; 0x2096 <CLCD_voidSimpleCalculator+0xaec>
    209a:	fe 01       	movw	r30, r28
    209c:	eb 5a       	subi	r30, 0xAB	; 171
    209e:	ff 4f       	sbci	r31, 0xFF	; 255
    20a0:	91 83       	std	Z+1, r25	; 0x01
    20a2:	80 83       	st	Z, r24
			}
			_delay_ms(250);


		}
		switch (Local_Mark)
    20a4:	fe 01       	movw	r30, r28
    20a6:	eb 55       	subi	r30, 0x5B	; 91
    20a8:	ff 4f       	sbci	r31, 0xFF	; 255
    20aa:	e0 80       	ld	r14, Z
    20ac:	f1 80       	ldd	r15, Z+1	; 0x01
    20ae:	02 81       	ldd	r16, Z+2	; 0x02
    20b0:	13 81       	ldd	r17, Z+3	; 0x03
    20b2:	cb 53       	subi	r28, 0x3B	; 59
    20b4:	df 4f       	sbci	r29, 0xFF	; 255
    20b6:	e8 82       	st	Y, r14
    20b8:	f9 82       	std	Y+1, r15	; 0x01
    20ba:	0a 83       	std	Y+2, r16	; 0x02
    20bc:	1b 83       	std	Y+3, r17	; 0x03
    20be:	c5 5c       	subi	r28, 0xC5	; 197
    20c0:	d0 40       	sbci	r29, 0x00	; 0
    20c2:	cb 53       	subi	r28, 0x3B	; 59
    20c4:	df 4f       	sbci	r29, 0xFF	; 255
    20c6:	88 81       	ld	r24, Y
    20c8:	99 81       	ldd	r25, Y+1	; 0x01
    20ca:	aa 81       	ldd	r26, Y+2	; 0x02
    20cc:	bb 81       	ldd	r27, Y+3	; 0x03
    20ce:	c5 5c       	subi	r28, 0xC5	; 197
    20d0:	d0 40       	sbci	r29, 0x00	; 0
    20d2:	82 30       	cpi	r24, 0x02	; 2
    20d4:	91 05       	cpc	r25, r1
    20d6:	a1 05       	cpc	r26, r1
    20d8:	b1 05       	cpc	r27, r1
    20da:	d1 f1       	breq	.+116    	; 0x2150 <CLCD_voidSimpleCalculator+0xba6>
    20dc:	cb 53       	subi	r28, 0x3B	; 59
    20de:	df 4f       	sbci	r29, 0xFF	; 255
    20e0:	88 81       	ld	r24, Y
    20e2:	99 81       	ldd	r25, Y+1	; 0x01
    20e4:	aa 81       	ldd	r26, Y+2	; 0x02
    20e6:	bb 81       	ldd	r27, Y+3	; 0x03
    20e8:	c5 5c       	subi	r28, 0xC5	; 197
    20ea:	d0 40       	sbci	r29, 0x00	; 0
    20ec:	83 30       	cpi	r24, 0x03	; 3
    20ee:	91 05       	cpc	r25, r1
    20f0:	a1 05       	cpc	r26, r1
    20f2:	b1 05       	cpc	r27, r1
    20f4:	70 f4       	brcc	.+28     	; 0x2112 <CLCD_voidSimpleCalculator+0xb68>
    20f6:	cb 53       	subi	r28, 0x3B	; 59
    20f8:	df 4f       	sbci	r29, 0xFF	; 255
    20fa:	88 81       	ld	r24, Y
    20fc:	99 81       	ldd	r25, Y+1	; 0x01
    20fe:	aa 81       	ldd	r26, Y+2	; 0x02
    2100:	bb 81       	ldd	r27, Y+3	; 0x03
    2102:	c5 5c       	subi	r28, 0xC5	; 197
    2104:	d0 40       	sbci	r29, 0x00	; 0
    2106:	81 30       	cpi	r24, 0x01	; 1
    2108:	91 05       	cpc	r25, r1
    210a:	a1 05       	cpc	r26, r1
    210c:	b1 05       	cpc	r27, r1
    210e:	e1 f0       	breq	.+56     	; 0x2148 <CLCD_voidSimpleCalculator+0xb9e>
    2110:	2a c0       	rjmp	.+84     	; 0x2166 <CLCD_voidSimpleCalculator+0xbbc>
    2112:	cb 53       	subi	r28, 0x3B	; 59
    2114:	df 4f       	sbci	r29, 0xFF	; 255
    2116:	88 81       	ld	r24, Y
    2118:	99 81       	ldd	r25, Y+1	; 0x01
    211a:	aa 81       	ldd	r26, Y+2	; 0x02
    211c:	bb 81       	ldd	r27, Y+3	; 0x03
    211e:	c5 5c       	subi	r28, 0xC5	; 197
    2120:	d0 40       	sbci	r29, 0x00	; 0
    2122:	83 30       	cpi	r24, 0x03	; 3
    2124:	91 05       	cpc	r25, r1
    2126:	a1 05       	cpc	r26, r1
    2128:	b1 05       	cpc	r27, r1
    212a:	b1 f0       	breq	.+44     	; 0x2158 <CLCD_voidSimpleCalculator+0xbae>
    212c:	cb 53       	subi	r28, 0x3B	; 59
    212e:	df 4f       	sbci	r29, 0xFF	; 255
    2130:	88 81       	ld	r24, Y
    2132:	99 81       	ldd	r25, Y+1	; 0x01
    2134:	aa 81       	ldd	r26, Y+2	; 0x02
    2136:	bb 81       	ldd	r27, Y+3	; 0x03
    2138:	c5 5c       	subi	r28, 0xC5	; 197
    213a:	d0 40       	sbci	r29, 0x00	; 0
    213c:	84 30       	cpi	r24, 0x04	; 4
    213e:	91 05       	cpc	r25, r1
    2140:	a1 05       	cpc	r26, r1
    2142:	b1 05       	cpc	r27, r1
    2144:	69 f0       	breq	.+26     	; 0x2160 <CLCD_voidSimpleCalculator+0xbb6>
    2146:	0f c0       	rjmp	.+30     	; 0x2166 <CLCD_voidSimpleCalculator+0xbbc>
		{
		case 1 :CLCD_voidSendData('+');break;
    2148:	8b e2       	ldi	r24, 0x2B	; 43
    214a:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
    214e:	0b c0       	rjmp	.+22     	; 0x2166 <CLCD_voidSimpleCalculator+0xbbc>
		case 2 :CLCD_voidSendData('-');break;
    2150:	8d e2       	ldi	r24, 0x2D	; 45
    2152:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
    2156:	07 c0       	rjmp	.+14     	; 0x2166 <CLCD_voidSimpleCalculator+0xbbc>
		case 3 :CLCD_voidSendData('*');break;
    2158:	8a e2       	ldi	r24, 0x2A	; 42
    215a:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
    215e:	03 c0       	rjmp	.+6      	; 0x2166 <CLCD_voidSimpleCalculator+0xbbc>
		case 4 :CLCD_voidSendData('/');break;
    2160:	8f e2       	ldi	r24, 0x2F	; 47
    2162:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>

		}
		DIO_u8GetPinValue(DIO_u8PORTD,DIO_u8PIN2,&pu8Value);
    2166:	9e 01       	movw	r18, r28
    2168:	23 54       	subi	r18, 0x43	; 67
    216a:	3f 4f       	sbci	r19, 0xFF	; 255
    216c:	83 e0       	ldi	r24, 0x03	; 3
    216e:	62 e0       	ldi	r22, 0x02	; 2
    2170:	a9 01       	movw	r20, r18
    2172:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
		if(pu8Value==0)
    2176:	fe 01       	movw	r30, r28
    2178:	e3 54       	subi	r30, 0x43	; 67
    217a:	ff 4f       	sbci	r31, 0xFF	; 255
    217c:	80 81       	ld	r24, Z
    217e:	88 23       	and	r24, r24
    2180:	49 f4       	brne	.+18     	; 0x2194 <CLCD_voidSimpleCalculator+0xbea>
		{
			Local_u8XPos=Local_u8XPos+1;
    2182:	de 01       	movw	r26, r28
    2184:	a0 56       	subi	r26, 0x60	; 96
    2186:	bf 4f       	sbci	r27, 0xFF	; 255
    2188:	fe 01       	movw	r30, r28
    218a:	e0 56       	subi	r30, 0x60	; 96
    218c:	ff 4f       	sbci	r31, 0xFF	; 255
    218e:	80 81       	ld	r24, Z
    2190:	8f 5f       	subi	r24, 0xFF	; 255
    2192:	8c 93       	st	X, r24
		}

	}
	_delay_ms(250);
	CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,0,1);
	while(Local_u8XPos==1)
    2194:	fe 01       	movw	r30, r28
    2196:	e0 56       	subi	r30, 0x60	; 96
    2198:	ff 4f       	sbci	r31, 0xFF	; 255
    219a:	80 81       	ld	r24, Z
    219c:	81 30       	cpi	r24, 0x01	; 1
    219e:	09 f4       	brne	.+2      	; 0x21a2 <CLCD_voidSimpleCalculator+0xbf8>
    21a0:	9a cd       	rjmp	.-1228   	; 0x1cd6 <CLCD_voidSimpleCalculator+0x72c>
    21a2:	fe 01       	movw	r30, r28
    21a4:	ef 5a       	subi	r30, 0xAF	; 175
    21a6:	ff 4f       	sbci	r31, 0xFF	; 255
    21a8:	80 e0       	ldi	r24, 0x00	; 0
    21aa:	90 e0       	ldi	r25, 0x00	; 0
    21ac:	aa e7       	ldi	r26, 0x7A	; 122
    21ae:	b3 e4       	ldi	r27, 0x43	; 67
    21b0:	80 83       	st	Z, r24
    21b2:	91 83       	std	Z+1, r25	; 0x01
    21b4:	a2 83       	std	Z+2, r26	; 0x02
    21b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21b8:	8e 01       	movw	r16, r28
    21ba:	03 5b       	subi	r16, 0xB3	; 179
    21bc:	1f 4f       	sbci	r17, 0xFF	; 255
    21be:	fe 01       	movw	r30, r28
    21c0:	ef 5a       	subi	r30, 0xAF	; 175
    21c2:	ff 4f       	sbci	r31, 0xFF	; 255
    21c4:	60 81       	ld	r22, Z
    21c6:	71 81       	ldd	r23, Z+1	; 0x01
    21c8:	82 81       	ldd	r24, Z+2	; 0x02
    21ca:	93 81       	ldd	r25, Z+3	; 0x03
    21cc:	20 e0       	ldi	r18, 0x00	; 0
    21ce:	30 e0       	ldi	r19, 0x00	; 0
    21d0:	4a ef       	ldi	r20, 0xFA	; 250
    21d2:	54 e4       	ldi	r21, 0x44	; 68
    21d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21d8:	dc 01       	movw	r26, r24
    21da:	cb 01       	movw	r24, r22
    21dc:	f8 01       	movw	r30, r16
    21de:	80 83       	st	Z, r24
    21e0:	91 83       	std	Z+1, r25	; 0x01
    21e2:	a2 83       	std	Z+2, r26	; 0x02
    21e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21e6:	fe 01       	movw	r30, r28
    21e8:	e3 5b       	subi	r30, 0xB3	; 179
    21ea:	ff 4f       	sbci	r31, 0xFF	; 255
    21ec:	60 81       	ld	r22, Z
    21ee:	71 81       	ldd	r23, Z+1	; 0x01
    21f0:	82 81       	ldd	r24, Z+2	; 0x02
    21f2:	93 81       	ldd	r25, Z+3	; 0x03
    21f4:	20 e0       	ldi	r18, 0x00	; 0
    21f6:	30 e0       	ldi	r19, 0x00	; 0
    21f8:	40 e8       	ldi	r20, 0x80	; 128
    21fa:	5f e3       	ldi	r21, 0x3F	; 63
    21fc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2200:	88 23       	and	r24, r24
    2202:	44 f4       	brge	.+16     	; 0x2214 <CLCD_voidSimpleCalculator+0xc6a>
		__ticks = 1;
    2204:	fe 01       	movw	r30, r28
    2206:	e5 5b       	subi	r30, 0xB5	; 181
    2208:	ff 4f       	sbci	r31, 0xFF	; 255
    220a:	81 e0       	ldi	r24, 0x01	; 1
    220c:	90 e0       	ldi	r25, 0x00	; 0
    220e:	91 83       	std	Z+1, r25	; 0x01
    2210:	80 83       	st	Z, r24
    2212:	64 c0       	rjmp	.+200    	; 0x22dc <CLCD_voidSimpleCalculator+0xd32>
	else if (__tmp > 65535)
    2214:	fe 01       	movw	r30, r28
    2216:	e3 5b       	subi	r30, 0xB3	; 179
    2218:	ff 4f       	sbci	r31, 0xFF	; 255
    221a:	60 81       	ld	r22, Z
    221c:	71 81       	ldd	r23, Z+1	; 0x01
    221e:	82 81       	ldd	r24, Z+2	; 0x02
    2220:	93 81       	ldd	r25, Z+3	; 0x03
    2222:	20 e0       	ldi	r18, 0x00	; 0
    2224:	3f ef       	ldi	r19, 0xFF	; 255
    2226:	4f e7       	ldi	r20, 0x7F	; 127
    2228:	57 e4       	ldi	r21, 0x47	; 71
    222a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    222e:	18 16       	cp	r1, r24
    2230:	0c f0       	brlt	.+2      	; 0x2234 <CLCD_voidSimpleCalculator+0xc8a>
    2232:	43 c0       	rjmp	.+134    	; 0x22ba <CLCD_voidSimpleCalculator+0xd10>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2234:	fe 01       	movw	r30, r28
    2236:	ef 5a       	subi	r30, 0xAF	; 175
    2238:	ff 4f       	sbci	r31, 0xFF	; 255
    223a:	60 81       	ld	r22, Z
    223c:	71 81       	ldd	r23, Z+1	; 0x01
    223e:	82 81       	ldd	r24, Z+2	; 0x02
    2240:	93 81       	ldd	r25, Z+3	; 0x03
    2242:	20 e0       	ldi	r18, 0x00	; 0
    2244:	30 e0       	ldi	r19, 0x00	; 0
    2246:	40 e2       	ldi	r20, 0x20	; 32
    2248:	51 e4       	ldi	r21, 0x41	; 65
    224a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    224e:	dc 01       	movw	r26, r24
    2250:	cb 01       	movw	r24, r22
    2252:	8e 01       	movw	r16, r28
    2254:	05 5b       	subi	r16, 0xB5	; 181
    2256:	1f 4f       	sbci	r17, 0xFF	; 255
    2258:	bc 01       	movw	r22, r24
    225a:	cd 01       	movw	r24, r26
    225c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2260:	dc 01       	movw	r26, r24
    2262:	cb 01       	movw	r24, r22
    2264:	f8 01       	movw	r30, r16
    2266:	91 83       	std	Z+1, r25	; 0x01
    2268:	80 83       	st	Z, r24
    226a:	1f c0       	rjmp	.+62     	; 0x22aa <CLCD_voidSimpleCalculator+0xd00>
    226c:	fe 01       	movw	r30, r28
    226e:	e7 5b       	subi	r30, 0xB7	; 183
    2270:	ff 4f       	sbci	r31, 0xFF	; 255
    2272:	88 ec       	ldi	r24, 0xC8	; 200
    2274:	90 e0       	ldi	r25, 0x00	; 0
    2276:	91 83       	std	Z+1, r25	; 0x01
    2278:	80 83       	st	Z, r24
    227a:	fe 01       	movw	r30, r28
    227c:	e7 5b       	subi	r30, 0xB7	; 183
    227e:	ff 4f       	sbci	r31, 0xFF	; 255
    2280:	80 81       	ld	r24, Z
    2282:	91 81       	ldd	r25, Z+1	; 0x01
    2284:	01 97       	sbiw	r24, 0x01	; 1
    2286:	f1 f7       	brne	.-4      	; 0x2284 <CLCD_voidSimpleCalculator+0xcda>
    2288:	fe 01       	movw	r30, r28
    228a:	e7 5b       	subi	r30, 0xB7	; 183
    228c:	ff 4f       	sbci	r31, 0xFF	; 255
    228e:	91 83       	std	Z+1, r25	; 0x01
    2290:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2292:	de 01       	movw	r26, r28
    2294:	a5 5b       	subi	r26, 0xB5	; 181
    2296:	bf 4f       	sbci	r27, 0xFF	; 255
    2298:	fe 01       	movw	r30, r28
    229a:	e5 5b       	subi	r30, 0xB5	; 181
    229c:	ff 4f       	sbci	r31, 0xFF	; 255
    229e:	80 81       	ld	r24, Z
    22a0:	91 81       	ldd	r25, Z+1	; 0x01
    22a2:	01 97       	sbiw	r24, 0x01	; 1
    22a4:	11 96       	adiw	r26, 0x01	; 1
    22a6:	9c 93       	st	X, r25
    22a8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22aa:	fe 01       	movw	r30, r28
    22ac:	e5 5b       	subi	r30, 0xB5	; 181
    22ae:	ff 4f       	sbci	r31, 0xFF	; 255
    22b0:	80 81       	ld	r24, Z
    22b2:	91 81       	ldd	r25, Z+1	; 0x01
    22b4:	00 97       	sbiw	r24, 0x00	; 0
    22b6:	d1 f6       	brne	.-76     	; 0x226c <CLCD_voidSimpleCalculator+0xcc2>
    22b8:	27 c0       	rjmp	.+78     	; 0x2308 <CLCD_voidSimpleCalculator+0xd5e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22ba:	8e 01       	movw	r16, r28
    22bc:	05 5b       	subi	r16, 0xB5	; 181
    22be:	1f 4f       	sbci	r17, 0xFF	; 255
    22c0:	fe 01       	movw	r30, r28
    22c2:	e3 5b       	subi	r30, 0xB3	; 179
    22c4:	ff 4f       	sbci	r31, 0xFF	; 255
    22c6:	60 81       	ld	r22, Z
    22c8:	71 81       	ldd	r23, Z+1	; 0x01
    22ca:	82 81       	ldd	r24, Z+2	; 0x02
    22cc:	93 81       	ldd	r25, Z+3	; 0x03
    22ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22d2:	dc 01       	movw	r26, r24
    22d4:	cb 01       	movw	r24, r22
    22d6:	f8 01       	movw	r30, r16
    22d8:	91 83       	std	Z+1, r25	; 0x01
    22da:	80 83       	st	Z, r24
    22dc:	de 01       	movw	r26, r28
    22de:	a9 5b       	subi	r26, 0xB9	; 185
    22e0:	bf 4f       	sbci	r27, 0xFF	; 255
    22e2:	fe 01       	movw	r30, r28
    22e4:	e5 5b       	subi	r30, 0xB5	; 181
    22e6:	ff 4f       	sbci	r31, 0xFF	; 255
    22e8:	80 81       	ld	r24, Z
    22ea:	91 81       	ldd	r25, Z+1	; 0x01
    22ec:	8d 93       	st	X+, r24
    22ee:	9c 93       	st	X, r25
    22f0:	fe 01       	movw	r30, r28
    22f2:	e9 5b       	subi	r30, 0xB9	; 185
    22f4:	ff 4f       	sbci	r31, 0xFF	; 255
    22f6:	80 81       	ld	r24, Z
    22f8:	91 81       	ldd	r25, Z+1	; 0x01
    22fa:	01 97       	sbiw	r24, 0x01	; 1
    22fc:	f1 f7       	brne	.-4      	; 0x22fa <CLCD_voidSimpleCalculator+0xd50>
    22fe:	fe 01       	movw	r30, r28
    2300:	e9 5b       	subi	r30, 0xB9	; 185
    2302:	ff 4f       	sbci	r31, 0xFF	; 255
    2304:	91 83       	std	Z+1, r25	; 0x01
    2306:	80 83       	st	Z, r24
			Local_u8XPos=Local_u8XPos+1;
		}

	}
	_delay_ms(250);
	CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,1,1);
    2308:	ce 01       	movw	r24, r28
    230a:	8b 54       	subi	r24, 0x4B	; 75
    230c:	9f 4f       	sbci	r25, 0xFF	; 255
    230e:	61 e0       	ldi	r22, 0x01	; 1
    2310:	41 e0       	ldi	r20, 0x01	; 1
    2312:	21 e0       	ldi	r18, 0x01	; 1
    2314:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    2318:	a9 c1       	rjmp	.+850    	; 0x266c <CLCD_voidSimpleCalculator+0x10c2>
	while(Local_u8XPos==2)
	{

		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,2,1);
    231a:	ce 01       	movw	r24, r28
    231c:	83 55       	subi	r24, 0x53	; 83
    231e:	9f 4f       	sbci	r25, 0xFF	; 255
    2320:	60 e0       	ldi	r22, 0x00	; 0
    2322:	42 e0       	ldi	r20, 0x02	; 2
    2324:	21 e0       	ldi	r18, 0x01	; 1
    2326:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
    232a:	fe 01       	movw	r30, r28
    232c:	e0 56       	subi	r30, 0x60	; 96
    232e:	ff 4f       	sbci	r31, 0xFF	; 255
    2330:	de 01       	movw	r26, r28
    2332:	a1 56       	subi	r26, 0x61	; 97
    2334:	bf 4f       	sbci	r27, 0xFF	; 255
    2336:	80 81       	ld	r24, Z
    2338:	6c 91       	ld	r22, X
    233a:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		DIO_u8GetPinValue(DIO_u8PORTD,DIO_u8PIN0,&pu8Value1);
    233e:	9e 01       	movw	r18, r28
    2340:	22 54       	subi	r18, 0x42	; 66
    2342:	3f 4f       	sbci	r19, 0xFF	; 255
    2344:	83 e0       	ldi	r24, 0x03	; 3
    2346:	60 e0       	ldi	r22, 0x00	; 0
    2348:	a9 01       	movw	r20, r18
    234a:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
		if(pu8Value1==0   )
    234e:	fe 01       	movw	r30, r28
    2350:	e2 54       	subi	r30, 0x42	; 66
    2352:	ff 4f       	sbci	r31, 0xFF	; 255
    2354:	80 81       	ld	r24, Z
    2356:	88 23       	and	r24, r24
    2358:	09 f0       	breq	.+2      	; 0x235c <CLCD_voidSimpleCalculator+0xdb2>
    235a:	aa c0       	rjmp	.+340    	; 0x24b0 <CLCD_voidSimpleCalculator+0xf06>
		{
			Local_counter2++;
    235c:	9e 01       	movw	r18, r28
    235e:	2f 55       	subi	r18, 0x5F	; 95
    2360:	3f 4f       	sbci	r19, 0xFF	; 255
    2362:	fe 01       	movw	r30, r28
    2364:	ef 55       	subi	r30, 0x5F	; 95
    2366:	ff 4f       	sbci	r31, 0xFF	; 255
    2368:	80 81       	ld	r24, Z
    236a:	91 81       	ldd	r25, Z+1	; 0x01
    236c:	a2 81       	ldd	r26, Z+2	; 0x02
    236e:	b3 81       	ldd	r27, Z+3	; 0x03
    2370:	01 96       	adiw	r24, 0x01	; 1
    2372:	a1 1d       	adc	r26, r1
    2374:	b1 1d       	adc	r27, r1
    2376:	f9 01       	movw	r30, r18
    2378:	80 83       	st	Z, r24
    237a:	91 83       	std	Z+1, r25	; 0x01
    237c:	a2 83       	std	Z+2, r26	; 0x02
    237e:	b3 83       	std	Z+3, r27	; 0x03
			if(Local_counter2==10)
    2380:	fe 01       	movw	r30, r28
    2382:	ef 55       	subi	r30, 0x5F	; 95
    2384:	ff 4f       	sbci	r31, 0xFF	; 255
    2386:	80 81       	ld	r24, Z
    2388:	91 81       	ldd	r25, Z+1	; 0x01
    238a:	a2 81       	ldd	r26, Z+2	; 0x02
    238c:	b3 81       	ldd	r27, Z+3	; 0x03
    238e:	8a 30       	cpi	r24, 0x0A	; 10
    2390:	91 05       	cpc	r25, r1
    2392:	a1 05       	cpc	r26, r1
    2394:	b1 05       	cpc	r27, r1
    2396:	39 f4       	brne	.+14     	; 0x23a6 <CLCD_voidSimpleCalculator+0xdfc>
			{
				Local_counter2=0;
    2398:	fe 01       	movw	r30, r28
    239a:	ef 55       	subi	r30, 0x5F	; 95
    239c:	ff 4f       	sbci	r31, 0xFF	; 255
    239e:	10 82       	st	Z, r1
    23a0:	11 82       	std	Z+1, r1	; 0x01
    23a2:	12 82       	std	Z+2, r1	; 0x02
    23a4:	13 82       	std	Z+3, r1	; 0x03
    23a6:	fe 01       	movw	r30, r28
    23a8:	ed 5b       	subi	r30, 0xBD	; 189
    23aa:	ff 4f       	sbci	r31, 0xFF	; 255
    23ac:	80 e0       	ldi	r24, 0x00	; 0
    23ae:	90 e0       	ldi	r25, 0x00	; 0
    23b0:	aa e7       	ldi	r26, 0x7A	; 122
    23b2:	b3 e4       	ldi	r27, 0x43	; 67
    23b4:	80 83       	st	Z, r24
    23b6:	91 83       	std	Z+1, r25	; 0x01
    23b8:	a2 83       	std	Z+2, r26	; 0x02
    23ba:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23bc:	8e 01       	movw	r16, r28
    23be:	01 5c       	subi	r16, 0xC1	; 193
    23c0:	1f 4f       	sbci	r17, 0xFF	; 255
    23c2:	fe 01       	movw	r30, r28
    23c4:	ed 5b       	subi	r30, 0xBD	; 189
    23c6:	ff 4f       	sbci	r31, 0xFF	; 255
    23c8:	60 81       	ld	r22, Z
    23ca:	71 81       	ldd	r23, Z+1	; 0x01
    23cc:	82 81       	ldd	r24, Z+2	; 0x02
    23ce:	93 81       	ldd	r25, Z+3	; 0x03
    23d0:	20 e0       	ldi	r18, 0x00	; 0
    23d2:	30 e0       	ldi	r19, 0x00	; 0
    23d4:	4a ef       	ldi	r20, 0xFA	; 250
    23d6:	54 e4       	ldi	r21, 0x44	; 68
    23d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23dc:	dc 01       	movw	r26, r24
    23de:	cb 01       	movw	r24, r22
    23e0:	f8 01       	movw	r30, r16
    23e2:	80 83       	st	Z, r24
    23e4:	91 83       	std	Z+1, r25	; 0x01
    23e6:	a2 83       	std	Z+2, r26	; 0x02
    23e8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23ea:	fe 01       	movw	r30, r28
    23ec:	ff 96       	adiw	r30, 0x3f	; 63
    23ee:	60 81       	ld	r22, Z
    23f0:	71 81       	ldd	r23, Z+1	; 0x01
    23f2:	82 81       	ldd	r24, Z+2	; 0x02
    23f4:	93 81       	ldd	r25, Z+3	; 0x03
    23f6:	20 e0       	ldi	r18, 0x00	; 0
    23f8:	30 e0       	ldi	r19, 0x00	; 0
    23fa:	40 e8       	ldi	r20, 0x80	; 128
    23fc:	5f e3       	ldi	r21, 0x3F	; 63
    23fe:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2402:	88 23       	and	r24, r24
    2404:	2c f4       	brge	.+10     	; 0x2410 <CLCD_voidSimpleCalculator+0xe66>
		__ticks = 1;
    2406:	81 e0       	ldi	r24, 0x01	; 1
    2408:	90 e0       	ldi	r25, 0x00	; 0
    240a:	9e af       	std	Y+62, r25	; 0x3e
    240c:	8d af       	std	Y+61, r24	; 0x3d
    240e:	46 c0       	rjmp	.+140    	; 0x249c <CLCD_voidSimpleCalculator+0xef2>
	else if (__tmp > 65535)
    2410:	fe 01       	movw	r30, r28
    2412:	ff 96       	adiw	r30, 0x3f	; 63
    2414:	60 81       	ld	r22, Z
    2416:	71 81       	ldd	r23, Z+1	; 0x01
    2418:	82 81       	ldd	r24, Z+2	; 0x02
    241a:	93 81       	ldd	r25, Z+3	; 0x03
    241c:	20 e0       	ldi	r18, 0x00	; 0
    241e:	3f ef       	ldi	r19, 0xFF	; 255
    2420:	4f e7       	ldi	r20, 0x7F	; 127
    2422:	57 e4       	ldi	r21, 0x47	; 71
    2424:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2428:	18 16       	cp	r1, r24
    242a:	64 f5       	brge	.+88     	; 0x2484 <CLCD_voidSimpleCalculator+0xeda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    242c:	fe 01       	movw	r30, r28
    242e:	ed 5b       	subi	r30, 0xBD	; 189
    2430:	ff 4f       	sbci	r31, 0xFF	; 255
    2432:	60 81       	ld	r22, Z
    2434:	71 81       	ldd	r23, Z+1	; 0x01
    2436:	82 81       	ldd	r24, Z+2	; 0x02
    2438:	93 81       	ldd	r25, Z+3	; 0x03
    243a:	20 e0       	ldi	r18, 0x00	; 0
    243c:	30 e0       	ldi	r19, 0x00	; 0
    243e:	40 e2       	ldi	r20, 0x20	; 32
    2440:	51 e4       	ldi	r21, 0x41	; 65
    2442:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2446:	dc 01       	movw	r26, r24
    2448:	cb 01       	movw	r24, r22
    244a:	bc 01       	movw	r22, r24
    244c:	cd 01       	movw	r24, r26
    244e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2452:	dc 01       	movw	r26, r24
    2454:	cb 01       	movw	r24, r22
    2456:	9e af       	std	Y+62, r25	; 0x3e
    2458:	8d af       	std	Y+61, r24	; 0x3d
    245a:	0f c0       	rjmp	.+30     	; 0x247a <CLCD_voidSimpleCalculator+0xed0>
    245c:	88 ec       	ldi	r24, 0xC8	; 200
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	9c af       	std	Y+60, r25	; 0x3c
    2462:	8b af       	std	Y+59, r24	; 0x3b
    2464:	8b ad       	ldd	r24, Y+59	; 0x3b
    2466:	9c ad       	ldd	r25, Y+60	; 0x3c
    2468:	01 97       	sbiw	r24, 0x01	; 1
    246a:	f1 f7       	brne	.-4      	; 0x2468 <CLCD_voidSimpleCalculator+0xebe>
    246c:	9c af       	std	Y+60, r25	; 0x3c
    246e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2470:	8d ad       	ldd	r24, Y+61	; 0x3d
    2472:	9e ad       	ldd	r25, Y+62	; 0x3e
    2474:	01 97       	sbiw	r24, 0x01	; 1
    2476:	9e af       	std	Y+62, r25	; 0x3e
    2478:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    247a:	8d ad       	ldd	r24, Y+61	; 0x3d
    247c:	9e ad       	ldd	r25, Y+62	; 0x3e
    247e:	00 97       	sbiw	r24, 0x00	; 0
    2480:	69 f7       	brne	.-38     	; 0x245c <CLCD_voidSimpleCalculator+0xeb2>
    2482:	16 c0       	rjmp	.+44     	; 0x24b0 <CLCD_voidSimpleCalculator+0xf06>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2484:	fe 01       	movw	r30, r28
    2486:	ff 96       	adiw	r30, 0x3f	; 63
    2488:	60 81       	ld	r22, Z
    248a:	71 81       	ldd	r23, Z+1	; 0x01
    248c:	82 81       	ldd	r24, Z+2	; 0x02
    248e:	93 81       	ldd	r25, Z+3	; 0x03
    2490:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2494:	dc 01       	movw	r26, r24
    2496:	cb 01       	movw	r24, r22
    2498:	9e af       	std	Y+62, r25	; 0x3e
    249a:	8d af       	std	Y+61, r24	; 0x3d
    249c:	8d ad       	ldd	r24, Y+61	; 0x3d
    249e:	9e ad       	ldd	r25, Y+62	; 0x3e
    24a0:	9a af       	std	Y+58, r25	; 0x3a
    24a2:	89 af       	std	Y+57, r24	; 0x39
    24a4:	89 ad       	ldd	r24, Y+57	; 0x39
    24a6:	9a ad       	ldd	r25, Y+58	; 0x3a
    24a8:	01 97       	sbiw	r24, 0x01	; 1
    24aa:	f1 f7       	brne	.-4      	; 0x24a8 <CLCD_voidSimpleCalculator+0xefe>
    24ac:	9a af       	std	Y+58, r25	; 0x3a
    24ae:	89 af       	std	Y+57, r24	; 0x39
			}
			_delay_ms(250);

		}
		CLCD_voidGoToXY(2,0);
    24b0:	82 e0       	ldi	r24, 0x02	; 2
    24b2:	60 e0       	ldi	r22, 0x00	; 0
    24b4:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		CLCD_voidWriteNumber(Local_counter2);
    24b8:	fe 01       	movw	r30, r28
    24ba:	ef 55       	subi	r30, 0x5F	; 95
    24bc:	ff 4f       	sbci	r31, 0xFF	; 255
    24be:	80 81       	ld	r24, Z
    24c0:	91 81       	ldd	r25, Z+1	; 0x01
    24c2:	a2 81       	ldd	r26, Z+2	; 0x02
    24c4:	b3 81       	ldd	r27, Z+3	; 0x03
    24c6:	bc 01       	movw	r22, r24
    24c8:	cd 01       	movw	r24, r26
    24ca:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
		DIO_u8GetPinValue(DIO_u8PORTD,DIO_u8PIN1,&pu8Value2);
    24ce:	9e 01       	movw	r18, r28
    24d0:	21 54       	subi	r18, 0x41	; 65
    24d2:	3f 4f       	sbci	r19, 0xFF	; 255
    24d4:	83 e0       	ldi	r24, 0x03	; 3
    24d6:	61 e0       	ldi	r22, 0x01	; 1
    24d8:	a9 01       	movw	r20, r18
    24da:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
		if(pu8Value2==0   )
    24de:	fe 01       	movw	r30, r28
    24e0:	e1 54       	subi	r30, 0x41	; 65
    24e2:	ff 4f       	sbci	r31, 0xFF	; 255
    24e4:	80 81       	ld	r24, Z
    24e6:	88 23       	and	r24, r24
    24e8:	09 f0       	breq	.+2      	; 0x24ec <CLCD_voidSimpleCalculator+0xf42>
    24ea:	9a c0       	rjmp	.+308    	; 0x2620 <CLCD_voidSimpleCalculator+0x1076>
		{
			Local_counter2--;
    24ec:	9e 01       	movw	r18, r28
    24ee:	2f 55       	subi	r18, 0x5F	; 95
    24f0:	3f 4f       	sbci	r19, 0xFF	; 255
    24f2:	fe 01       	movw	r30, r28
    24f4:	ef 55       	subi	r30, 0x5F	; 95
    24f6:	ff 4f       	sbci	r31, 0xFF	; 255
    24f8:	80 81       	ld	r24, Z
    24fa:	91 81       	ldd	r25, Z+1	; 0x01
    24fc:	a2 81       	ldd	r26, Z+2	; 0x02
    24fe:	b3 81       	ldd	r27, Z+3	; 0x03
    2500:	01 97       	sbiw	r24, 0x01	; 1
    2502:	a1 09       	sbc	r26, r1
    2504:	b1 09       	sbc	r27, r1
    2506:	f9 01       	movw	r30, r18
    2508:	80 83       	st	Z, r24
    250a:	91 83       	std	Z+1, r25	; 0x01
    250c:	a2 83       	std	Z+2, r26	; 0x02
    250e:	b3 83       	std	Z+3, r27	; 0x03
			if(Local_counter2==0)
    2510:	fe 01       	movw	r30, r28
    2512:	ef 55       	subi	r30, 0x5F	; 95
    2514:	ff 4f       	sbci	r31, 0xFF	; 255
    2516:	80 81       	ld	r24, Z
    2518:	91 81       	ldd	r25, Z+1	; 0x01
    251a:	a2 81       	ldd	r26, Z+2	; 0x02
    251c:	b3 81       	ldd	r27, Z+3	; 0x03
    251e:	00 97       	sbiw	r24, 0x00	; 0
    2520:	a1 05       	cpc	r26, r1
    2522:	b1 05       	cpc	r27, r1
    2524:	59 f4       	brne	.+22     	; 0x253c <CLCD_voidSimpleCalculator+0xf92>
			{
				Local_counter2=9;
    2526:	fe 01       	movw	r30, r28
    2528:	ef 55       	subi	r30, 0x5F	; 95
    252a:	ff 4f       	sbci	r31, 0xFF	; 255
    252c:	89 e0       	ldi	r24, 0x09	; 9
    252e:	90 e0       	ldi	r25, 0x00	; 0
    2530:	a0 e0       	ldi	r26, 0x00	; 0
    2532:	b0 e0       	ldi	r27, 0x00	; 0
    2534:	80 83       	st	Z, r24
    2536:	91 83       	std	Z+1, r25	; 0x01
    2538:	a2 83       	std	Z+2, r26	; 0x02
    253a:	b3 83       	std	Z+3, r27	; 0x03
    253c:	80 e0       	ldi	r24, 0x00	; 0
    253e:	90 e0       	ldi	r25, 0x00	; 0
    2540:	aa e7       	ldi	r26, 0x7A	; 122
    2542:	b3 e4       	ldi	r27, 0x43	; 67
    2544:	8d ab       	std	Y+53, r24	; 0x35
    2546:	9e ab       	std	Y+54, r25	; 0x36
    2548:	af ab       	std	Y+55, r26	; 0x37
    254a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    254c:	6d a9       	ldd	r22, Y+53	; 0x35
    254e:	7e a9       	ldd	r23, Y+54	; 0x36
    2550:	8f a9       	ldd	r24, Y+55	; 0x37
    2552:	98 ad       	ldd	r25, Y+56	; 0x38
    2554:	20 e0       	ldi	r18, 0x00	; 0
    2556:	30 e0       	ldi	r19, 0x00	; 0
    2558:	4a ef       	ldi	r20, 0xFA	; 250
    255a:	54 e4       	ldi	r21, 0x44	; 68
    255c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2560:	dc 01       	movw	r26, r24
    2562:	cb 01       	movw	r24, r22
    2564:	89 ab       	std	Y+49, r24	; 0x31
    2566:	9a ab       	std	Y+50, r25	; 0x32
    2568:	ab ab       	std	Y+51, r26	; 0x33
    256a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    256c:	69 a9       	ldd	r22, Y+49	; 0x31
    256e:	7a a9       	ldd	r23, Y+50	; 0x32
    2570:	8b a9       	ldd	r24, Y+51	; 0x33
    2572:	9c a9       	ldd	r25, Y+52	; 0x34
    2574:	20 e0       	ldi	r18, 0x00	; 0
    2576:	30 e0       	ldi	r19, 0x00	; 0
    2578:	40 e8       	ldi	r20, 0x80	; 128
    257a:	5f e3       	ldi	r21, 0x3F	; 63
    257c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2580:	88 23       	and	r24, r24
    2582:	2c f4       	brge	.+10     	; 0x258e <CLCD_voidSimpleCalculator+0xfe4>
		__ticks = 1;
    2584:	81 e0       	ldi	r24, 0x01	; 1
    2586:	90 e0       	ldi	r25, 0x00	; 0
    2588:	98 ab       	std	Y+48, r25	; 0x30
    258a:	8f a7       	std	Y+47, r24	; 0x2f
    258c:	3f c0       	rjmp	.+126    	; 0x260c <CLCD_voidSimpleCalculator+0x1062>
	else if (__tmp > 65535)
    258e:	69 a9       	ldd	r22, Y+49	; 0x31
    2590:	7a a9       	ldd	r23, Y+50	; 0x32
    2592:	8b a9       	ldd	r24, Y+51	; 0x33
    2594:	9c a9       	ldd	r25, Y+52	; 0x34
    2596:	20 e0       	ldi	r18, 0x00	; 0
    2598:	3f ef       	ldi	r19, 0xFF	; 255
    259a:	4f e7       	ldi	r20, 0x7F	; 127
    259c:	57 e4       	ldi	r21, 0x47	; 71
    259e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    25a2:	18 16       	cp	r1, r24
    25a4:	4c f5       	brge	.+82     	; 0x25f8 <CLCD_voidSimpleCalculator+0x104e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25a6:	6d a9       	ldd	r22, Y+53	; 0x35
    25a8:	7e a9       	ldd	r23, Y+54	; 0x36
    25aa:	8f a9       	ldd	r24, Y+55	; 0x37
    25ac:	98 ad       	ldd	r25, Y+56	; 0x38
    25ae:	20 e0       	ldi	r18, 0x00	; 0
    25b0:	30 e0       	ldi	r19, 0x00	; 0
    25b2:	40 e2       	ldi	r20, 0x20	; 32
    25b4:	51 e4       	ldi	r21, 0x41	; 65
    25b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25ba:	dc 01       	movw	r26, r24
    25bc:	cb 01       	movw	r24, r22
    25be:	bc 01       	movw	r22, r24
    25c0:	cd 01       	movw	r24, r26
    25c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25c6:	dc 01       	movw	r26, r24
    25c8:	cb 01       	movw	r24, r22
    25ca:	98 ab       	std	Y+48, r25	; 0x30
    25cc:	8f a7       	std	Y+47, r24	; 0x2f
    25ce:	0f c0       	rjmp	.+30     	; 0x25ee <CLCD_voidSimpleCalculator+0x1044>
    25d0:	88 ec       	ldi	r24, 0xC8	; 200
    25d2:	90 e0       	ldi	r25, 0x00	; 0
    25d4:	9e a7       	std	Y+46, r25	; 0x2e
    25d6:	8d a7       	std	Y+45, r24	; 0x2d
    25d8:	8d a5       	ldd	r24, Y+45	; 0x2d
    25da:	9e a5       	ldd	r25, Y+46	; 0x2e
    25dc:	01 97       	sbiw	r24, 0x01	; 1
    25de:	f1 f7       	brne	.-4      	; 0x25dc <CLCD_voidSimpleCalculator+0x1032>
    25e0:	9e a7       	std	Y+46, r25	; 0x2e
    25e2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25e4:	8f a5       	ldd	r24, Y+47	; 0x2f
    25e6:	98 a9       	ldd	r25, Y+48	; 0x30
    25e8:	01 97       	sbiw	r24, 0x01	; 1
    25ea:	98 ab       	std	Y+48, r25	; 0x30
    25ec:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25ee:	8f a5       	ldd	r24, Y+47	; 0x2f
    25f0:	98 a9       	ldd	r25, Y+48	; 0x30
    25f2:	00 97       	sbiw	r24, 0x00	; 0
    25f4:	69 f7       	brne	.-38     	; 0x25d0 <CLCD_voidSimpleCalculator+0x1026>
    25f6:	14 c0       	rjmp	.+40     	; 0x2620 <CLCD_voidSimpleCalculator+0x1076>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25f8:	69 a9       	ldd	r22, Y+49	; 0x31
    25fa:	7a a9       	ldd	r23, Y+50	; 0x32
    25fc:	8b a9       	ldd	r24, Y+51	; 0x33
    25fe:	9c a9       	ldd	r25, Y+52	; 0x34
    2600:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2604:	dc 01       	movw	r26, r24
    2606:	cb 01       	movw	r24, r22
    2608:	98 ab       	std	Y+48, r25	; 0x30
    260a:	8f a7       	std	Y+47, r24	; 0x2f
    260c:	8f a5       	ldd	r24, Y+47	; 0x2f
    260e:	98 a9       	ldd	r25, Y+48	; 0x30
    2610:	9c a7       	std	Y+44, r25	; 0x2c
    2612:	8b a7       	std	Y+43, r24	; 0x2b
    2614:	8b a5       	ldd	r24, Y+43	; 0x2b
    2616:	9c a5       	ldd	r25, Y+44	; 0x2c
    2618:	01 97       	sbiw	r24, 0x01	; 1
    261a:	f1 f7       	brne	.-4      	; 0x2618 <CLCD_voidSimpleCalculator+0x106e>
    261c:	9c a7       	std	Y+44, r25	; 0x2c
    261e:	8b a7       	std	Y+43, r24	; 0x2b
			}
			_delay_ms(250);


		}
		CLCD_voidGoToXY(2,0);
    2620:	82 e0       	ldi	r24, 0x02	; 2
    2622:	60 e0       	ldi	r22, 0x00	; 0
    2624:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		CLCD_voidWriteNumber(Local_counter2);
    2628:	fe 01       	movw	r30, r28
    262a:	ef 55       	subi	r30, 0x5F	; 95
    262c:	ff 4f       	sbci	r31, 0xFF	; 255
    262e:	80 81       	ld	r24, Z
    2630:	91 81       	ldd	r25, Z+1	; 0x01
    2632:	a2 81       	ldd	r26, Z+2	; 0x02
    2634:	b3 81       	ldd	r27, Z+3	; 0x03
    2636:	bc 01       	movw	r22, r24
    2638:	cd 01       	movw	r24, r26
    263a:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
		DIO_u8GetPinValue(DIO_u8PORTD,DIO_u8PIN2,&pu8Value);
    263e:	9e 01       	movw	r18, r28
    2640:	23 54       	subi	r18, 0x43	; 67
    2642:	3f 4f       	sbci	r19, 0xFF	; 255
    2644:	83 e0       	ldi	r24, 0x03	; 3
    2646:	62 e0       	ldi	r22, 0x02	; 2
    2648:	a9 01       	movw	r20, r18
    264a:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
		if(pu8Value==0)
    264e:	fe 01       	movw	r30, r28
    2650:	e3 54       	subi	r30, 0x43	; 67
    2652:	ff 4f       	sbci	r31, 0xFF	; 255
    2654:	80 81       	ld	r24, Z
    2656:	88 23       	and	r24, r24
    2658:	49 f4       	brne	.+18     	; 0x266c <CLCD_voidSimpleCalculator+0x10c2>
		{
			Local_u8XPos=Local_u8XPos+1;
    265a:	de 01       	movw	r26, r28
    265c:	a0 56       	subi	r26, 0x60	; 96
    265e:	bf 4f       	sbci	r27, 0xFF	; 255
    2660:	fe 01       	movw	r30, r28
    2662:	e0 56       	subi	r30, 0x60	; 96
    2664:	ff 4f       	sbci	r31, 0xFF	; 255
    2666:	80 81       	ld	r24, Z
    2668:	8f 5f       	subi	r24, 0xFF	; 255
    266a:	8c 93       	st	X, r24
		}

	}
	_delay_ms(250);
	CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,1,1);
	while(Local_u8XPos==2)
    266c:	fe 01       	movw	r30, r28
    266e:	e0 56       	subi	r30, 0x60	; 96
    2670:	ff 4f       	sbci	r31, 0xFF	; 255
    2672:	80 81       	ld	r24, Z
    2674:	82 30       	cpi	r24, 0x02	; 2
    2676:	09 f4       	brne	.+2      	; 0x267a <CLCD_voidSimpleCalculator+0x10d0>
    2678:	50 ce       	rjmp	.-864    	; 0x231a <CLCD_voidSimpleCalculator+0xd70>
    267a:	80 e0       	ldi	r24, 0x00	; 0
    267c:	90 e0       	ldi	r25, 0x00	; 0
    267e:	aa e7       	ldi	r26, 0x7A	; 122
    2680:	b3 e4       	ldi	r27, 0x43	; 67
    2682:	8f a3       	std	Y+39, r24	; 0x27
    2684:	98 a7       	std	Y+40, r25	; 0x28
    2686:	a9 a7       	std	Y+41, r26	; 0x29
    2688:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    268a:	6f a1       	ldd	r22, Y+39	; 0x27
    268c:	78 a5       	ldd	r23, Y+40	; 0x28
    268e:	89 a5       	ldd	r24, Y+41	; 0x29
    2690:	9a a5       	ldd	r25, Y+42	; 0x2a
    2692:	20 e0       	ldi	r18, 0x00	; 0
    2694:	30 e0       	ldi	r19, 0x00	; 0
    2696:	4a ef       	ldi	r20, 0xFA	; 250
    2698:	54 e4       	ldi	r21, 0x44	; 68
    269a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    269e:	dc 01       	movw	r26, r24
    26a0:	cb 01       	movw	r24, r22
    26a2:	8b a3       	std	Y+35, r24	; 0x23
    26a4:	9c a3       	std	Y+36, r25	; 0x24
    26a6:	ad a3       	std	Y+37, r26	; 0x25
    26a8:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    26aa:	6b a1       	ldd	r22, Y+35	; 0x23
    26ac:	7c a1       	ldd	r23, Y+36	; 0x24
    26ae:	8d a1       	ldd	r24, Y+37	; 0x25
    26b0:	9e a1       	ldd	r25, Y+38	; 0x26
    26b2:	20 e0       	ldi	r18, 0x00	; 0
    26b4:	30 e0       	ldi	r19, 0x00	; 0
    26b6:	40 e8       	ldi	r20, 0x80	; 128
    26b8:	5f e3       	ldi	r21, 0x3F	; 63
    26ba:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    26be:	88 23       	and	r24, r24
    26c0:	2c f4       	brge	.+10     	; 0x26cc <CLCD_voidSimpleCalculator+0x1122>
		__ticks = 1;
    26c2:	81 e0       	ldi	r24, 0x01	; 1
    26c4:	90 e0       	ldi	r25, 0x00	; 0
    26c6:	9a a3       	std	Y+34, r25	; 0x22
    26c8:	89 a3       	std	Y+33, r24	; 0x21
    26ca:	3f c0       	rjmp	.+126    	; 0x274a <CLCD_voidSimpleCalculator+0x11a0>
	else if (__tmp > 65535)
    26cc:	6b a1       	ldd	r22, Y+35	; 0x23
    26ce:	7c a1       	ldd	r23, Y+36	; 0x24
    26d0:	8d a1       	ldd	r24, Y+37	; 0x25
    26d2:	9e a1       	ldd	r25, Y+38	; 0x26
    26d4:	20 e0       	ldi	r18, 0x00	; 0
    26d6:	3f ef       	ldi	r19, 0xFF	; 255
    26d8:	4f e7       	ldi	r20, 0x7F	; 127
    26da:	57 e4       	ldi	r21, 0x47	; 71
    26dc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    26e0:	18 16       	cp	r1, r24
    26e2:	4c f5       	brge	.+82     	; 0x2736 <CLCD_voidSimpleCalculator+0x118c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26e4:	6f a1       	ldd	r22, Y+39	; 0x27
    26e6:	78 a5       	ldd	r23, Y+40	; 0x28
    26e8:	89 a5       	ldd	r24, Y+41	; 0x29
    26ea:	9a a5       	ldd	r25, Y+42	; 0x2a
    26ec:	20 e0       	ldi	r18, 0x00	; 0
    26ee:	30 e0       	ldi	r19, 0x00	; 0
    26f0:	40 e2       	ldi	r20, 0x20	; 32
    26f2:	51 e4       	ldi	r21, 0x41	; 65
    26f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26f8:	dc 01       	movw	r26, r24
    26fa:	cb 01       	movw	r24, r22
    26fc:	bc 01       	movw	r22, r24
    26fe:	cd 01       	movw	r24, r26
    2700:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2704:	dc 01       	movw	r26, r24
    2706:	cb 01       	movw	r24, r22
    2708:	9a a3       	std	Y+34, r25	; 0x22
    270a:	89 a3       	std	Y+33, r24	; 0x21
    270c:	0f c0       	rjmp	.+30     	; 0x272c <CLCD_voidSimpleCalculator+0x1182>
    270e:	88 ec       	ldi	r24, 0xC8	; 200
    2710:	90 e0       	ldi	r25, 0x00	; 0
    2712:	98 a3       	std	Y+32, r25	; 0x20
    2714:	8f 8f       	std	Y+31, r24	; 0x1f
    2716:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2718:	98 a1       	ldd	r25, Y+32	; 0x20
    271a:	01 97       	sbiw	r24, 0x01	; 1
    271c:	f1 f7       	brne	.-4      	; 0x271a <CLCD_voidSimpleCalculator+0x1170>
    271e:	98 a3       	std	Y+32, r25	; 0x20
    2720:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2722:	89 a1       	ldd	r24, Y+33	; 0x21
    2724:	9a a1       	ldd	r25, Y+34	; 0x22
    2726:	01 97       	sbiw	r24, 0x01	; 1
    2728:	9a a3       	std	Y+34, r25	; 0x22
    272a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    272c:	89 a1       	ldd	r24, Y+33	; 0x21
    272e:	9a a1       	ldd	r25, Y+34	; 0x22
    2730:	00 97       	sbiw	r24, 0x00	; 0
    2732:	69 f7       	brne	.-38     	; 0x270e <CLCD_voidSimpleCalculator+0x1164>
    2734:	14 c0       	rjmp	.+40     	; 0x275e <CLCD_voidSimpleCalculator+0x11b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2736:	6b a1       	ldd	r22, Y+35	; 0x23
    2738:	7c a1       	ldd	r23, Y+36	; 0x24
    273a:	8d a1       	ldd	r24, Y+37	; 0x25
    273c:	9e a1       	ldd	r25, Y+38	; 0x26
    273e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2742:	dc 01       	movw	r26, r24
    2744:	cb 01       	movw	r24, r22
    2746:	9a a3       	std	Y+34, r25	; 0x22
    2748:	89 a3       	std	Y+33, r24	; 0x21
    274a:	89 a1       	ldd	r24, Y+33	; 0x21
    274c:	9a a1       	ldd	r25, Y+34	; 0x22
    274e:	9e 8f       	std	Y+30, r25	; 0x1e
    2750:	8d 8f       	std	Y+29, r24	; 0x1d
    2752:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2754:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2756:	01 97       	sbiw	r24, 0x01	; 1
    2758:	f1 f7       	brne	.-4      	; 0x2756 <CLCD_voidSimpleCalculator+0x11ac>
    275a:	9e 8f       	std	Y+30, r25	; 0x1e
    275c:	8d 8f       	std	Y+29, r24	; 0x1d
		{
			Local_u8XPos=Local_u8XPos+1;
		}
	}
	_delay_ms(250);
	CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,2,1);
    275e:	ce 01       	movw	r24, r28
    2760:	8b 54       	subi	r24, 0x4B	; 75
    2762:	9f 4f       	sbci	r25, 0xFF	; 255
    2764:	61 e0       	ldi	r22, 0x01	; 1
    2766:	42 e0       	ldi	r20, 0x02	; 2
    2768:	21 e0       	ldi	r18, 0x01	; 1
    276a:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    276e:	38 c2       	rjmp	.+1136   	; 0x2be0 <CLCD_voidSimpleCalculator+0x1636>
	while(Local_u8XPos==3)
	{

		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,4,1);
    2770:	ce 01       	movw	r24, r28
    2772:	83 55       	subi	r24, 0x53	; 83
    2774:	9f 4f       	sbci	r25, 0xFF	; 255
    2776:	60 e0       	ldi	r22, 0x00	; 0
    2778:	44 e0       	ldi	r20, 0x04	; 4
    277a:	21 e0       	ldi	r18, 0x01	; 1
    277c:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
    2780:	fe 01       	movw	r30, r28
    2782:	e0 56       	subi	r30, 0x60	; 96
    2784:	ff 4f       	sbci	r31, 0xFF	; 255
    2786:	de 01       	movw	r26, r28
    2788:	a1 56       	subi	r26, 0x61	; 97
    278a:	bf 4f       	sbci	r27, 0xFF	; 255
    278c:	80 81       	ld	r24, Z
    278e:	6c 91       	ld	r22, X
    2790:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		CLCD_voidSendData('=');
    2794:	8d e3       	ldi	r24, 0x3D	; 61
    2796:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		CLCD_voidGoToXY(Local_u8XPos+1,Local_u8YPos);
    279a:	fe 01       	movw	r30, r28
    279c:	e0 56       	subi	r30, 0x60	; 96
    279e:	ff 4f       	sbci	r31, 0xFF	; 255
    27a0:	80 81       	ld	r24, Z
    27a2:	8f 5f       	subi	r24, 0xFF	; 255
    27a4:	fe 01       	movw	r30, r28
    27a6:	e1 56       	subi	r30, 0x61	; 97
    27a8:	ff 4f       	sbci	r31, 0xFF	; 255
    27aa:	60 81       	ld	r22, Z
    27ac:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		switch(Local_Mark)
    27b0:	fe 01       	movw	r30, r28
    27b2:	eb 55       	subi	r30, 0x5B	; 91
    27b4:	ff 4f       	sbci	r31, 0xFF	; 255
    27b6:	e0 80       	ld	r14, Z
    27b8:	f1 80       	ldd	r15, Z+1	; 0x01
    27ba:	02 81       	ldd	r16, Z+2	; 0x02
    27bc:	13 81       	ldd	r17, Z+3	; 0x03
    27be:	c7 53       	subi	r28, 0x37	; 55
    27c0:	df 4f       	sbci	r29, 0xFF	; 255
    27c2:	e8 82       	st	Y, r14
    27c4:	f9 82       	std	Y+1, r15	; 0x01
    27c6:	0a 83       	std	Y+2, r16	; 0x02
    27c8:	1b 83       	std	Y+3, r17	; 0x03
    27ca:	c9 5c       	subi	r28, 0xC9	; 201
    27cc:	d0 40       	sbci	r29, 0x00	; 0
    27ce:	c7 53       	subi	r28, 0x37	; 55
    27d0:	df 4f       	sbci	r29, 0xFF	; 255
    27d2:	88 81       	ld	r24, Y
    27d4:	99 81       	ldd	r25, Y+1	; 0x01
    27d6:	aa 81       	ldd	r26, Y+2	; 0x02
    27d8:	bb 81       	ldd	r27, Y+3	; 0x03
    27da:	c9 5c       	subi	r28, 0xC9	; 201
    27dc:	d0 40       	sbci	r29, 0x00	; 0
    27de:	82 30       	cpi	r24, 0x02	; 2
    27e0:	91 05       	cpc	r25, r1
    27e2:	a1 05       	cpc	r26, r1
    27e4:	b1 05       	cpc	r27, r1
    27e6:	09 f4       	brne	.+2      	; 0x27ea <CLCD_voidSimpleCalculator+0x1240>
    27e8:	54 c0       	rjmp	.+168    	; 0x2892 <CLCD_voidSimpleCalculator+0x12e8>
    27ea:	c7 53       	subi	r28, 0x37	; 55
    27ec:	df 4f       	sbci	r29, 0xFF	; 255
    27ee:	88 81       	ld	r24, Y
    27f0:	99 81       	ldd	r25, Y+1	; 0x01
    27f2:	aa 81       	ldd	r26, Y+2	; 0x02
    27f4:	bb 81       	ldd	r27, Y+3	; 0x03
    27f6:	c9 5c       	subi	r28, 0xC9	; 201
    27f8:	d0 40       	sbci	r29, 0x00	; 0
    27fa:	83 30       	cpi	r24, 0x03	; 3
    27fc:	91 05       	cpc	r25, r1
    27fe:	a1 05       	cpc	r26, r1
    2800:	b1 05       	cpc	r27, r1
    2802:	70 f4       	brcc	.+28     	; 0x2820 <CLCD_voidSimpleCalculator+0x1276>
    2804:	c7 53       	subi	r28, 0x37	; 55
    2806:	df 4f       	sbci	r29, 0xFF	; 255
    2808:	88 81       	ld	r24, Y
    280a:	99 81       	ldd	r25, Y+1	; 0x01
    280c:	aa 81       	ldd	r26, Y+2	; 0x02
    280e:	bb 81       	ldd	r27, Y+3	; 0x03
    2810:	c9 5c       	subi	r28, 0xC9	; 201
    2812:	d0 40       	sbci	r29, 0x00	; 0
    2814:	81 30       	cpi	r24, 0x01	; 1
    2816:	91 05       	cpc	r25, r1
    2818:	a1 05       	cpc	r26, r1
    281a:	b1 05       	cpc	r27, r1
    281c:	f1 f0       	breq	.+60     	; 0x285a <CLCD_voidSimpleCalculator+0x12b0>
    281e:	57 c1       	rjmp	.+686    	; 0x2ace <CLCD_voidSimpleCalculator+0x1524>
    2820:	c7 53       	subi	r28, 0x37	; 55
    2822:	df 4f       	sbci	r29, 0xFF	; 255
    2824:	88 81       	ld	r24, Y
    2826:	99 81       	ldd	r25, Y+1	; 0x01
    2828:	aa 81       	ldd	r26, Y+2	; 0x02
    282a:	bb 81       	ldd	r27, Y+3	; 0x03
    282c:	c9 5c       	subi	r28, 0xC9	; 201
    282e:	d0 40       	sbci	r29, 0x00	; 0
    2830:	83 30       	cpi	r24, 0x03	; 3
    2832:	91 05       	cpc	r25, r1
    2834:	a1 05       	cpc	r26, r1
    2836:	b1 05       	cpc	r27, r1
    2838:	09 f4       	brne	.+2      	; 0x283c <CLCD_voidSimpleCalculator+0x1292>
    283a:	8d c0       	rjmp	.+282    	; 0x2956 <CLCD_voidSimpleCalculator+0x13ac>
    283c:	c7 53       	subi	r28, 0x37	; 55
    283e:	df 4f       	sbci	r29, 0xFF	; 255
    2840:	88 81       	ld	r24, Y
    2842:	99 81       	ldd	r25, Y+1	; 0x01
    2844:	aa 81       	ldd	r26, Y+2	; 0x02
    2846:	bb 81       	ldd	r27, Y+3	; 0x03
    2848:	c9 5c       	subi	r28, 0xC9	; 201
    284a:	d0 40       	sbci	r29, 0x00	; 0
    284c:	84 30       	cpi	r24, 0x04	; 4
    284e:	91 05       	cpc	r25, r1
    2850:	a1 05       	cpc	r26, r1
    2852:	b1 05       	cpc	r27, r1
    2854:	09 f4       	brne	.+2      	; 0x2858 <CLCD_voidSimpleCalculator+0x12ae>
    2856:	9d c0       	rjmp	.+314    	; 0x2992 <CLCD_voidSimpleCalculator+0x13e8>
    2858:	3a c1       	rjmp	.+628    	; 0x2ace <CLCD_voidSimpleCalculator+0x1524>
		{
		case 1 :CLCD_voidGoToXY(4,0);
    285a:	84 e0       	ldi	r24, 0x04	; 4
    285c:	60 e0       	ldi	r22, 0x00	; 0
    285e:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
			CLCD_voidWriteNumber(Local_counter + Local_counter2);break ;
    2862:	fe 01       	movw	r30, r28
    2864:	e7 55       	subi	r30, 0x57	; 87
    2866:	ff 4f       	sbci	r31, 0xFF	; 255
    2868:	de 01       	movw	r26, r28
    286a:	af 55       	subi	r26, 0x5F	; 95
    286c:	bf 4f       	sbci	r27, 0xFF	; 255
    286e:	20 81       	ld	r18, Z
    2870:	31 81       	ldd	r19, Z+1	; 0x01
    2872:	42 81       	ldd	r20, Z+2	; 0x02
    2874:	53 81       	ldd	r21, Z+3	; 0x03
    2876:	8d 91       	ld	r24, X+
    2878:	9d 91       	ld	r25, X+
    287a:	0d 90       	ld	r0, X+
    287c:	bc 91       	ld	r27, X
    287e:	a0 2d       	mov	r26, r0
    2880:	82 0f       	add	r24, r18
    2882:	93 1f       	adc	r25, r19
    2884:	a4 1f       	adc	r26, r20
    2886:	b5 1f       	adc	r27, r21
    2888:	bc 01       	movw	r22, r24
    288a:	cd 01       	movw	r24, r26
    288c:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    2890:	1e c1       	rjmp	.+572    	; 0x2ace <CLCD_voidSimpleCalculator+0x1524>
		case 2 :if(Local_counter>Local_counter2){
    2892:	fe 01       	movw	r30, r28
    2894:	e7 55       	subi	r30, 0x57	; 87
    2896:	ff 4f       	sbci	r31, 0xFF	; 255
    2898:	de 01       	movw	r26, r28
    289a:	af 55       	subi	r26, 0x5F	; 95
    289c:	bf 4f       	sbci	r27, 0xFF	; 255
    289e:	20 81       	ld	r18, Z
    28a0:	31 81       	ldd	r19, Z+1	; 0x01
    28a2:	42 81       	ldd	r20, Z+2	; 0x02
    28a4:	53 81       	ldd	r21, Z+3	; 0x03
    28a6:	8d 91       	ld	r24, X+
    28a8:	9d 91       	ld	r25, X+
    28aa:	0d 90       	ld	r0, X+
    28ac:	bc 91       	ld	r27, X
    28ae:	a0 2d       	mov	r26, r0
    28b0:	82 17       	cp	r24, r18
    28b2:	93 07       	cpc	r25, r19
    28b4:	a4 07       	cpc	r26, r20
    28b6:	b5 07       	cpc	r27, r21
    28b8:	00 f5       	brcc	.+64     	; 0x28fa <CLCD_voidSimpleCalculator+0x1350>
			CLCD_voidGoToXY(4,0);
    28ba:	84 e0       	ldi	r24, 0x04	; 4
    28bc:	60 e0       	ldi	r22, 0x00	; 0
    28be:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
			CLCD_voidWriteNumber(Local_counter - Local_counter2);
    28c2:	fe 01       	movw	r30, r28
    28c4:	e7 55       	subi	r30, 0x57	; 87
    28c6:	ff 4f       	sbci	r31, 0xFF	; 255
    28c8:	de 01       	movw	r26, r28
    28ca:	af 55       	subi	r26, 0x5F	; 95
    28cc:	bf 4f       	sbci	r27, 0xFF	; 255
    28ce:	20 81       	ld	r18, Z
    28d0:	31 81       	ldd	r19, Z+1	; 0x01
    28d2:	42 81       	ldd	r20, Z+2	; 0x02
    28d4:	53 81       	ldd	r21, Z+3	; 0x03
    28d6:	8d 91       	ld	r24, X+
    28d8:	9d 91       	ld	r25, X+
    28da:	0d 90       	ld	r0, X+
    28dc:	bc 91       	ld	r27, X
    28de:	a0 2d       	mov	r26, r0
    28e0:	79 01       	movw	r14, r18
    28e2:	8a 01       	movw	r16, r20
    28e4:	e8 1a       	sub	r14, r24
    28e6:	f9 0a       	sbc	r15, r25
    28e8:	0a 0b       	sbc	r16, r26
    28ea:	1b 0b       	sbc	r17, r27
    28ec:	d8 01       	movw	r26, r16
    28ee:	c7 01       	movw	r24, r14
    28f0:	bc 01       	movw	r22, r24
    28f2:	cd 01       	movw	r24, r26
    28f4:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    28f8:	ea c0       	rjmp	.+468    	; 0x2ace <CLCD_voidSimpleCalculator+0x1524>
		}
		else
		{
			CLCD_voidGoToXY(Local_u8XPos+1,Local_u8YPos);
    28fa:	fe 01       	movw	r30, r28
    28fc:	e0 56       	subi	r30, 0x60	; 96
    28fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2900:	80 81       	ld	r24, Z
    2902:	8f 5f       	subi	r24, 0xFF	; 255
    2904:	fe 01       	movw	r30, r28
    2906:	e1 56       	subi	r30, 0x61	; 97
    2908:	ff 4f       	sbci	r31, 0xFF	; 255
    290a:	60 81       	ld	r22, Z
    290c:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
			CLCD_voidSendData('-');
    2910:	8d e2       	ldi	r24, 0x2D	; 45
    2912:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
			CLCD_voidGoToXY(5,0);
    2916:	85 e0       	ldi	r24, 0x05	; 5
    2918:	60 e0       	ldi	r22, 0x00	; 0
    291a:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
			CLCD_voidWriteNumber(Local_counter2 - Local_counter);
    291e:	fe 01       	movw	r30, r28
    2920:	ef 55       	subi	r30, 0x5F	; 95
    2922:	ff 4f       	sbci	r31, 0xFF	; 255
    2924:	de 01       	movw	r26, r28
    2926:	a7 55       	subi	r26, 0x57	; 87
    2928:	bf 4f       	sbci	r27, 0xFF	; 255
    292a:	20 81       	ld	r18, Z
    292c:	31 81       	ldd	r19, Z+1	; 0x01
    292e:	42 81       	ldd	r20, Z+2	; 0x02
    2930:	53 81       	ldd	r21, Z+3	; 0x03
    2932:	8d 91       	ld	r24, X+
    2934:	9d 91       	ld	r25, X+
    2936:	0d 90       	ld	r0, X+
    2938:	bc 91       	ld	r27, X
    293a:	a0 2d       	mov	r26, r0
    293c:	79 01       	movw	r14, r18
    293e:	8a 01       	movw	r16, r20
    2940:	e8 1a       	sub	r14, r24
    2942:	f9 0a       	sbc	r15, r25
    2944:	0a 0b       	sbc	r16, r26
    2946:	1b 0b       	sbc	r17, r27
    2948:	d8 01       	movw	r26, r16
    294a:	c7 01       	movw	r24, r14
    294c:	bc 01       	movw	r22, r24
    294e:	cd 01       	movw	r24, r26
    2950:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    2954:	bc c0       	rjmp	.+376    	; 0x2ace <CLCD_voidSimpleCalculator+0x1524>
		}
			break ;
		case 3 :CLCD_voidGoToXY(4,0);
    2956:	84 e0       	ldi	r24, 0x04	; 4
    2958:	60 e0       	ldi	r22, 0x00	; 0
    295a:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
			CLCD_voidWriteNumber(Local_counter * Local_counter2);break ;
    295e:	fe 01       	movw	r30, r28
    2960:	e7 55       	subi	r30, 0x57	; 87
    2962:	ff 4f       	sbci	r31, 0xFF	; 255
    2964:	9e 01       	movw	r18, r28
    2966:	2f 55       	subi	r18, 0x5F	; 95
    2968:	3f 4f       	sbci	r19, 0xFF	; 255
    296a:	80 81       	ld	r24, Z
    296c:	91 81       	ldd	r25, Z+1	; 0x01
    296e:	a2 81       	ldd	r26, Z+2	; 0x02
    2970:	b3 81       	ldd	r27, Z+3	; 0x03
    2972:	f9 01       	movw	r30, r18
    2974:	20 81       	ld	r18, Z
    2976:	31 81       	ldd	r19, Z+1	; 0x01
    2978:	42 81       	ldd	r20, Z+2	; 0x02
    297a:	53 81       	ldd	r21, Z+3	; 0x03
    297c:	bc 01       	movw	r22, r24
    297e:	cd 01       	movw	r24, r26
    2980:	0e 94 60 24 	call	0x48c0	; 0x48c0 <__mulsi3>
    2984:	dc 01       	movw	r26, r24
    2986:	cb 01       	movw	r24, r22
    2988:	bc 01       	movw	r22, r24
    298a:	cd 01       	movw	r24, r26
    298c:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    2990:	9e c0       	rjmp	.+316    	; 0x2ace <CLCD_voidSimpleCalculator+0x1524>
		case 4 :   if(Local_counter2!=0){
    2992:	fe 01       	movw	r30, r28
    2994:	ef 55       	subi	r30, 0x5F	; 95
    2996:	ff 4f       	sbci	r31, 0xFF	; 255
    2998:	80 81       	ld	r24, Z
    299a:	91 81       	ldd	r25, Z+1	; 0x01
    299c:	a2 81       	ldd	r26, Z+2	; 0x02
    299e:	b3 81       	ldd	r27, Z+3	; 0x03
    29a0:	00 97       	sbiw	r24, 0x00	; 0
    29a2:	a1 05       	cpc	r26, r1
    29a4:	b1 05       	cpc	r27, r1
    29a6:	09 f4       	brne	.+2      	; 0x29aa <CLCD_voidSimpleCalculator+0x1400>
    29a8:	8e c0       	rjmp	.+284    	; 0x2ac6 <CLCD_voidSimpleCalculator+0x151c>
			f32 Local_u32FloatNumber=((f32)Local_counter /(f32) Local_counter2)-(Local_counter / Local_counter2);
    29aa:	fe 01       	movw	r30, r28
    29ac:	e7 55       	subi	r30, 0x57	; 87
    29ae:	ff 4f       	sbci	r31, 0xFF	; 255
    29b0:	60 81       	ld	r22, Z
    29b2:	71 81       	ldd	r23, Z+1	; 0x01
    29b4:	82 81       	ldd	r24, Z+2	; 0x02
    29b6:	93 81       	ldd	r25, Z+3	; 0x03
    29b8:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__floatunsisf>
    29bc:	7b 01       	movw	r14, r22
    29be:	8c 01       	movw	r16, r24
    29c0:	fe 01       	movw	r30, r28
    29c2:	ef 55       	subi	r30, 0x5F	; 95
    29c4:	ff 4f       	sbci	r31, 0xFF	; 255
    29c6:	60 81       	ld	r22, Z
    29c8:	71 81       	ldd	r23, Z+1	; 0x01
    29ca:	82 81       	ldd	r24, Z+2	; 0x02
    29cc:	93 81       	ldd	r25, Z+3	; 0x03
    29ce:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__floatunsisf>
    29d2:	9b 01       	movw	r18, r22
    29d4:	ac 01       	movw	r20, r24
    29d6:	c8 01       	movw	r24, r16
    29d8:	b7 01       	movw	r22, r14
    29da:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    29de:	dc 01       	movw	r26, r24
    29e0:	cb 01       	movw	r24, r22
    29e2:	6c 01       	movw	r12, r24
    29e4:	7d 01       	movw	r14, r26
    29e6:	fe 01       	movw	r30, r28
    29e8:	e7 55       	subi	r30, 0x57	; 87
    29ea:	ff 4f       	sbci	r31, 0xFF	; 255
    29ec:	9e 01       	movw	r18, r28
    29ee:	2f 55       	subi	r18, 0x5F	; 95
    29f0:	3f 4f       	sbci	r19, 0xFF	; 255
    29f2:	80 81       	ld	r24, Z
    29f4:	91 81       	ldd	r25, Z+1	; 0x01
    29f6:	a2 81       	ldd	r26, Z+2	; 0x02
    29f8:	b3 81       	ldd	r27, Z+3	; 0x03
    29fa:	f9 01       	movw	r30, r18
    29fc:	20 81       	ld	r18, Z
    29fe:	31 81       	ldd	r19, Z+1	; 0x01
    2a00:	42 81       	ldd	r20, Z+2	; 0x02
    2a02:	53 81       	ldd	r21, Z+3	; 0x03
    2a04:	bc 01       	movw	r22, r24
    2a06:	cd 01       	movw	r24, r26
    2a08:	0e 94 8b 24 	call	0x4916	; 0x4916 <__udivmodsi4>
    2a0c:	da 01       	movw	r26, r20
    2a0e:	c9 01       	movw	r24, r18
    2a10:	bc 01       	movw	r22, r24
    2a12:	cd 01       	movw	r24, r26
    2a14:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__floatunsisf>
    2a18:	9b 01       	movw	r18, r22
    2a1a:	ac 01       	movw	r20, r24
    2a1c:	8e 01       	movw	r16, r28
    2a1e:	05 56       	subi	r16, 0x65	; 101
    2a20:	1f 4f       	sbci	r17, 0xFF	; 255
    2a22:	c7 01       	movw	r24, r14
    2a24:	b6 01       	movw	r22, r12
    2a26:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    2a2a:	dc 01       	movw	r26, r24
    2a2c:	cb 01       	movw	r24, r22
    2a2e:	f8 01       	movw	r30, r16
    2a30:	80 83       	st	Z, r24
    2a32:	91 83       	std	Z+1, r25	; 0x01
    2a34:	a2 83       	std	Z+2, r26	; 0x02
    2a36:	b3 83       	std	Z+3, r27	; 0x03
			CLCD_voidGoToXY(4,0);
    2a38:	84 e0       	ldi	r24, 0x04	; 4
    2a3a:	60 e0       	ldi	r22, 0x00	; 0
    2a3c:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
			CLCD_voidWriteNumber(Local_counter / Local_counter2);
    2a40:	fe 01       	movw	r30, r28
    2a42:	e7 55       	subi	r30, 0x57	; 87
    2a44:	ff 4f       	sbci	r31, 0xFF	; 255
    2a46:	9e 01       	movw	r18, r28
    2a48:	2f 55       	subi	r18, 0x5F	; 95
    2a4a:	3f 4f       	sbci	r19, 0xFF	; 255
    2a4c:	80 81       	ld	r24, Z
    2a4e:	91 81       	ldd	r25, Z+1	; 0x01
    2a50:	a2 81       	ldd	r26, Z+2	; 0x02
    2a52:	b3 81       	ldd	r27, Z+3	; 0x03
    2a54:	f9 01       	movw	r30, r18
    2a56:	20 81       	ld	r18, Z
    2a58:	31 81       	ldd	r19, Z+1	; 0x01
    2a5a:	42 81       	ldd	r20, Z+2	; 0x02
    2a5c:	53 81       	ldd	r21, Z+3	; 0x03
    2a5e:	bc 01       	movw	r22, r24
    2a60:	cd 01       	movw	r24, r26
    2a62:	0e 94 8b 24 	call	0x4916	; 0x4916 <__udivmodsi4>
    2a66:	da 01       	movw	r26, r20
    2a68:	c9 01       	movw	r24, r18
    2a6a:	bc 01       	movw	r22, r24
    2a6c:	cd 01       	movw	r24, r26
    2a6e:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
			CLCD_voidSendData('.');
    2a72:	8e e2       	ldi	r24, 0x2E	; 46
    2a74:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
			Local_u32FloatNumber=Local_u32FloatNumber*100;
    2a78:	8e 01       	movw	r16, r28
    2a7a:	05 56       	subi	r16, 0x65	; 101
    2a7c:	1f 4f       	sbci	r17, 0xFF	; 255
    2a7e:	fe 01       	movw	r30, r28
    2a80:	e5 56       	subi	r30, 0x65	; 101
    2a82:	ff 4f       	sbci	r31, 0xFF	; 255
    2a84:	60 81       	ld	r22, Z
    2a86:	71 81       	ldd	r23, Z+1	; 0x01
    2a88:	82 81       	ldd	r24, Z+2	; 0x02
    2a8a:	93 81       	ldd	r25, Z+3	; 0x03
    2a8c:	20 e0       	ldi	r18, 0x00	; 0
    2a8e:	30 e0       	ldi	r19, 0x00	; 0
    2a90:	48 ec       	ldi	r20, 0xC8	; 200
    2a92:	52 e4       	ldi	r21, 0x42	; 66
    2a94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a98:	dc 01       	movw	r26, r24
    2a9a:	cb 01       	movw	r24, r22
    2a9c:	f8 01       	movw	r30, r16
    2a9e:	80 83       	st	Z, r24
    2aa0:	91 83       	std	Z+1, r25	; 0x01
    2aa2:	a2 83       	std	Z+2, r26	; 0x02
    2aa4:	b3 83       	std	Z+3, r27	; 0x03
			CLCD_voidWriteNumber(Local_u32FloatNumber);
    2aa6:	fe 01       	movw	r30, r28
    2aa8:	e5 56       	subi	r30, 0x65	; 101
    2aaa:	ff 4f       	sbci	r31, 0xFF	; 255
    2aac:	60 81       	ld	r22, Z
    2aae:	71 81       	ldd	r23, Z+1	; 0x01
    2ab0:	82 81       	ldd	r24, Z+2	; 0x02
    2ab2:	93 81       	ldd	r25, Z+3	; 0x03
    2ab4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ab8:	dc 01       	movw	r26, r24
    2aba:	cb 01       	movw	r24, r22
    2abc:	bc 01       	movw	r22, r24
    2abe:	cd 01       	movw	r24, r26
    2ac0:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    2ac4:	04 c0       	rjmp	.+8      	; 0x2ace <CLCD_voidSimpleCalculator+0x1524>
		}
		else{

			CLCD_voidSendString("Infinity");
    2ac6:	80 e6       	ldi	r24, 0x60	; 96
    2ac8:	90 e0       	ldi	r25, 0x00	; 0
    2aca:	0e 94 37 09 	call	0x126e	; 0x126e <CLCD_voidSendString>
		}
		break ;


		}
		DIO_u8GetPinValue(DIO_u8PORTD,DIO_u8PIN2,&pu8Value);
    2ace:	9e 01       	movw	r18, r28
    2ad0:	23 54       	subi	r18, 0x43	; 67
    2ad2:	3f 4f       	sbci	r19, 0xFF	; 255
    2ad4:	83 e0       	ldi	r24, 0x03	; 3
    2ad6:	62 e0       	ldi	r22, 0x02	; 2
    2ad8:	a9 01       	movw	r20, r18
    2ada:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
		if(pu8Value==0)
    2ade:	fe 01       	movw	r30, r28
    2ae0:	e3 54       	subi	r30, 0x43	; 67
    2ae2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae4:	80 81       	ld	r24, Z
    2ae6:	88 23       	and	r24, r24
    2ae8:	49 f4       	brne	.+18     	; 0x2afc <CLCD_voidSimpleCalculator+0x1552>
		{
			Local_u8XPos=Local_u8XPos+1;
    2aea:	de 01       	movw	r26, r28
    2aec:	a0 56       	subi	r26, 0x60	; 96
    2aee:	bf 4f       	sbci	r27, 0xFF	; 255
    2af0:	fe 01       	movw	r30, r28
    2af2:	e0 56       	subi	r30, 0x60	; 96
    2af4:	ff 4f       	sbci	r31, 0xFF	; 255
    2af6:	80 81       	ld	r24, Z
    2af8:	8f 5f       	subi	r24, 0xFF	; 255
    2afa:	8c 93       	st	X, r24
    2afc:	80 e0       	ldi	r24, 0x00	; 0
    2afe:	90 e0       	ldi	r25, 0x00	; 0
    2b00:	aa e7       	ldi	r26, 0x7A	; 122
    2b02:	b3 e4       	ldi	r27, 0x43	; 67
    2b04:	89 8f       	std	Y+25, r24	; 0x19
    2b06:	9a 8f       	std	Y+26, r25	; 0x1a
    2b08:	ab 8f       	std	Y+27, r26	; 0x1b
    2b0a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b0c:	69 8d       	ldd	r22, Y+25	; 0x19
    2b0e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b10:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b12:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b14:	20 e0       	ldi	r18, 0x00	; 0
    2b16:	30 e0       	ldi	r19, 0x00	; 0
    2b18:	4a ef       	ldi	r20, 0xFA	; 250
    2b1a:	54 e4       	ldi	r21, 0x44	; 68
    2b1c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b20:	dc 01       	movw	r26, r24
    2b22:	cb 01       	movw	r24, r22
    2b24:	8d 8b       	std	Y+21, r24	; 0x15
    2b26:	9e 8b       	std	Y+22, r25	; 0x16
    2b28:	af 8b       	std	Y+23, r26	; 0x17
    2b2a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2b2c:	6d 89       	ldd	r22, Y+21	; 0x15
    2b2e:	7e 89       	ldd	r23, Y+22	; 0x16
    2b30:	8f 89       	ldd	r24, Y+23	; 0x17
    2b32:	98 8d       	ldd	r25, Y+24	; 0x18
    2b34:	20 e0       	ldi	r18, 0x00	; 0
    2b36:	30 e0       	ldi	r19, 0x00	; 0
    2b38:	40 e8       	ldi	r20, 0x80	; 128
    2b3a:	5f e3       	ldi	r21, 0x3F	; 63
    2b3c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2b40:	88 23       	and	r24, r24
    2b42:	2c f4       	brge	.+10     	; 0x2b4e <CLCD_voidSimpleCalculator+0x15a4>
		__ticks = 1;
    2b44:	81 e0       	ldi	r24, 0x01	; 1
    2b46:	90 e0       	ldi	r25, 0x00	; 0
    2b48:	9c 8b       	std	Y+20, r25	; 0x14
    2b4a:	8b 8b       	std	Y+19, r24	; 0x13
    2b4c:	3f c0       	rjmp	.+126    	; 0x2bcc <CLCD_voidSimpleCalculator+0x1622>
	else if (__tmp > 65535)
    2b4e:	6d 89       	ldd	r22, Y+21	; 0x15
    2b50:	7e 89       	ldd	r23, Y+22	; 0x16
    2b52:	8f 89       	ldd	r24, Y+23	; 0x17
    2b54:	98 8d       	ldd	r25, Y+24	; 0x18
    2b56:	20 e0       	ldi	r18, 0x00	; 0
    2b58:	3f ef       	ldi	r19, 0xFF	; 255
    2b5a:	4f e7       	ldi	r20, 0x7F	; 127
    2b5c:	57 e4       	ldi	r21, 0x47	; 71
    2b5e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2b62:	18 16       	cp	r1, r24
    2b64:	4c f5       	brge	.+82     	; 0x2bb8 <CLCD_voidSimpleCalculator+0x160e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b66:	69 8d       	ldd	r22, Y+25	; 0x19
    2b68:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b6a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b6c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b6e:	20 e0       	ldi	r18, 0x00	; 0
    2b70:	30 e0       	ldi	r19, 0x00	; 0
    2b72:	40 e2       	ldi	r20, 0x20	; 32
    2b74:	51 e4       	ldi	r21, 0x41	; 65
    2b76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b7a:	dc 01       	movw	r26, r24
    2b7c:	cb 01       	movw	r24, r22
    2b7e:	bc 01       	movw	r22, r24
    2b80:	cd 01       	movw	r24, r26
    2b82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b86:	dc 01       	movw	r26, r24
    2b88:	cb 01       	movw	r24, r22
    2b8a:	9c 8b       	std	Y+20, r25	; 0x14
    2b8c:	8b 8b       	std	Y+19, r24	; 0x13
    2b8e:	0f c0       	rjmp	.+30     	; 0x2bae <CLCD_voidSimpleCalculator+0x1604>
    2b90:	88 ec       	ldi	r24, 0xC8	; 200
    2b92:	90 e0       	ldi	r25, 0x00	; 0
    2b94:	9a 8b       	std	Y+18, r25	; 0x12
    2b96:	89 8b       	std	Y+17, r24	; 0x11
    2b98:	89 89       	ldd	r24, Y+17	; 0x11
    2b9a:	9a 89       	ldd	r25, Y+18	; 0x12
    2b9c:	01 97       	sbiw	r24, 0x01	; 1
    2b9e:	f1 f7       	brne	.-4      	; 0x2b9c <CLCD_voidSimpleCalculator+0x15f2>
    2ba0:	9a 8b       	std	Y+18, r25	; 0x12
    2ba2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ba4:	8b 89       	ldd	r24, Y+19	; 0x13
    2ba6:	9c 89       	ldd	r25, Y+20	; 0x14
    2ba8:	01 97       	sbiw	r24, 0x01	; 1
    2baa:	9c 8b       	std	Y+20, r25	; 0x14
    2bac:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bae:	8b 89       	ldd	r24, Y+19	; 0x13
    2bb0:	9c 89       	ldd	r25, Y+20	; 0x14
    2bb2:	00 97       	sbiw	r24, 0x00	; 0
    2bb4:	69 f7       	brne	.-38     	; 0x2b90 <CLCD_voidSimpleCalculator+0x15e6>
    2bb6:	14 c0       	rjmp	.+40     	; 0x2be0 <CLCD_voidSimpleCalculator+0x1636>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bb8:	6d 89       	ldd	r22, Y+21	; 0x15
    2bba:	7e 89       	ldd	r23, Y+22	; 0x16
    2bbc:	8f 89       	ldd	r24, Y+23	; 0x17
    2bbe:	98 8d       	ldd	r25, Y+24	; 0x18
    2bc0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bc4:	dc 01       	movw	r26, r24
    2bc6:	cb 01       	movw	r24, r22
    2bc8:	9c 8b       	std	Y+20, r25	; 0x14
    2bca:	8b 8b       	std	Y+19, r24	; 0x13
    2bcc:	8b 89       	ldd	r24, Y+19	; 0x13
    2bce:	9c 89       	ldd	r25, Y+20	; 0x14
    2bd0:	98 8b       	std	Y+16, r25	; 0x10
    2bd2:	8f 87       	std	Y+15, r24	; 0x0f
    2bd4:	8f 85       	ldd	r24, Y+15	; 0x0f
    2bd6:	98 89       	ldd	r25, Y+16	; 0x10
    2bd8:	01 97       	sbiw	r24, 0x01	; 1
    2bda:	f1 f7       	brne	.-4      	; 0x2bd8 <CLCD_voidSimpleCalculator+0x162e>
    2bdc:	98 8b       	std	Y+16, r25	; 0x10
    2bde:	8f 87       	std	Y+15, r24	; 0x0f
			Local_u8XPos=Local_u8XPos+1;
		}
	}
	_delay_ms(250);
	CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,2,1);
	while(Local_u8XPos==3)
    2be0:	fe 01       	movw	r30, r28
    2be2:	e0 56       	subi	r30, 0x60	; 96
    2be4:	ff 4f       	sbci	r31, 0xFF	; 255
    2be6:	80 81       	ld	r24, Z
    2be8:	83 30       	cpi	r24, 0x03	; 3
    2bea:	09 f4       	brne	.+2      	; 0x2bee <CLCD_voidSimpleCalculator+0x1644>
    2bec:	c1 cd       	rjmp	.-1150   	; 0x2770 <CLCD_voidSimpleCalculator+0x11c6>
    2bee:	80 e0       	ldi	r24, 0x00	; 0
    2bf0:	90 e0       	ldi	r25, 0x00	; 0
    2bf2:	aa e7       	ldi	r26, 0x7A	; 122
    2bf4:	b3 e4       	ldi	r27, 0x43	; 67
    2bf6:	8b 87       	std	Y+11, r24	; 0x0b
    2bf8:	9c 87       	std	Y+12, r25	; 0x0c
    2bfa:	ad 87       	std	Y+13, r26	; 0x0d
    2bfc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bfe:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c00:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c02:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c04:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c06:	20 e0       	ldi	r18, 0x00	; 0
    2c08:	30 e0       	ldi	r19, 0x00	; 0
    2c0a:	4a ef       	ldi	r20, 0xFA	; 250
    2c0c:	54 e4       	ldi	r21, 0x44	; 68
    2c0e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c12:	dc 01       	movw	r26, r24
    2c14:	cb 01       	movw	r24, r22
    2c16:	8f 83       	std	Y+7, r24	; 0x07
    2c18:	98 87       	std	Y+8, r25	; 0x08
    2c1a:	a9 87       	std	Y+9, r26	; 0x09
    2c1c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2c1e:	6f 81       	ldd	r22, Y+7	; 0x07
    2c20:	78 85       	ldd	r23, Y+8	; 0x08
    2c22:	89 85       	ldd	r24, Y+9	; 0x09
    2c24:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c26:	20 e0       	ldi	r18, 0x00	; 0
    2c28:	30 e0       	ldi	r19, 0x00	; 0
    2c2a:	40 e8       	ldi	r20, 0x80	; 128
    2c2c:	5f e3       	ldi	r21, 0x3F	; 63
    2c2e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2c32:	88 23       	and	r24, r24
    2c34:	2c f4       	brge	.+10     	; 0x2c40 <CLCD_voidSimpleCalculator+0x1696>
		__ticks = 1;
    2c36:	81 e0       	ldi	r24, 0x01	; 1
    2c38:	90 e0       	ldi	r25, 0x00	; 0
    2c3a:	9e 83       	std	Y+6, r25	; 0x06
    2c3c:	8d 83       	std	Y+5, r24	; 0x05
    2c3e:	3f c0       	rjmp	.+126    	; 0x2cbe <CLCD_voidSimpleCalculator+0x1714>
	else if (__tmp > 65535)
    2c40:	6f 81       	ldd	r22, Y+7	; 0x07
    2c42:	78 85       	ldd	r23, Y+8	; 0x08
    2c44:	89 85       	ldd	r24, Y+9	; 0x09
    2c46:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c48:	20 e0       	ldi	r18, 0x00	; 0
    2c4a:	3f ef       	ldi	r19, 0xFF	; 255
    2c4c:	4f e7       	ldi	r20, 0x7F	; 127
    2c4e:	57 e4       	ldi	r21, 0x47	; 71
    2c50:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2c54:	18 16       	cp	r1, r24
    2c56:	4c f5       	brge	.+82     	; 0x2caa <CLCD_voidSimpleCalculator+0x1700>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c58:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c5a:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c5c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c5e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c60:	20 e0       	ldi	r18, 0x00	; 0
    2c62:	30 e0       	ldi	r19, 0x00	; 0
    2c64:	40 e2       	ldi	r20, 0x20	; 32
    2c66:	51 e4       	ldi	r21, 0x41	; 65
    2c68:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c6c:	dc 01       	movw	r26, r24
    2c6e:	cb 01       	movw	r24, r22
    2c70:	bc 01       	movw	r22, r24
    2c72:	cd 01       	movw	r24, r26
    2c74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c78:	dc 01       	movw	r26, r24
    2c7a:	cb 01       	movw	r24, r22
    2c7c:	9e 83       	std	Y+6, r25	; 0x06
    2c7e:	8d 83       	std	Y+5, r24	; 0x05
    2c80:	0f c0       	rjmp	.+30     	; 0x2ca0 <CLCD_voidSimpleCalculator+0x16f6>
    2c82:	88 ec       	ldi	r24, 0xC8	; 200
    2c84:	90 e0       	ldi	r25, 0x00	; 0
    2c86:	9c 83       	std	Y+4, r25	; 0x04
    2c88:	8b 83       	std	Y+3, r24	; 0x03
    2c8a:	8b 81       	ldd	r24, Y+3	; 0x03
    2c8c:	9c 81       	ldd	r25, Y+4	; 0x04
    2c8e:	01 97       	sbiw	r24, 0x01	; 1
    2c90:	f1 f7       	brne	.-4      	; 0x2c8e <CLCD_voidSimpleCalculator+0x16e4>
    2c92:	9c 83       	std	Y+4, r25	; 0x04
    2c94:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c96:	8d 81       	ldd	r24, Y+5	; 0x05
    2c98:	9e 81       	ldd	r25, Y+6	; 0x06
    2c9a:	01 97       	sbiw	r24, 0x01	; 1
    2c9c:	9e 83       	std	Y+6, r25	; 0x06
    2c9e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ca0:	8d 81       	ldd	r24, Y+5	; 0x05
    2ca2:	9e 81       	ldd	r25, Y+6	; 0x06
    2ca4:	00 97       	sbiw	r24, 0x00	; 0
    2ca6:	69 f7       	brne	.-38     	; 0x2c82 <CLCD_voidSimpleCalculator+0x16d8>
    2ca8:	14 c0       	rjmp	.+40     	; 0x2cd2 <CLCD_voidSimpleCalculator+0x1728>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2caa:	6f 81       	ldd	r22, Y+7	; 0x07
    2cac:	78 85       	ldd	r23, Y+8	; 0x08
    2cae:	89 85       	ldd	r24, Y+9	; 0x09
    2cb0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cb2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cb6:	dc 01       	movw	r26, r24
    2cb8:	cb 01       	movw	r24, r22
    2cba:	9e 83       	std	Y+6, r25	; 0x06
    2cbc:	8d 83       	std	Y+5, r24	; 0x05
    2cbe:	8d 81       	ldd	r24, Y+5	; 0x05
    2cc0:	9e 81       	ldd	r25, Y+6	; 0x06
    2cc2:	9a 83       	std	Y+2, r25	; 0x02
    2cc4:	89 83       	std	Y+1, r24	; 0x01
    2cc6:	89 81       	ldd	r24, Y+1	; 0x01
    2cc8:	9a 81       	ldd	r25, Y+2	; 0x02
    2cca:	01 97       	sbiw	r24, 0x01	; 1
    2ccc:	f1 f7       	brne	.-4      	; 0x2cca <CLCD_voidSimpleCalculator+0x1720>
    2cce:	9a 83       	std	Y+2, r25	; 0x02
    2cd0:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(250);

	}
	_delay_ms(250);

	CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,4,1);
    2cd2:	ce 01       	movw	r24, r28
    2cd4:	8b 54       	subi	r24, 0x4B	; 75
    2cd6:	9f 4f       	sbci	r25, 0xFF	; 255
    2cd8:	61 e0       	ldi	r22, 0x01	; 1
    2cda:	44 e0       	ldi	r20, 0x04	; 4
    2cdc:	21 e0       	ldi	r18, 0x01	; 1
    2cde:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
	CLCD_voidSendCommend(1);
    2ce2:	81 e0       	ldi	r24, 0x01	; 1
    2ce4:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_voidSendCommend>
}
    2ce8:	c4 53       	subi	r28, 0x34	; 52
    2cea:	df 4f       	sbci	r29, 0xFF	; 255
    2cec:	0f b6       	in	r0, 0x3f	; 63
    2cee:	f8 94       	cli
    2cf0:	de bf       	out	0x3e, r29	; 62
    2cf2:	0f be       	out	0x3f, r0	; 63
    2cf4:	cd bf       	out	0x3d, r28	; 61
    2cf6:	cf 91       	pop	r28
    2cf8:	df 91       	pop	r29
    2cfa:	1f 91       	pop	r17
    2cfc:	0f 91       	pop	r16
    2cfe:	ff 90       	pop	r15
    2d00:	ef 90       	pop	r14
    2d02:	df 90       	pop	r13
    2d04:	cf 90       	pop	r12
    2d06:	08 95       	ret

00002d08 <DIO_u8SetPinValue>:
#include "DIO_register.h"



u8 DIO_u8SetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8 Copy_u8Value)
{
    2d08:	df 93       	push	r29
    2d0a:	cf 93       	push	r28
    2d0c:	cd b7       	in	r28, 0x3d	; 61
    2d0e:	de b7       	in	r29, 0x3e	; 62
    2d10:	28 97       	sbiw	r28, 0x08	; 8
    2d12:	0f b6       	in	r0, 0x3f	; 63
    2d14:	f8 94       	cli
    2d16:	de bf       	out	0x3e, r29	; 62
    2d18:	0f be       	out	0x3f, r0	; 63
    2d1a:	cd bf       	out	0x3d, r28	; 61
    2d1c:	8a 83       	std	Y+2, r24	; 0x02
    2d1e:	6b 83       	std	Y+3, r22	; 0x03
    2d20:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=OK;
    2d22:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8Pin<=DIO_u8PIN7)
    2d24:	8b 81       	ldd	r24, Y+3	; 0x03
    2d26:	88 30       	cpi	r24, 0x08	; 8
    2d28:	08 f0       	brcs	.+2      	; 0x2d2c <DIO_u8SetPinValue+0x24>
    2d2a:	f4 c0       	rjmp	.+488    	; 0x2f14 <DIO_u8SetPinValue+0x20c>
	{
		if(Copy_u8Value==DIO_u8PIN_HIGH)
    2d2c:	8c 81       	ldd	r24, Y+4	; 0x04
    2d2e:	81 30       	cpi	r24, 0x01	; 1
    2d30:	09 f0       	breq	.+2      	; 0x2d34 <DIO_u8SetPinValue+0x2c>
    2d32:	72 c0       	rjmp	.+228    	; 0x2e18 <DIO_u8SetPinValue+0x110>
		{
			switch (Copy_u8Port)
    2d34:	8a 81       	ldd	r24, Y+2	; 0x02
    2d36:	28 2f       	mov	r18, r24
    2d38:	30 e0       	ldi	r19, 0x00	; 0
    2d3a:	38 87       	std	Y+8, r19	; 0x08
    2d3c:	2f 83       	std	Y+7, r18	; 0x07
    2d3e:	8f 81       	ldd	r24, Y+7	; 0x07
    2d40:	98 85       	ldd	r25, Y+8	; 0x08
    2d42:	81 30       	cpi	r24, 0x01	; 1
    2d44:	91 05       	cpc	r25, r1
    2d46:	49 f1       	breq	.+82     	; 0x2d9a <DIO_u8SetPinValue+0x92>
    2d48:	2f 81       	ldd	r18, Y+7	; 0x07
    2d4a:	38 85       	ldd	r19, Y+8	; 0x08
    2d4c:	22 30       	cpi	r18, 0x02	; 2
    2d4e:	31 05       	cpc	r19, r1
    2d50:	2c f4       	brge	.+10     	; 0x2d5c <DIO_u8SetPinValue+0x54>
    2d52:	8f 81       	ldd	r24, Y+7	; 0x07
    2d54:	98 85       	ldd	r25, Y+8	; 0x08
    2d56:	00 97       	sbiw	r24, 0x00	; 0
    2d58:	61 f0       	breq	.+24     	; 0x2d72 <DIO_u8SetPinValue+0x6a>
    2d5a:	5b c0       	rjmp	.+182    	; 0x2e12 <DIO_u8SetPinValue+0x10a>
    2d5c:	2f 81       	ldd	r18, Y+7	; 0x07
    2d5e:	38 85       	ldd	r19, Y+8	; 0x08
    2d60:	22 30       	cpi	r18, 0x02	; 2
    2d62:	31 05       	cpc	r19, r1
    2d64:	71 f1       	breq	.+92     	; 0x2dc2 <DIO_u8SetPinValue+0xba>
    2d66:	8f 81       	ldd	r24, Y+7	; 0x07
    2d68:	98 85       	ldd	r25, Y+8	; 0x08
    2d6a:	83 30       	cpi	r24, 0x03	; 3
    2d6c:	91 05       	cpc	r25, r1
    2d6e:	e9 f1       	breq	.+122    	; 0x2dea <DIO_u8SetPinValue+0xe2>
    2d70:	50 c0       	rjmp	.+160    	; 0x2e12 <DIO_u8SetPinValue+0x10a>
			{
			case DIO_u8PORTA : SET_BIT(PORTA,Copy_u8Pin);break;
    2d72:	ab e3       	ldi	r26, 0x3B	; 59
    2d74:	b0 e0       	ldi	r27, 0x00	; 0
    2d76:	eb e3       	ldi	r30, 0x3B	; 59
    2d78:	f0 e0       	ldi	r31, 0x00	; 0
    2d7a:	80 81       	ld	r24, Z
    2d7c:	48 2f       	mov	r20, r24
    2d7e:	8b 81       	ldd	r24, Y+3	; 0x03
    2d80:	28 2f       	mov	r18, r24
    2d82:	30 e0       	ldi	r19, 0x00	; 0
    2d84:	81 e0       	ldi	r24, 0x01	; 1
    2d86:	90 e0       	ldi	r25, 0x00	; 0
    2d88:	02 2e       	mov	r0, r18
    2d8a:	02 c0       	rjmp	.+4      	; 0x2d90 <DIO_u8SetPinValue+0x88>
    2d8c:	88 0f       	add	r24, r24
    2d8e:	99 1f       	adc	r25, r25
    2d90:	0a 94       	dec	r0
    2d92:	e2 f7       	brpl	.-8      	; 0x2d8c <DIO_u8SetPinValue+0x84>
    2d94:	84 2b       	or	r24, r20
    2d96:	8c 93       	st	X, r24
    2d98:	bf c0       	rjmp	.+382    	; 0x2f18 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB : SET_BIT(PORTB,Copy_u8Pin);break;
    2d9a:	a8 e3       	ldi	r26, 0x38	; 56
    2d9c:	b0 e0       	ldi	r27, 0x00	; 0
    2d9e:	e8 e3       	ldi	r30, 0x38	; 56
    2da0:	f0 e0       	ldi	r31, 0x00	; 0
    2da2:	80 81       	ld	r24, Z
    2da4:	48 2f       	mov	r20, r24
    2da6:	8b 81       	ldd	r24, Y+3	; 0x03
    2da8:	28 2f       	mov	r18, r24
    2daa:	30 e0       	ldi	r19, 0x00	; 0
    2dac:	81 e0       	ldi	r24, 0x01	; 1
    2dae:	90 e0       	ldi	r25, 0x00	; 0
    2db0:	02 2e       	mov	r0, r18
    2db2:	02 c0       	rjmp	.+4      	; 0x2db8 <DIO_u8SetPinValue+0xb0>
    2db4:	88 0f       	add	r24, r24
    2db6:	99 1f       	adc	r25, r25
    2db8:	0a 94       	dec	r0
    2dba:	e2 f7       	brpl	.-8      	; 0x2db4 <DIO_u8SetPinValue+0xac>
    2dbc:	84 2b       	or	r24, r20
    2dbe:	8c 93       	st	X, r24
    2dc0:	ab c0       	rjmp	.+342    	; 0x2f18 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC : SET_BIT(PORTC,Copy_u8Pin);break;
    2dc2:	a5 e3       	ldi	r26, 0x35	; 53
    2dc4:	b0 e0       	ldi	r27, 0x00	; 0
    2dc6:	e5 e3       	ldi	r30, 0x35	; 53
    2dc8:	f0 e0       	ldi	r31, 0x00	; 0
    2dca:	80 81       	ld	r24, Z
    2dcc:	48 2f       	mov	r20, r24
    2dce:	8b 81       	ldd	r24, Y+3	; 0x03
    2dd0:	28 2f       	mov	r18, r24
    2dd2:	30 e0       	ldi	r19, 0x00	; 0
    2dd4:	81 e0       	ldi	r24, 0x01	; 1
    2dd6:	90 e0       	ldi	r25, 0x00	; 0
    2dd8:	02 2e       	mov	r0, r18
    2dda:	02 c0       	rjmp	.+4      	; 0x2de0 <DIO_u8SetPinValue+0xd8>
    2ddc:	88 0f       	add	r24, r24
    2dde:	99 1f       	adc	r25, r25
    2de0:	0a 94       	dec	r0
    2de2:	e2 f7       	brpl	.-8      	; 0x2ddc <DIO_u8SetPinValue+0xd4>
    2de4:	84 2b       	or	r24, r20
    2de6:	8c 93       	st	X, r24
    2de8:	97 c0       	rjmp	.+302    	; 0x2f18 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD : SET_BIT(PORTD,Copy_u8Pin);break;
    2dea:	a2 e3       	ldi	r26, 0x32	; 50
    2dec:	b0 e0       	ldi	r27, 0x00	; 0
    2dee:	e2 e3       	ldi	r30, 0x32	; 50
    2df0:	f0 e0       	ldi	r31, 0x00	; 0
    2df2:	80 81       	ld	r24, Z
    2df4:	48 2f       	mov	r20, r24
    2df6:	8b 81       	ldd	r24, Y+3	; 0x03
    2df8:	28 2f       	mov	r18, r24
    2dfa:	30 e0       	ldi	r19, 0x00	; 0
    2dfc:	81 e0       	ldi	r24, 0x01	; 1
    2dfe:	90 e0       	ldi	r25, 0x00	; 0
    2e00:	02 2e       	mov	r0, r18
    2e02:	02 c0       	rjmp	.+4      	; 0x2e08 <DIO_u8SetPinValue+0x100>
    2e04:	88 0f       	add	r24, r24
    2e06:	99 1f       	adc	r25, r25
    2e08:	0a 94       	dec	r0
    2e0a:	e2 f7       	brpl	.-8      	; 0x2e04 <DIO_u8SetPinValue+0xfc>
    2e0c:	84 2b       	or	r24, r20
    2e0e:	8c 93       	st	X, r24
    2e10:	83 c0       	rjmp	.+262    	; 0x2f18 <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState=NOK;break;
    2e12:	81 e0       	ldi	r24, 0x01	; 1
    2e14:	89 83       	std	Y+1, r24	; 0x01
    2e16:	80 c0       	rjmp	.+256    	; 0x2f18 <DIO_u8SetPinValue+0x210>

			}
		}
		else if(Copy_u8Value==DIO_u8PIN_LOW)
    2e18:	8c 81       	ldd	r24, Y+4	; 0x04
    2e1a:	88 23       	and	r24, r24
    2e1c:	09 f0       	breq	.+2      	; 0x2e20 <DIO_u8SetPinValue+0x118>
    2e1e:	77 c0       	rjmp	.+238    	; 0x2f0e <DIO_u8SetPinValue+0x206>
		{
			switch (Copy_u8Port)
    2e20:	8a 81       	ldd	r24, Y+2	; 0x02
    2e22:	28 2f       	mov	r18, r24
    2e24:	30 e0       	ldi	r19, 0x00	; 0
    2e26:	3e 83       	std	Y+6, r19	; 0x06
    2e28:	2d 83       	std	Y+5, r18	; 0x05
    2e2a:	8d 81       	ldd	r24, Y+5	; 0x05
    2e2c:	9e 81       	ldd	r25, Y+6	; 0x06
    2e2e:	81 30       	cpi	r24, 0x01	; 1
    2e30:	91 05       	cpc	r25, r1
    2e32:	59 f1       	breq	.+86     	; 0x2e8a <DIO_u8SetPinValue+0x182>
    2e34:	2d 81       	ldd	r18, Y+5	; 0x05
    2e36:	3e 81       	ldd	r19, Y+6	; 0x06
    2e38:	22 30       	cpi	r18, 0x02	; 2
    2e3a:	31 05       	cpc	r19, r1
    2e3c:	2c f4       	brge	.+10     	; 0x2e48 <DIO_u8SetPinValue+0x140>
    2e3e:	8d 81       	ldd	r24, Y+5	; 0x05
    2e40:	9e 81       	ldd	r25, Y+6	; 0x06
    2e42:	00 97       	sbiw	r24, 0x00	; 0
    2e44:	69 f0       	breq	.+26     	; 0x2e60 <DIO_u8SetPinValue+0x158>
    2e46:	60 c0       	rjmp	.+192    	; 0x2f08 <DIO_u8SetPinValue+0x200>
    2e48:	2d 81       	ldd	r18, Y+5	; 0x05
    2e4a:	3e 81       	ldd	r19, Y+6	; 0x06
    2e4c:	22 30       	cpi	r18, 0x02	; 2
    2e4e:	31 05       	cpc	r19, r1
    2e50:	89 f1       	breq	.+98     	; 0x2eb4 <DIO_u8SetPinValue+0x1ac>
    2e52:	8d 81       	ldd	r24, Y+5	; 0x05
    2e54:	9e 81       	ldd	r25, Y+6	; 0x06
    2e56:	83 30       	cpi	r24, 0x03	; 3
    2e58:	91 05       	cpc	r25, r1
    2e5a:	09 f4       	brne	.+2      	; 0x2e5e <DIO_u8SetPinValue+0x156>
    2e5c:	40 c0       	rjmp	.+128    	; 0x2ede <DIO_u8SetPinValue+0x1d6>
    2e5e:	54 c0       	rjmp	.+168    	; 0x2f08 <DIO_u8SetPinValue+0x200>
			{
			case DIO_u8PORTA : CLR_BIT(PORTA,Copy_u8Pin);break;
    2e60:	ab e3       	ldi	r26, 0x3B	; 59
    2e62:	b0 e0       	ldi	r27, 0x00	; 0
    2e64:	eb e3       	ldi	r30, 0x3B	; 59
    2e66:	f0 e0       	ldi	r31, 0x00	; 0
    2e68:	80 81       	ld	r24, Z
    2e6a:	48 2f       	mov	r20, r24
    2e6c:	8b 81       	ldd	r24, Y+3	; 0x03
    2e6e:	28 2f       	mov	r18, r24
    2e70:	30 e0       	ldi	r19, 0x00	; 0
    2e72:	81 e0       	ldi	r24, 0x01	; 1
    2e74:	90 e0       	ldi	r25, 0x00	; 0
    2e76:	02 2e       	mov	r0, r18
    2e78:	02 c0       	rjmp	.+4      	; 0x2e7e <DIO_u8SetPinValue+0x176>
    2e7a:	88 0f       	add	r24, r24
    2e7c:	99 1f       	adc	r25, r25
    2e7e:	0a 94       	dec	r0
    2e80:	e2 f7       	brpl	.-8      	; 0x2e7a <DIO_u8SetPinValue+0x172>
    2e82:	80 95       	com	r24
    2e84:	84 23       	and	r24, r20
    2e86:	8c 93       	st	X, r24
    2e88:	47 c0       	rjmp	.+142    	; 0x2f18 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB : CLR_BIT(PORTB,Copy_u8Pin);break;
    2e8a:	a8 e3       	ldi	r26, 0x38	; 56
    2e8c:	b0 e0       	ldi	r27, 0x00	; 0
    2e8e:	e8 e3       	ldi	r30, 0x38	; 56
    2e90:	f0 e0       	ldi	r31, 0x00	; 0
    2e92:	80 81       	ld	r24, Z
    2e94:	48 2f       	mov	r20, r24
    2e96:	8b 81       	ldd	r24, Y+3	; 0x03
    2e98:	28 2f       	mov	r18, r24
    2e9a:	30 e0       	ldi	r19, 0x00	; 0
    2e9c:	81 e0       	ldi	r24, 0x01	; 1
    2e9e:	90 e0       	ldi	r25, 0x00	; 0
    2ea0:	02 2e       	mov	r0, r18
    2ea2:	02 c0       	rjmp	.+4      	; 0x2ea8 <DIO_u8SetPinValue+0x1a0>
    2ea4:	88 0f       	add	r24, r24
    2ea6:	99 1f       	adc	r25, r25
    2ea8:	0a 94       	dec	r0
    2eaa:	e2 f7       	brpl	.-8      	; 0x2ea4 <DIO_u8SetPinValue+0x19c>
    2eac:	80 95       	com	r24
    2eae:	84 23       	and	r24, r20
    2eb0:	8c 93       	st	X, r24
    2eb2:	32 c0       	rjmp	.+100    	; 0x2f18 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC : CLR_BIT(PORTC,Copy_u8Pin);break;
    2eb4:	a5 e3       	ldi	r26, 0x35	; 53
    2eb6:	b0 e0       	ldi	r27, 0x00	; 0
    2eb8:	e5 e3       	ldi	r30, 0x35	; 53
    2eba:	f0 e0       	ldi	r31, 0x00	; 0
    2ebc:	80 81       	ld	r24, Z
    2ebe:	48 2f       	mov	r20, r24
    2ec0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ec2:	28 2f       	mov	r18, r24
    2ec4:	30 e0       	ldi	r19, 0x00	; 0
    2ec6:	81 e0       	ldi	r24, 0x01	; 1
    2ec8:	90 e0       	ldi	r25, 0x00	; 0
    2eca:	02 2e       	mov	r0, r18
    2ecc:	02 c0       	rjmp	.+4      	; 0x2ed2 <DIO_u8SetPinValue+0x1ca>
    2ece:	88 0f       	add	r24, r24
    2ed0:	99 1f       	adc	r25, r25
    2ed2:	0a 94       	dec	r0
    2ed4:	e2 f7       	brpl	.-8      	; 0x2ece <DIO_u8SetPinValue+0x1c6>
    2ed6:	80 95       	com	r24
    2ed8:	84 23       	and	r24, r20
    2eda:	8c 93       	st	X, r24
    2edc:	1d c0       	rjmp	.+58     	; 0x2f18 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD : CLR_BIT(PORTD,Copy_u8Pin);break;
    2ede:	a2 e3       	ldi	r26, 0x32	; 50
    2ee0:	b0 e0       	ldi	r27, 0x00	; 0
    2ee2:	e2 e3       	ldi	r30, 0x32	; 50
    2ee4:	f0 e0       	ldi	r31, 0x00	; 0
    2ee6:	80 81       	ld	r24, Z
    2ee8:	48 2f       	mov	r20, r24
    2eea:	8b 81       	ldd	r24, Y+3	; 0x03
    2eec:	28 2f       	mov	r18, r24
    2eee:	30 e0       	ldi	r19, 0x00	; 0
    2ef0:	81 e0       	ldi	r24, 0x01	; 1
    2ef2:	90 e0       	ldi	r25, 0x00	; 0
    2ef4:	02 2e       	mov	r0, r18
    2ef6:	02 c0       	rjmp	.+4      	; 0x2efc <DIO_u8SetPinValue+0x1f4>
    2ef8:	88 0f       	add	r24, r24
    2efa:	99 1f       	adc	r25, r25
    2efc:	0a 94       	dec	r0
    2efe:	e2 f7       	brpl	.-8      	; 0x2ef8 <DIO_u8SetPinValue+0x1f0>
    2f00:	80 95       	com	r24
    2f02:	84 23       	and	r24, r20
    2f04:	8c 93       	st	X, r24
    2f06:	08 c0       	rjmp	.+16     	; 0x2f18 <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState=NOK;break;
    2f08:	81 e0       	ldi	r24, 0x01	; 1
    2f0a:	89 83       	std	Y+1, r24	; 0x01
    2f0c:	05 c0       	rjmp	.+10     	; 0x2f18 <DIO_u8SetPinValue+0x210>

			}
		}
		else
		{
			Local_u8ErrorState=NOK;
    2f0e:	81 e0       	ldi	r24, 0x01	; 1
    2f10:	89 83       	std	Y+1, r24	; 0x01
    2f12:	02 c0       	rjmp	.+4      	; 0x2f18 <DIO_u8SetPinValue+0x210>

		}
	}
	else
	{
		Local_u8ErrorState=NOK;
    2f14:	81 e0       	ldi	r24, 0x01	; 1
    2f16:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    2f18:	89 81       	ldd	r24, Y+1	; 0x01
}
    2f1a:	28 96       	adiw	r28, 0x08	; 8
    2f1c:	0f b6       	in	r0, 0x3f	; 63
    2f1e:	f8 94       	cli
    2f20:	de bf       	out	0x3e, r29	; 62
    2f22:	0f be       	out	0x3f, r0	; 63
    2f24:	cd bf       	out	0x3d, r28	; 61
    2f26:	cf 91       	pop	r28
    2f28:	df 91       	pop	r29
    2f2a:	08 95       	ret

00002f2c <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 Copy_u8Port,u8 Copy_u8Value)
{
    2f2c:	df 93       	push	r29
    2f2e:	cf 93       	push	r28
    2f30:	00 d0       	rcall	.+0      	; 0x2f32 <DIO_u8SetPortValue+0x6>
    2f32:	00 d0       	rcall	.+0      	; 0x2f34 <DIO_u8SetPortValue+0x8>
    2f34:	0f 92       	push	r0
    2f36:	cd b7       	in	r28, 0x3d	; 61
    2f38:	de b7       	in	r29, 0x3e	; 62
    2f3a:	8a 83       	std	Y+2, r24	; 0x02
    2f3c:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=OK;
    2f3e:	19 82       	std	Y+1, r1	; 0x01

	switch (Copy_u8Port)
    2f40:	8a 81       	ldd	r24, Y+2	; 0x02
    2f42:	28 2f       	mov	r18, r24
    2f44:	30 e0       	ldi	r19, 0x00	; 0
    2f46:	3d 83       	std	Y+5, r19	; 0x05
    2f48:	2c 83       	std	Y+4, r18	; 0x04
    2f4a:	8c 81       	ldd	r24, Y+4	; 0x04
    2f4c:	9d 81       	ldd	r25, Y+5	; 0x05
    2f4e:	81 30       	cpi	r24, 0x01	; 1
    2f50:	91 05       	cpc	r25, r1
    2f52:	d1 f0       	breq	.+52     	; 0x2f88 <DIO_u8SetPortValue+0x5c>
    2f54:	2c 81       	ldd	r18, Y+4	; 0x04
    2f56:	3d 81       	ldd	r19, Y+5	; 0x05
    2f58:	22 30       	cpi	r18, 0x02	; 2
    2f5a:	31 05       	cpc	r19, r1
    2f5c:	2c f4       	brge	.+10     	; 0x2f68 <DIO_u8SetPortValue+0x3c>
    2f5e:	8c 81       	ldd	r24, Y+4	; 0x04
    2f60:	9d 81       	ldd	r25, Y+5	; 0x05
    2f62:	00 97       	sbiw	r24, 0x00	; 0
    2f64:	61 f0       	breq	.+24     	; 0x2f7e <DIO_u8SetPortValue+0x52>
    2f66:	1f c0       	rjmp	.+62     	; 0x2fa6 <DIO_u8SetPortValue+0x7a>
    2f68:	2c 81       	ldd	r18, Y+4	; 0x04
    2f6a:	3d 81       	ldd	r19, Y+5	; 0x05
    2f6c:	22 30       	cpi	r18, 0x02	; 2
    2f6e:	31 05       	cpc	r19, r1
    2f70:	81 f0       	breq	.+32     	; 0x2f92 <DIO_u8SetPortValue+0x66>
    2f72:	8c 81       	ldd	r24, Y+4	; 0x04
    2f74:	9d 81       	ldd	r25, Y+5	; 0x05
    2f76:	83 30       	cpi	r24, 0x03	; 3
    2f78:	91 05       	cpc	r25, r1
    2f7a:	81 f0       	breq	.+32     	; 0x2f9c <DIO_u8SetPortValue+0x70>
    2f7c:	14 c0       	rjmp	.+40     	; 0x2fa6 <DIO_u8SetPortValue+0x7a>
		{
		case DIO_u8PORTA : PORTA = Copy_u8Value ; break ;
    2f7e:	eb e3       	ldi	r30, 0x3B	; 59
    2f80:	f0 e0       	ldi	r31, 0x00	; 0
    2f82:	8b 81       	ldd	r24, Y+3	; 0x03
    2f84:	80 83       	st	Z, r24
    2f86:	11 c0       	rjmp	.+34     	; 0x2faa <DIO_u8SetPortValue+0x7e>
		case DIO_u8PORTB : PORTB = Copy_u8Value ; break ;
    2f88:	e8 e3       	ldi	r30, 0x38	; 56
    2f8a:	f0 e0       	ldi	r31, 0x00	; 0
    2f8c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f8e:	80 83       	st	Z, r24
    2f90:	0c c0       	rjmp	.+24     	; 0x2faa <DIO_u8SetPortValue+0x7e>
		case DIO_u8PORTC : PORTC = Copy_u8Value ; break ;
    2f92:	e5 e3       	ldi	r30, 0x35	; 53
    2f94:	f0 e0       	ldi	r31, 0x00	; 0
    2f96:	8b 81       	ldd	r24, Y+3	; 0x03
    2f98:	80 83       	st	Z, r24
    2f9a:	07 c0       	rjmp	.+14     	; 0x2faa <DIO_u8SetPortValue+0x7e>
		case DIO_u8PORTD : PORTD = Copy_u8Value ; break ;
    2f9c:	e2 e3       	ldi	r30, 0x32	; 50
    2f9e:	f0 e0       	ldi	r31, 0x00	; 0
    2fa0:	8b 81       	ldd	r24, Y+3	; 0x03
    2fa2:	80 83       	st	Z, r24
    2fa4:	02 c0       	rjmp	.+4      	; 0x2faa <DIO_u8SetPortValue+0x7e>
		default : Local_u8ErrorState=NOK ; break;
    2fa6:	81 e0       	ldi	r24, 0x01	; 1
    2fa8:	89 83       	std	Y+1, r24	; 0x01
		}


	return Local_u8ErrorState;
    2faa:	89 81       	ldd	r24, Y+1	; 0x01
}
    2fac:	0f 90       	pop	r0
    2fae:	0f 90       	pop	r0
    2fb0:	0f 90       	pop	r0
    2fb2:	0f 90       	pop	r0
    2fb4:	0f 90       	pop	r0
    2fb6:	cf 91       	pop	r28
    2fb8:	df 91       	pop	r29
    2fba:	08 95       	ret

00002fbc <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin,u8* Copy_pu8Value)
{
    2fbc:	df 93       	push	r29
    2fbe:	cf 93       	push	r28
    2fc0:	cd b7       	in	r28, 0x3d	; 61
    2fc2:	de b7       	in	r29, 0x3e	; 62
    2fc4:	27 97       	sbiw	r28, 0x07	; 7
    2fc6:	0f b6       	in	r0, 0x3f	; 63
    2fc8:	f8 94       	cli
    2fca:	de bf       	out	0x3e, r29	; 62
    2fcc:	0f be       	out	0x3f, r0	; 63
    2fce:	cd bf       	out	0x3d, r28	; 61
    2fd0:	8a 83       	std	Y+2, r24	; 0x02
    2fd2:	6b 83       	std	Y+3, r22	; 0x03
    2fd4:	5d 83       	std	Y+5, r21	; 0x05
    2fd6:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=OK;
    2fd8:	19 82       	std	Y+1, r1	; 0x01

	if((Copy_u8Pin<=DIO_u8PIN7)  && (Copy_pu8Value !=NULL) )
    2fda:	8b 81       	ldd	r24, Y+3	; 0x03
    2fdc:	88 30       	cpi	r24, 0x08	; 8
    2fde:	08 f0       	brcs	.+2      	; 0x2fe2 <DIO_u8GetPinValue+0x26>
    2fe0:	79 c0       	rjmp	.+242    	; 0x30d4 <DIO_u8GetPinValue+0x118>
    2fe2:	8c 81       	ldd	r24, Y+4	; 0x04
    2fe4:	9d 81       	ldd	r25, Y+5	; 0x05
    2fe6:	00 97       	sbiw	r24, 0x00	; 0
    2fe8:	09 f4       	brne	.+2      	; 0x2fec <DIO_u8GetPinValue+0x30>
    2fea:	74 c0       	rjmp	.+232    	; 0x30d4 <DIO_u8GetPinValue+0x118>
	{
		switch (Copy_u8Port)
    2fec:	8a 81       	ldd	r24, Y+2	; 0x02
    2fee:	28 2f       	mov	r18, r24
    2ff0:	30 e0       	ldi	r19, 0x00	; 0
    2ff2:	3f 83       	std	Y+7, r19	; 0x07
    2ff4:	2e 83       	std	Y+6, r18	; 0x06
    2ff6:	4e 81       	ldd	r20, Y+6	; 0x06
    2ff8:	5f 81       	ldd	r21, Y+7	; 0x07
    2ffa:	41 30       	cpi	r20, 0x01	; 1
    2ffc:	51 05       	cpc	r21, r1
    2ffe:	59 f1       	breq	.+86     	; 0x3056 <DIO_u8GetPinValue+0x9a>
    3000:	8e 81       	ldd	r24, Y+6	; 0x06
    3002:	9f 81       	ldd	r25, Y+7	; 0x07
    3004:	82 30       	cpi	r24, 0x02	; 2
    3006:	91 05       	cpc	r25, r1
    3008:	34 f4       	brge	.+12     	; 0x3016 <DIO_u8GetPinValue+0x5a>
    300a:	2e 81       	ldd	r18, Y+6	; 0x06
    300c:	3f 81       	ldd	r19, Y+7	; 0x07
    300e:	21 15       	cp	r18, r1
    3010:	31 05       	cpc	r19, r1
    3012:	69 f0       	breq	.+26     	; 0x302e <DIO_u8GetPinValue+0x72>
    3014:	5c c0       	rjmp	.+184    	; 0x30ce <DIO_u8GetPinValue+0x112>
    3016:	4e 81       	ldd	r20, Y+6	; 0x06
    3018:	5f 81       	ldd	r21, Y+7	; 0x07
    301a:	42 30       	cpi	r20, 0x02	; 2
    301c:	51 05       	cpc	r21, r1
    301e:	79 f1       	breq	.+94     	; 0x307e <DIO_u8GetPinValue+0xc2>
    3020:	8e 81       	ldd	r24, Y+6	; 0x06
    3022:	9f 81       	ldd	r25, Y+7	; 0x07
    3024:	83 30       	cpi	r24, 0x03	; 3
    3026:	91 05       	cpc	r25, r1
    3028:	09 f4       	brne	.+2      	; 0x302c <DIO_u8GetPinValue+0x70>
    302a:	3d c0       	rjmp	.+122    	; 0x30a6 <DIO_u8GetPinValue+0xea>
    302c:	50 c0       	rjmp	.+160    	; 0x30ce <DIO_u8GetPinValue+0x112>
		{
		 case DIO_u8PORTA : * Copy_pu8Value = GET_BIT(PINA,Copy_u8Pin);break;
    302e:	e9 e3       	ldi	r30, 0x39	; 57
    3030:	f0 e0       	ldi	r31, 0x00	; 0
    3032:	80 81       	ld	r24, Z
    3034:	28 2f       	mov	r18, r24
    3036:	30 e0       	ldi	r19, 0x00	; 0
    3038:	8b 81       	ldd	r24, Y+3	; 0x03
    303a:	88 2f       	mov	r24, r24
    303c:	90 e0       	ldi	r25, 0x00	; 0
    303e:	a9 01       	movw	r20, r18
    3040:	02 c0       	rjmp	.+4      	; 0x3046 <DIO_u8GetPinValue+0x8a>
    3042:	55 95       	asr	r21
    3044:	47 95       	ror	r20
    3046:	8a 95       	dec	r24
    3048:	e2 f7       	brpl	.-8      	; 0x3042 <DIO_u8GetPinValue+0x86>
    304a:	ca 01       	movw	r24, r20
    304c:	81 70       	andi	r24, 0x01	; 1
    304e:	ec 81       	ldd	r30, Y+4	; 0x04
    3050:	fd 81       	ldd	r31, Y+5	; 0x05
    3052:	80 83       	st	Z, r24
    3054:	41 c0       	rjmp	.+130    	; 0x30d8 <DIO_u8GetPinValue+0x11c>
		 case DIO_u8PORTB : * Copy_pu8Value = GET_BIT(PINB,Copy_u8Pin);break;
    3056:	e6 e3       	ldi	r30, 0x36	; 54
    3058:	f0 e0       	ldi	r31, 0x00	; 0
    305a:	80 81       	ld	r24, Z
    305c:	28 2f       	mov	r18, r24
    305e:	30 e0       	ldi	r19, 0x00	; 0
    3060:	8b 81       	ldd	r24, Y+3	; 0x03
    3062:	88 2f       	mov	r24, r24
    3064:	90 e0       	ldi	r25, 0x00	; 0
    3066:	a9 01       	movw	r20, r18
    3068:	02 c0       	rjmp	.+4      	; 0x306e <DIO_u8GetPinValue+0xb2>
    306a:	55 95       	asr	r21
    306c:	47 95       	ror	r20
    306e:	8a 95       	dec	r24
    3070:	e2 f7       	brpl	.-8      	; 0x306a <DIO_u8GetPinValue+0xae>
    3072:	ca 01       	movw	r24, r20
    3074:	81 70       	andi	r24, 0x01	; 1
    3076:	ec 81       	ldd	r30, Y+4	; 0x04
    3078:	fd 81       	ldd	r31, Y+5	; 0x05
    307a:	80 83       	st	Z, r24
    307c:	2d c0       	rjmp	.+90     	; 0x30d8 <DIO_u8GetPinValue+0x11c>
		 case DIO_u8PORTC : * Copy_pu8Value = GET_BIT(PINC,Copy_u8Pin);break;
    307e:	e3 e3       	ldi	r30, 0x33	; 51
    3080:	f0 e0       	ldi	r31, 0x00	; 0
    3082:	80 81       	ld	r24, Z
    3084:	28 2f       	mov	r18, r24
    3086:	30 e0       	ldi	r19, 0x00	; 0
    3088:	8b 81       	ldd	r24, Y+3	; 0x03
    308a:	88 2f       	mov	r24, r24
    308c:	90 e0       	ldi	r25, 0x00	; 0
    308e:	a9 01       	movw	r20, r18
    3090:	02 c0       	rjmp	.+4      	; 0x3096 <DIO_u8GetPinValue+0xda>
    3092:	55 95       	asr	r21
    3094:	47 95       	ror	r20
    3096:	8a 95       	dec	r24
    3098:	e2 f7       	brpl	.-8      	; 0x3092 <DIO_u8GetPinValue+0xd6>
    309a:	ca 01       	movw	r24, r20
    309c:	81 70       	andi	r24, 0x01	; 1
    309e:	ec 81       	ldd	r30, Y+4	; 0x04
    30a0:	fd 81       	ldd	r31, Y+5	; 0x05
    30a2:	80 83       	st	Z, r24
    30a4:	19 c0       	rjmp	.+50     	; 0x30d8 <DIO_u8GetPinValue+0x11c>
		 case DIO_u8PORTD : * Copy_pu8Value = GET_BIT(PIND,Copy_u8Pin);break;
    30a6:	e0 e3       	ldi	r30, 0x30	; 48
    30a8:	f0 e0       	ldi	r31, 0x00	; 0
    30aa:	80 81       	ld	r24, Z
    30ac:	28 2f       	mov	r18, r24
    30ae:	30 e0       	ldi	r19, 0x00	; 0
    30b0:	8b 81       	ldd	r24, Y+3	; 0x03
    30b2:	88 2f       	mov	r24, r24
    30b4:	90 e0       	ldi	r25, 0x00	; 0
    30b6:	a9 01       	movw	r20, r18
    30b8:	02 c0       	rjmp	.+4      	; 0x30be <DIO_u8GetPinValue+0x102>
    30ba:	55 95       	asr	r21
    30bc:	47 95       	ror	r20
    30be:	8a 95       	dec	r24
    30c0:	e2 f7       	brpl	.-8      	; 0x30ba <DIO_u8GetPinValue+0xfe>
    30c2:	ca 01       	movw	r24, r20
    30c4:	81 70       	andi	r24, 0x01	; 1
    30c6:	ec 81       	ldd	r30, Y+4	; 0x04
    30c8:	fd 81       	ldd	r31, Y+5	; 0x05
    30ca:	80 83       	st	Z, r24
    30cc:	05 c0       	rjmp	.+10     	; 0x30d8 <DIO_u8GetPinValue+0x11c>
		 default : Local_u8ErrorState=NOK ; break;
    30ce:	81 e0       	ldi	r24, 0x01	; 1
    30d0:	89 83       	std	Y+1, r24	; 0x01
    30d2:	02 c0       	rjmp	.+4      	; 0x30d8 <DIO_u8GetPinValue+0x11c>
		}
	}
	else
	{
		Local_u8ErrorState=NOK;
    30d4:	81 e0       	ldi	r24, 0x01	; 1
    30d6:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    30d8:	89 81       	ldd	r24, Y+1	; 0x01
}
    30da:	27 96       	adiw	r28, 0x07	; 7
    30dc:	0f b6       	in	r0, 0x3f	; 63
    30de:	f8 94       	cli
    30e0:	de bf       	out	0x3e, r29	; 62
    30e2:	0f be       	out	0x3f, r0	; 63
    30e4:	cd bf       	out	0x3d, r28	; 61
    30e6:	cf 91       	pop	r28
    30e8:	df 91       	pop	r29
    30ea:	08 95       	ret

000030ec <KPD_U8GetPressedKey>:
#include <util/delay.h>



u8 KPD_U8GetPressedKey(void)
{
    30ec:	df 93       	push	r29
    30ee:	cf 93       	push	r28
    30f0:	cd b7       	in	r28, 0x3d	; 61
    30f2:	de b7       	in	r29, 0x3e	; 62
    30f4:	a2 97       	sbiw	r28, 0x22	; 34
    30f6:	0f b6       	in	r0, 0x3f	; 63
    30f8:	f8 94       	cli
    30fa:	de bf       	out	0x3e, r29	; 62
    30fc:	0f be       	out	0x3f, r0	; 63
    30fe:	cd bf       	out	0x3d, r28	; 61
	u8 Local_u8ColIdx,Local_u8RowIdx,Local_u8PressedKey=NO_PRESSED_KEY,Local_u8PinState;
    3100:	8f ef       	ldi	r24, 0xFF	; 255
    3102:	89 83       	std	Y+1, r24	; 0x01

	u8 Local_KPDArr[ROW_NUMBER][COLLUM_NUMBER]=KPD_BUTTONS_VAL;
    3104:	ce 01       	movw	r24, r28
    3106:	05 96       	adiw	r24, 0x05	; 5
    3108:	9f 8f       	std	Y+31, r25	; 0x1f
    310a:	8e 8f       	std	Y+30, r24	; 0x1e
    310c:	eb e8       	ldi	r30, 0x8B	; 139
    310e:	f1 e0       	ldi	r31, 0x01	; 1
    3110:	f9 a3       	std	Y+33, r31	; 0x21
    3112:	e8 a3       	std	Y+32, r30	; 0x20
    3114:	f0 e1       	ldi	r31, 0x10	; 16
    3116:	fa a3       	std	Y+34, r31	; 0x22
    3118:	e8 a1       	ldd	r30, Y+32	; 0x20
    311a:	f9 a1       	ldd	r31, Y+33	; 0x21
    311c:	00 80       	ld	r0, Z
    311e:	88 a1       	ldd	r24, Y+32	; 0x20
    3120:	99 a1       	ldd	r25, Y+33	; 0x21
    3122:	01 96       	adiw	r24, 0x01	; 1
    3124:	99 a3       	std	Y+33, r25	; 0x21
    3126:	88 a3       	std	Y+32, r24	; 0x20
    3128:	ee 8d       	ldd	r30, Y+30	; 0x1e
    312a:	ff 8d       	ldd	r31, Y+31	; 0x1f
    312c:	00 82       	st	Z, r0
    312e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3130:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3132:	01 96       	adiw	r24, 0x01	; 1
    3134:	9f 8f       	std	Y+31, r25	; 0x1f
    3136:	8e 8f       	std	Y+30, r24	; 0x1e
    3138:	9a a1       	ldd	r25, Y+34	; 0x22
    313a:	91 50       	subi	r25, 0x01	; 1
    313c:	9a a3       	std	Y+34, r25	; 0x22
    313e:	ea a1       	ldd	r30, Y+34	; 0x22
    3140:	ee 23       	and	r30, r30
    3142:	51 f7       	brne	.-44     	; 0x3118 <KPD_U8GetPressedKey+0x2c>

	u8 Local_u8ColArr[COLLUM_NUMBER]={COLLUM_PIN0,COLLUM_PIN1,COLLUM_PIN2,COLLUM_PIN3};
    3144:	1d 8a       	std	Y+21, r1	; 0x15
    3146:	81 e0       	ldi	r24, 0x01	; 1
    3148:	8e 8b       	std	Y+22, r24	; 0x16
    314a:	82 e0       	ldi	r24, 0x02	; 2
    314c:	8f 8b       	std	Y+23, r24	; 0x17
    314e:	83 e0       	ldi	r24, 0x03	; 3
    3150:	88 8f       	std	Y+24, r24	; 0x18

	u8 Local_u8RowArr[ROW_NUMBER]={ROW_PIN0,ROW_PIN1,ROW_PIN2,ROW_PIN3};
    3152:	84 e0       	ldi	r24, 0x04	; 4
    3154:	89 8f       	std	Y+25, r24	; 0x19
    3156:	85 e0       	ldi	r24, 0x05	; 5
    3158:	8a 8f       	std	Y+26, r24	; 0x1a
    315a:	86 e0       	ldi	r24, 0x06	; 6
    315c:	8b 8f       	std	Y+27, r24	; 0x1b
    315e:	87 e0       	ldi	r24, 0x07	; 7
    3160:	8c 8f       	std	Y+28, r24	; 0x1c

	for(Local_u8ColIdx=0;Local_u8ColIdx<COLLUM_NUMBER;Local_u8ColIdx++)
    3162:	1b 82       	std	Y+3, r1	; 0x03
    3164:	68 c0       	rjmp	.+208    	; 0x3236 <KPD_U8GetPressedKey+0x14a>
	{
		DIO_u8SetPinValue(KPD_PORT,Local_u8ColArr[Local_u8ColIdx],DIO_u8PIN_LOW);
    3166:	8b 81       	ldd	r24, Y+3	; 0x03
    3168:	28 2f       	mov	r18, r24
    316a:	30 e0       	ldi	r19, 0x00	; 0
    316c:	ce 01       	movw	r24, r28
    316e:	45 96       	adiw	r24, 0x15	; 21
    3170:	fc 01       	movw	r30, r24
    3172:	e2 0f       	add	r30, r18
    3174:	f3 1f       	adc	r31, r19
    3176:	90 81       	ld	r25, Z
    3178:	83 e0       	ldi	r24, 0x03	; 3
    317a:	69 2f       	mov	r22, r25
    317c:	40 e0       	ldi	r20, 0x00	; 0
    317e:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>

		for(Local_u8RowIdx=0;Local_u8RowIdx<ROW_NUMBER;Local_u8RowIdx++)
    3182:	1a 82       	std	Y+2, r1	; 0x02
    3184:	43 c0       	rjmp	.+134    	; 0x320c <KPD_U8GetPressedKey+0x120>
		{
			DIO_u8GetPinValue(KPD_PORT,Local_u8RowArr[Local_u8RowIdx],&Local_u8PinState);
    3186:	8a 81       	ldd	r24, Y+2	; 0x02
    3188:	28 2f       	mov	r18, r24
    318a:	30 e0       	ldi	r19, 0x00	; 0
    318c:	ce 01       	movw	r24, r28
    318e:	49 96       	adiw	r24, 0x19	; 25
    3190:	fc 01       	movw	r30, r24
    3192:	e2 0f       	add	r30, r18
    3194:	f3 1f       	adc	r31, r19
    3196:	90 81       	ld	r25, Z
    3198:	9e 01       	movw	r18, r28
    319a:	2c 5f       	subi	r18, 0xFC	; 252
    319c:	3f 4f       	sbci	r19, 0xFF	; 255
    319e:	83 e0       	ldi	r24, 0x03	; 3
    31a0:	69 2f       	mov	r22, r25
    31a2:	a9 01       	movw	r20, r18
    31a4:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
			if(Local_u8PinState==DIO_u8PIN_LOW)
    31a8:	8c 81       	ldd	r24, Y+4	; 0x04
    31aa:	88 23       	and	r24, r24
    31ac:	61 f5       	brne	.+88     	; 0x3206 <KPD_U8GetPressedKey+0x11a>
			{
				Local_u8PressedKey=Local_KPDArr[Local_u8RowIdx][Local_u8ColIdx];
    31ae:	8a 81       	ldd	r24, Y+2	; 0x02
    31b0:	28 2f       	mov	r18, r24
    31b2:	30 e0       	ldi	r19, 0x00	; 0
    31b4:	8b 81       	ldd	r24, Y+3	; 0x03
    31b6:	48 2f       	mov	r20, r24
    31b8:	50 e0       	ldi	r21, 0x00	; 0
    31ba:	22 0f       	add	r18, r18
    31bc:	33 1f       	adc	r19, r19
    31be:	22 0f       	add	r18, r18
    31c0:	33 1f       	adc	r19, r19
    31c2:	ce 01       	movw	r24, r28
    31c4:	01 96       	adiw	r24, 0x01	; 1
    31c6:	82 0f       	add	r24, r18
    31c8:	93 1f       	adc	r25, r19
    31ca:	84 0f       	add	r24, r20
    31cc:	95 1f       	adc	r25, r21
    31ce:	fc 01       	movw	r30, r24
    31d0:	34 96       	adiw	r30, 0x04	; 4
    31d2:	80 81       	ld	r24, Z
    31d4:	89 83       	std	Y+1, r24	; 0x01
    31d6:	11 c0       	rjmp	.+34     	; 0x31fa <KPD_U8GetPressedKey+0x10e>
				while(Local_u8PinState==DIO_u8PIN_LOW)
				{
					DIO_u8GetPinValue(KPD_PORT,Local_u8RowArr[Local_u8RowIdx],&Local_u8PinState);
    31d8:	8a 81       	ldd	r24, Y+2	; 0x02
    31da:	28 2f       	mov	r18, r24
    31dc:	30 e0       	ldi	r19, 0x00	; 0
    31de:	ce 01       	movw	r24, r28
    31e0:	49 96       	adiw	r24, 0x19	; 25
    31e2:	fc 01       	movw	r30, r24
    31e4:	e2 0f       	add	r30, r18
    31e6:	f3 1f       	adc	r31, r19
    31e8:	90 81       	ld	r25, Z
    31ea:	9e 01       	movw	r18, r28
    31ec:	2c 5f       	subi	r18, 0xFC	; 252
    31ee:	3f 4f       	sbci	r19, 0xFF	; 255
    31f0:	83 e0       	ldi	r24, 0x03	; 3
    31f2:	69 2f       	mov	r22, r25
    31f4:	a9 01       	movw	r20, r18
    31f6:	0e 94 de 17 	call	0x2fbc	; 0x2fbc <DIO_u8GetPinValue>
		{
			DIO_u8GetPinValue(KPD_PORT,Local_u8RowArr[Local_u8RowIdx],&Local_u8PinState);
			if(Local_u8PinState==DIO_u8PIN_LOW)
			{
				Local_u8PressedKey=Local_KPDArr[Local_u8RowIdx][Local_u8ColIdx];
				while(Local_u8PinState==DIO_u8PIN_LOW)
    31fa:	8c 81       	ldd	r24, Y+4	; 0x04
    31fc:	88 23       	and	r24, r24
    31fe:	61 f3       	breq	.-40     	; 0x31d8 <KPD_U8GetPressedKey+0xec>
				{
					DIO_u8GetPinValue(KPD_PORT,Local_u8RowArr[Local_u8RowIdx],&Local_u8PinState);
				}
				return Local_u8PressedKey;
    3200:	f9 81       	ldd	r31, Y+1	; 0x01
    3202:	fd 8f       	std	Y+29, r31	; 0x1d
    3204:	1e c0       	rjmp	.+60     	; 0x3242 <KPD_U8GetPressedKey+0x156>

	for(Local_u8ColIdx=0;Local_u8ColIdx<COLLUM_NUMBER;Local_u8ColIdx++)
	{
		DIO_u8SetPinValue(KPD_PORT,Local_u8ColArr[Local_u8ColIdx],DIO_u8PIN_LOW);

		for(Local_u8RowIdx=0;Local_u8RowIdx<ROW_NUMBER;Local_u8RowIdx++)
    3206:	8a 81       	ldd	r24, Y+2	; 0x02
    3208:	8f 5f       	subi	r24, 0xFF	; 255
    320a:	8a 83       	std	Y+2, r24	; 0x02
    320c:	8a 81       	ldd	r24, Y+2	; 0x02
    320e:	84 30       	cpi	r24, 0x04	; 4
    3210:	08 f4       	brcc	.+2      	; 0x3214 <KPD_U8GetPressedKey+0x128>
    3212:	b9 cf       	rjmp	.-142    	; 0x3186 <KPD_U8GetPressedKey+0x9a>
					DIO_u8GetPinValue(KPD_PORT,Local_u8RowArr[Local_u8RowIdx],&Local_u8PinState);
				}
				return Local_u8PressedKey;
			}
		}
		DIO_u8SetPinValue(KPD_PORT,Local_u8ColArr[Local_u8ColIdx],DIO_u8PIN_HIGH);
    3214:	8b 81       	ldd	r24, Y+3	; 0x03
    3216:	28 2f       	mov	r18, r24
    3218:	30 e0       	ldi	r19, 0x00	; 0
    321a:	ce 01       	movw	r24, r28
    321c:	45 96       	adiw	r24, 0x15	; 21
    321e:	fc 01       	movw	r30, r24
    3220:	e2 0f       	add	r30, r18
    3222:	f3 1f       	adc	r31, r19
    3224:	90 81       	ld	r25, Z
    3226:	83 e0       	ldi	r24, 0x03	; 3
    3228:	69 2f       	mov	r22, r25
    322a:	41 e0       	ldi	r20, 0x01	; 1
    322c:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>

	u8 Local_u8ColArr[COLLUM_NUMBER]={COLLUM_PIN0,COLLUM_PIN1,COLLUM_PIN2,COLLUM_PIN3};

	u8 Local_u8RowArr[ROW_NUMBER]={ROW_PIN0,ROW_PIN1,ROW_PIN2,ROW_PIN3};

	for(Local_u8ColIdx=0;Local_u8ColIdx<COLLUM_NUMBER;Local_u8ColIdx++)
    3230:	8b 81       	ldd	r24, Y+3	; 0x03
    3232:	8f 5f       	subi	r24, 0xFF	; 255
    3234:	8b 83       	std	Y+3, r24	; 0x03
    3236:	8b 81       	ldd	r24, Y+3	; 0x03
    3238:	84 30       	cpi	r24, 0x04	; 4
    323a:	08 f4       	brcc	.+2      	; 0x323e <KPD_U8GetPressedKey+0x152>
    323c:	94 cf       	rjmp	.-216    	; 0x3166 <KPD_U8GetPressedKey+0x7a>
				return Local_u8PressedKey;
			}
		}
		DIO_u8SetPinValue(KPD_PORT,Local_u8ColArr[Local_u8ColIdx],DIO_u8PIN_HIGH);
	}
	return Local_u8PressedKey;
    323e:	89 81       	ldd	r24, Y+1	; 0x01
    3240:	8d 8f       	std	Y+29, r24	; 0x1d
    3242:	8d 8d       	ldd	r24, Y+29	; 0x1d
}
    3244:	a2 96       	adiw	r28, 0x22	; 34
    3246:	0f b6       	in	r0, 0x3f	; 63
    3248:	f8 94       	cli
    324a:	de bf       	out	0x3e, r29	; 62
    324c:	0f be       	out	0x3f, r0	; 63
    324e:	cd bf       	out	0x3d, r28	; 61
    3250:	cf 91       	pop	r28
    3252:	df 91       	pop	r29
    3254:	08 95       	ret

00003256 <Keypad_voidComplateCalculator>:

void Keypad_voidComplateCalculator()
{
    3256:	ef 92       	push	r14
    3258:	ff 92       	push	r15
    325a:	0f 93       	push	r16
    325c:	1f 93       	push	r17
    325e:	df 93       	push	r29
    3260:	cf 93       	push	r28
    3262:	cd b7       	in	r28, 0x3d	; 61
    3264:	de b7       	in	r29, 0x3e	; 62
    3266:	68 97       	sbiw	r28, 0x18	; 24
    3268:	0f b6       	in	r0, 0x3f	; 63
    326a:	f8 94       	cli
    326c:	de bf       	out	0x3e, r29	; 62
    326e:	0f be       	out	0x3f, r0	; 63
    3270:	cd bf       	out	0x3d, r28	; 61
	u8 Local_u8Number=0xff;
    3272:	8f ef       	ldi	r24, 0xFF	; 255
    3274:	8e 8b       	std	Y+22, r24	; 0x16
	u8 Local_u8Number1=0,Local_u8Number2=0;
    3276:	1d 8a       	std	Y+21, r1	; 0x15
    3278:	1c 8a       	std	Y+20, r1	; 0x14
	u8 Local_u8Mark;
	Local_u8Number=KPD_U8GetPressedKey();
    327a:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    327e:	8e 8b       	std	Y+22, r24	; 0x16
    3280:	03 c0       	rjmp	.+6      	; 0x3288 <Keypad_voidComplateCalculator+0x32>
	while (Local_u8Number==0xff)
	{
		Local_u8Number=KPD_U8GetPressedKey();
    3282:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3286:	8e 8b       	std	Y+22, r24	; 0x16
{
	u8 Local_u8Number=0xff;
	u8 Local_u8Number1=0,Local_u8Number2=0;
	u8 Local_u8Mark;
	Local_u8Number=KPD_U8GetPressedKey();
	while (Local_u8Number==0xff)
    3288:	8e 89       	ldd	r24, Y+22	; 0x16
    328a:	8f 3f       	cpi	r24, 0xFF	; 255
    328c:	d1 f3       	breq	.-12     	; 0x3282 <Keypad_voidComplateCalculator+0x2c>
    328e:	1f c0       	rjmp	.+62     	; 0x32ce <Keypad_voidComplateCalculator+0x78>
	{
		Local_u8Number=KPD_U8GetPressedKey();
	}
	while ((Local_u8Number!= '+')&&(Local_u8Number!= '-')&&(Local_u8Number!= '*')&&(Local_u8Number!= '/'))
	{
		CLCD_voidSendData(Local_u8Number+'0');
    3290:	8e 89       	ldd	r24, Y+22	; 0x16
    3292:	80 5d       	subi	r24, 0xD0	; 208
    3294:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		Local_u8Number1=Local_u8Number1*10+Local_u8Number;
    3298:	8d 89       	ldd	r24, Y+21	; 0x15
    329a:	88 2f       	mov	r24, r24
    329c:	90 e0       	ldi	r25, 0x00	; 0
    329e:	9c 01       	movw	r18, r24
    32a0:	22 0f       	add	r18, r18
    32a2:	33 1f       	adc	r19, r19
    32a4:	c9 01       	movw	r24, r18
    32a6:	88 0f       	add	r24, r24
    32a8:	99 1f       	adc	r25, r25
    32aa:	88 0f       	add	r24, r24
    32ac:	99 1f       	adc	r25, r25
    32ae:	82 0f       	add	r24, r18
    32b0:	93 1f       	adc	r25, r19
    32b2:	98 2f       	mov	r25, r24
    32b4:	8e 89       	ldd	r24, Y+22	; 0x16
    32b6:	89 0f       	add	r24, r25
    32b8:	8d 8b       	std	Y+21, r24	; 0x15
		Local_u8Number=KPD_U8GetPressedKey();
    32ba:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    32be:	8e 8b       	std	Y+22, r24	; 0x16
    32c0:	03 c0       	rjmp	.+6      	; 0x32c8 <Keypad_voidComplateCalculator+0x72>
		while (Local_u8Number==0xff)
		{
			Local_u8Number=KPD_U8GetPressedKey();
    32c2:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    32c6:	8e 8b       	std	Y+22, r24	; 0x16
	while ((Local_u8Number!= '+')&&(Local_u8Number!= '-')&&(Local_u8Number!= '*')&&(Local_u8Number!= '/'))
	{
		CLCD_voidSendData(Local_u8Number+'0');
		Local_u8Number1=Local_u8Number1*10+Local_u8Number;
		Local_u8Number=KPD_U8GetPressedKey();
		while (Local_u8Number==0xff)
    32c8:	8e 89       	ldd	r24, Y+22	; 0x16
    32ca:	8f 3f       	cpi	r24, 0xFF	; 255
    32cc:	d1 f3       	breq	.-12     	; 0x32c2 <Keypad_voidComplateCalculator+0x6c>
	Local_u8Number=KPD_U8GetPressedKey();
	while (Local_u8Number==0xff)
	{
		Local_u8Number=KPD_U8GetPressedKey();
	}
	while ((Local_u8Number!= '+')&&(Local_u8Number!= '-')&&(Local_u8Number!= '*')&&(Local_u8Number!= '/'))
    32ce:	8e 89       	ldd	r24, Y+22	; 0x16
    32d0:	8b 32       	cpi	r24, 0x2B	; 43
    32d2:	49 f0       	breq	.+18     	; 0x32e6 <Keypad_voidComplateCalculator+0x90>
    32d4:	8e 89       	ldd	r24, Y+22	; 0x16
    32d6:	8d 32       	cpi	r24, 0x2D	; 45
    32d8:	31 f0       	breq	.+12     	; 0x32e6 <Keypad_voidComplateCalculator+0x90>
    32da:	8e 89       	ldd	r24, Y+22	; 0x16
    32dc:	8a 32       	cpi	r24, 0x2A	; 42
    32de:	19 f0       	breq	.+6      	; 0x32e6 <Keypad_voidComplateCalculator+0x90>
    32e0:	8e 89       	ldd	r24, Y+22	; 0x16
    32e2:	8f 32       	cpi	r24, 0x2F	; 47
    32e4:	a9 f6       	brne	.-86     	; 0x3290 <Keypad_voidComplateCalculator+0x3a>
			Local_u8Number=KPD_U8GetPressedKey();
		}
	}


	if (Local_u8Number=='+')
    32e6:	8e 89       	ldd	r24, Y+22	; 0x16
    32e8:	8b 32       	cpi	r24, 0x2B	; 43
    32ea:	19 f4       	brne	.+6      	; 0x32f2 <Keypad_voidComplateCalculator+0x9c>
	{
		Local_u8Mark='+';
    32ec:	8b e2       	ldi	r24, 0x2B	; 43
    32ee:	8b 8b       	std	Y+19, r24	; 0x13
    32f0:	1f c0       	rjmp	.+62     	; 0x3330 <Keypad_voidComplateCalculator+0xda>
	}
	else if (Local_u8Number=='-')
    32f2:	8e 89       	ldd	r24, Y+22	; 0x16
    32f4:	8d 32       	cpi	r24, 0x2D	; 45
    32f6:	19 f4       	brne	.+6      	; 0x32fe <Keypad_voidComplateCalculator+0xa8>
	{
		Local_u8Mark='-';
    32f8:	8d e2       	ldi	r24, 0x2D	; 45
    32fa:	8b 8b       	std	Y+19, r24	; 0x13
    32fc:	19 c0       	rjmp	.+50     	; 0x3330 <Keypad_voidComplateCalculator+0xda>
	}
	else if (Local_u8Number=='*')
    32fe:	8e 89       	ldd	r24, Y+22	; 0x16
    3300:	8a 32       	cpi	r24, 0x2A	; 42
    3302:	19 f4       	brne	.+6      	; 0x330a <Keypad_voidComplateCalculator+0xb4>
	{
		Local_u8Mark='*';
    3304:	8a e2       	ldi	r24, 0x2A	; 42
    3306:	8b 8b       	std	Y+19, r24	; 0x13
    3308:	13 c0       	rjmp	.+38     	; 0x3330 <Keypad_voidComplateCalculator+0xda>
	}
	else if (Local_u8Number=='/')
    330a:	8e 89       	ldd	r24, Y+22	; 0x16
    330c:	8f 32       	cpi	r24, 0x2F	; 47
    330e:	81 f4       	brne	.+32     	; 0x3330 <Keypad_voidComplateCalculator+0xda>
	{
		Local_u8Mark='/';
    3310:	8f e2       	ldi	r24, 0x2F	; 47
    3312:	8b 8b       	std	Y+19, r24	; 0x13
    3314:	0d c0       	rjmp	.+26     	; 0x3330 <Keypad_voidComplateCalculator+0xda>
	}
	while ((Local_u8Number== '+')||(Local_u8Number== '-')||(Local_u8Number== '*')||(Local_u8Number== '/'))
	{
		CLCD_voidSendData(Local_u8Number);
    3316:	8e 89       	ldd	r24, Y+22	; 0x16
    3318:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		Local_u8Number=KPD_U8GetPressedKey();
    331c:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3320:	8e 8b       	std	Y+22, r24	; 0x16
    3322:	03 c0       	rjmp	.+6      	; 0x332a <Keypad_voidComplateCalculator+0xd4>
		while (Local_u8Number==0xff)
		{
			Local_u8Number=KPD_U8GetPressedKey();
    3324:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3328:	8e 8b       	std	Y+22, r24	; 0x16
	}
	while ((Local_u8Number== '+')||(Local_u8Number== '-')||(Local_u8Number== '*')||(Local_u8Number== '/'))
	{
		CLCD_voidSendData(Local_u8Number);
		Local_u8Number=KPD_U8GetPressedKey();
		while (Local_u8Number==0xff)
    332a:	8e 89       	ldd	r24, Y+22	; 0x16
    332c:	8f 3f       	cpi	r24, 0xFF	; 255
    332e:	d1 f3       	breq	.-12     	; 0x3324 <Keypad_voidComplateCalculator+0xce>
	}
	else if (Local_u8Number=='/')
	{
		Local_u8Mark='/';
	}
	while ((Local_u8Number== '+')||(Local_u8Number== '-')||(Local_u8Number== '*')||(Local_u8Number== '/'))
    3330:	8e 89       	ldd	r24, Y+22	; 0x16
    3332:	8b 32       	cpi	r24, 0x2B	; 43
    3334:	81 f3       	breq	.-32     	; 0x3316 <Keypad_voidComplateCalculator+0xc0>
    3336:	8e 89       	ldd	r24, Y+22	; 0x16
    3338:	8d 32       	cpi	r24, 0x2D	; 45
    333a:	69 f3       	breq	.-38     	; 0x3316 <Keypad_voidComplateCalculator+0xc0>
    333c:	8e 89       	ldd	r24, Y+22	; 0x16
    333e:	8a 32       	cpi	r24, 0x2A	; 42
    3340:	51 f3       	breq	.-44     	; 0x3316 <Keypad_voidComplateCalculator+0xc0>
    3342:	8e 89       	ldd	r24, Y+22	; 0x16
    3344:	8f 32       	cpi	r24, 0x2F	; 47
    3346:	39 f3       	breq	.-50     	; 0x3316 <Keypad_voidComplateCalculator+0xc0>
    3348:	1f c0       	rjmp	.+62     	; 0x3388 <Keypad_voidComplateCalculator+0x132>
	}


	while ((Local_u8Number!= '=')&&(Local_u8Number!= '+')&&(Local_u8Number!= '-')&&(Local_u8Number!= '*')&&(Local_u8Number!= '/'))
	{
		CLCD_voidSendData(Local_u8Number+'0');
    334a:	8e 89       	ldd	r24, Y+22	; 0x16
    334c:	80 5d       	subi	r24, 0xD0	; 208
    334e:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		Local_u8Number2=Local_u8Number2*10+Local_u8Number;
    3352:	8c 89       	ldd	r24, Y+20	; 0x14
    3354:	88 2f       	mov	r24, r24
    3356:	90 e0       	ldi	r25, 0x00	; 0
    3358:	9c 01       	movw	r18, r24
    335a:	22 0f       	add	r18, r18
    335c:	33 1f       	adc	r19, r19
    335e:	c9 01       	movw	r24, r18
    3360:	88 0f       	add	r24, r24
    3362:	99 1f       	adc	r25, r25
    3364:	88 0f       	add	r24, r24
    3366:	99 1f       	adc	r25, r25
    3368:	82 0f       	add	r24, r18
    336a:	93 1f       	adc	r25, r19
    336c:	98 2f       	mov	r25, r24
    336e:	8e 89       	ldd	r24, Y+22	; 0x16
    3370:	89 0f       	add	r24, r25
    3372:	8c 8b       	std	Y+20, r24	; 0x14
		Local_u8Number=KPD_U8GetPressedKey();
    3374:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3378:	8e 8b       	std	Y+22, r24	; 0x16
    337a:	03 c0       	rjmp	.+6      	; 0x3382 <Keypad_voidComplateCalculator+0x12c>
		while (Local_u8Number==0xff)
		{
			Local_u8Number=KPD_U8GetPressedKey();
    337c:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3380:	8e 8b       	std	Y+22, r24	; 0x16
	while ((Local_u8Number!= '=')&&(Local_u8Number!= '+')&&(Local_u8Number!= '-')&&(Local_u8Number!= '*')&&(Local_u8Number!= '/'))
	{
		CLCD_voidSendData(Local_u8Number+'0');
		Local_u8Number2=Local_u8Number2*10+Local_u8Number;
		Local_u8Number=KPD_U8GetPressedKey();
		while (Local_u8Number==0xff)
    3382:	8e 89       	ldd	r24, Y+22	; 0x16
    3384:	8f 3f       	cpi	r24, 0xFF	; 255
    3386:	d1 f3       	breq	.-12     	; 0x337c <Keypad_voidComplateCalculator+0x126>
			Local_u8Number=KPD_U8GetPressedKey();
		}
	}


	while ((Local_u8Number!= '=')&&(Local_u8Number!= '+')&&(Local_u8Number!= '-')&&(Local_u8Number!= '*')&&(Local_u8Number!= '/'))
    3388:	8e 89       	ldd	r24, Y+22	; 0x16
    338a:	8d 33       	cpi	r24, 0x3D	; 61
    338c:	61 f0       	breq	.+24     	; 0x33a6 <Keypad_voidComplateCalculator+0x150>
    338e:	8e 89       	ldd	r24, Y+22	; 0x16
    3390:	8b 32       	cpi	r24, 0x2B	; 43
    3392:	49 f0       	breq	.+18     	; 0x33a6 <Keypad_voidComplateCalculator+0x150>
    3394:	8e 89       	ldd	r24, Y+22	; 0x16
    3396:	8d 32       	cpi	r24, 0x2D	; 45
    3398:	31 f0       	breq	.+12     	; 0x33a6 <Keypad_voidComplateCalculator+0x150>
    339a:	8e 89       	ldd	r24, Y+22	; 0x16
    339c:	8a 32       	cpi	r24, 0x2A	; 42
    339e:	19 f0       	breq	.+6      	; 0x33a6 <Keypad_voidComplateCalculator+0x150>
    33a0:	8e 89       	ldd	r24, Y+22	; 0x16
    33a2:	8f 32       	cpi	r24, 0x2F	; 47
    33a4:	91 f6       	brne	.-92     	; 0x334a <Keypad_voidComplateCalculator+0xf4>
		while (Local_u8Number==0xff)
		{
			Local_u8Number=KPD_U8GetPressedKey();
		}
	}
	CLCD_voidSendData(Local_u8Number);
    33a6:	8e 89       	ldd	r24, Y+22	; 0x16
    33a8:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>

	switch(Local_u8Mark)
    33ac:	8b 89       	ldd	r24, Y+19	; 0x13
    33ae:	28 2f       	mov	r18, r24
    33b0:	30 e0       	ldi	r19, 0x00	; 0
    33b2:	38 8f       	std	Y+24, r19	; 0x18
    33b4:	2f 8b       	std	Y+23, r18	; 0x17
    33b6:	4f 89       	ldd	r20, Y+23	; 0x17
    33b8:	58 8d       	ldd	r21, Y+24	; 0x18
    33ba:	4b 32       	cpi	r20, 0x2B	; 43
    33bc:	51 05       	cpc	r21, r1
    33be:	c1 f0       	breq	.+48     	; 0x33f0 <Keypad_voidComplateCalculator+0x19a>
    33c0:	8f 89       	ldd	r24, Y+23	; 0x17
    33c2:	98 8d       	ldd	r25, Y+24	; 0x18
    33c4:	8c 32       	cpi	r24, 0x2C	; 44
    33c6:	91 05       	cpc	r25, r1
    33c8:	3c f4       	brge	.+14     	; 0x33d8 <Keypad_voidComplateCalculator+0x182>
    33ca:	2f 89       	ldd	r18, Y+23	; 0x17
    33cc:	38 8d       	ldd	r19, Y+24	; 0x18
    33ce:	2a 32       	cpi	r18, 0x2A	; 42
    33d0:	31 05       	cpc	r19, r1
    33d2:	09 f4       	brne	.+2      	; 0x33d6 <Keypad_voidComplateCalculator+0x180>
    33d4:	50 c0       	rjmp	.+160    	; 0x3476 <Keypad_voidComplateCalculator+0x220>
    33d6:	d4 c0       	rjmp	.+424    	; 0x3580 <Keypad_voidComplateCalculator+0x32a>
    33d8:	4f 89       	ldd	r20, Y+23	; 0x17
    33da:	58 8d       	ldd	r21, Y+24	; 0x18
    33dc:	4d 32       	cpi	r20, 0x2D	; 45
    33de:	51 05       	cpc	r21, r1
    33e0:	c1 f0       	breq	.+48     	; 0x3412 <Keypad_voidComplateCalculator+0x1bc>
    33e2:	8f 89       	ldd	r24, Y+23	; 0x17
    33e4:	98 8d       	ldd	r25, Y+24	; 0x18
    33e6:	8f 32       	cpi	r24, 0x2F	; 47
    33e8:	91 05       	cpc	r25, r1
    33ea:	09 f4       	brne	.+2      	; 0x33ee <Keypad_voidComplateCalculator+0x198>
    33ec:	5b c0       	rjmp	.+182    	; 0x34a4 <Keypad_voidComplateCalculator+0x24e>
    33ee:	c8 c0       	rjmp	.+400    	; 0x3580 <Keypad_voidComplateCalculator+0x32a>
	{
	case '+'  :
		CLCD_voidWriteNumber(Local_u8Number1 + Local_u8Number2);break ;
    33f0:	8d 89       	ldd	r24, Y+21	; 0x15
    33f2:	28 2f       	mov	r18, r24
    33f4:	30 e0       	ldi	r19, 0x00	; 0
    33f6:	8c 89       	ldd	r24, Y+20	; 0x14
    33f8:	88 2f       	mov	r24, r24
    33fa:	90 e0       	ldi	r25, 0x00	; 0
    33fc:	82 0f       	add	r24, r18
    33fe:	93 1f       	adc	r25, r19
    3400:	aa 27       	eor	r26, r26
    3402:	97 fd       	sbrc	r25, 7
    3404:	a0 95       	com	r26
    3406:	ba 2f       	mov	r27, r26
    3408:	bc 01       	movw	r22, r24
    340a:	cd 01       	movw	r24, r26
    340c:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    3410:	b7 c0       	rjmp	.+366    	; 0x3580 <Keypad_voidComplateCalculator+0x32a>
	case '-' :if(Local_u8Number1>Local_u8Number2){
    3412:	9d 89       	ldd	r25, Y+21	; 0x15
    3414:	8c 89       	ldd	r24, Y+20	; 0x14
    3416:	89 17       	cp	r24, r25
    3418:	98 f4       	brcc	.+38     	; 0x3440 <Keypad_voidComplateCalculator+0x1ea>

		CLCD_voidWriteNumber(Local_u8Number1 - Local_u8Number2);
    341a:	8d 89       	ldd	r24, Y+21	; 0x15
    341c:	28 2f       	mov	r18, r24
    341e:	30 e0       	ldi	r19, 0x00	; 0
    3420:	8c 89       	ldd	r24, Y+20	; 0x14
    3422:	88 2f       	mov	r24, r24
    3424:	90 e0       	ldi	r25, 0x00	; 0
    3426:	a9 01       	movw	r20, r18
    3428:	48 1b       	sub	r20, r24
    342a:	59 0b       	sbc	r21, r25
    342c:	ca 01       	movw	r24, r20
    342e:	aa 27       	eor	r26, r26
    3430:	97 fd       	sbrc	r25, 7
    3432:	a0 95       	com	r26
    3434:	ba 2f       	mov	r27, r26
    3436:	bc 01       	movw	r22, r24
    3438:	cd 01       	movw	r24, r26
    343a:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    343e:	a0 c0       	rjmp	.+320    	; 0x3580 <Keypad_voidComplateCalculator+0x32a>
	}
	else if (Local_u8Number1<Local_u8Number2)
    3440:	9d 89       	ldd	r25, Y+21	; 0x15
    3442:	8c 89       	ldd	r24, Y+20	; 0x14
    3444:	98 17       	cp	r25, r24
    3446:	08 f0       	brcs	.+2      	; 0x344a <Keypad_voidComplateCalculator+0x1f4>
    3448:	9b c0       	rjmp	.+310    	; 0x3580 <Keypad_voidComplateCalculator+0x32a>
	{
		CLCD_voidSendData('-');
    344a:	8d e2       	ldi	r24, 0x2D	; 45
    344c:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		CLCD_voidWriteNumber(Local_u8Number2 - Local_u8Number1);
    3450:	8c 89       	ldd	r24, Y+20	; 0x14
    3452:	28 2f       	mov	r18, r24
    3454:	30 e0       	ldi	r19, 0x00	; 0
    3456:	8d 89       	ldd	r24, Y+21	; 0x15
    3458:	88 2f       	mov	r24, r24
    345a:	90 e0       	ldi	r25, 0x00	; 0
    345c:	a9 01       	movw	r20, r18
    345e:	48 1b       	sub	r20, r24
    3460:	59 0b       	sbc	r21, r25
    3462:	ca 01       	movw	r24, r20
    3464:	aa 27       	eor	r26, r26
    3466:	97 fd       	sbrc	r25, 7
    3468:	a0 95       	com	r26
    346a:	ba 2f       	mov	r27, r26
    346c:	bc 01       	movw	r22, r24
    346e:	cd 01       	movw	r24, r26
    3470:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    3474:	85 c0       	rjmp	.+266    	; 0x3580 <Keypad_voidComplateCalculator+0x32a>
	}
	break ;
	case '*' :
		CLCD_voidWriteNumber(Local_u8Number1 * Local_u8Number2);break ;
    3476:	8d 89       	ldd	r24, Y+21	; 0x15
    3478:	28 2f       	mov	r18, r24
    347a:	30 e0       	ldi	r19, 0x00	; 0
    347c:	8c 89       	ldd	r24, Y+20	; 0x14
    347e:	88 2f       	mov	r24, r24
    3480:	90 e0       	ldi	r25, 0x00	; 0
    3482:	ac 01       	movw	r20, r24
    3484:	24 9f       	mul	r18, r20
    3486:	c0 01       	movw	r24, r0
    3488:	25 9f       	mul	r18, r21
    348a:	90 0d       	add	r25, r0
    348c:	34 9f       	mul	r19, r20
    348e:	90 0d       	add	r25, r0
    3490:	11 24       	eor	r1, r1
    3492:	aa 27       	eor	r26, r26
    3494:	97 fd       	sbrc	r25, 7
    3496:	a0 95       	com	r26
    3498:	ba 2f       	mov	r27, r26
    349a:	bc 01       	movw	r22, r24
    349c:	cd 01       	movw	r24, r26
    349e:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    34a2:	6e c0       	rjmp	.+220    	; 0x3580 <Keypad_voidComplateCalculator+0x32a>
	case '/' :   if(Local_u8Number2 !=0){
    34a4:	8c 89       	ldd	r24, Y+20	; 0x14
    34a6:	88 23       	and	r24, r24
    34a8:	09 f4       	brne	.+2      	; 0x34ac <Keypad_voidComplateCalculator+0x256>
    34aa:	66 c0       	rjmp	.+204    	; 0x3578 <Keypad_voidComplateCalculator+0x322>
		f32 Local_u32FloatNumber=((f32)Local_u8Number1 /(f32) Local_u8Number2)-(Local_u8Number1 / Local_u8Number2);
    34ac:	8d 89       	ldd	r24, Y+21	; 0x15
    34ae:	88 2f       	mov	r24, r24
    34b0:	90 e0       	ldi	r25, 0x00	; 0
    34b2:	a0 e0       	ldi	r26, 0x00	; 0
    34b4:	b0 e0       	ldi	r27, 0x00	; 0
    34b6:	bc 01       	movw	r22, r24
    34b8:	cd 01       	movw	r24, r26
    34ba:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__floatunsisf>
    34be:	7b 01       	movw	r14, r22
    34c0:	8c 01       	movw	r16, r24
    34c2:	8c 89       	ldd	r24, Y+20	; 0x14
    34c4:	88 2f       	mov	r24, r24
    34c6:	90 e0       	ldi	r25, 0x00	; 0
    34c8:	a0 e0       	ldi	r26, 0x00	; 0
    34ca:	b0 e0       	ldi	r27, 0x00	; 0
    34cc:	bc 01       	movw	r22, r24
    34ce:	cd 01       	movw	r24, r26
    34d0:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__floatunsisf>
    34d4:	9b 01       	movw	r18, r22
    34d6:	ac 01       	movw	r20, r24
    34d8:	c8 01       	movw	r24, r16
    34da:	b7 01       	movw	r22, r14
    34dc:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    34e0:	dc 01       	movw	r26, r24
    34e2:	cb 01       	movw	r24, r22
    34e4:	7c 01       	movw	r14, r24
    34e6:	8d 01       	movw	r16, r26
    34e8:	8d 89       	ldd	r24, Y+21	; 0x15
    34ea:	9c 89       	ldd	r25, Y+20	; 0x14
    34ec:	69 2f       	mov	r22, r25
    34ee:	0e 94 7f 24 	call	0x48fe	; 0x48fe <__udivmodqi4>
    34f2:	88 2f       	mov	r24, r24
    34f4:	90 e0       	ldi	r25, 0x00	; 0
    34f6:	aa 27       	eor	r26, r26
    34f8:	97 fd       	sbrc	r25, 7
    34fa:	a0 95       	com	r26
    34fc:	ba 2f       	mov	r27, r26
    34fe:	bc 01       	movw	r22, r24
    3500:	cd 01       	movw	r24, r26
    3502:	0e 94 4d 04 	call	0x89a	; 0x89a <__floatsisf>
    3506:	9b 01       	movw	r18, r22
    3508:	ac 01       	movw	r20, r24
    350a:	c8 01       	movw	r24, r16
    350c:	b7 01       	movw	r22, r14
    350e:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    3512:	dc 01       	movw	r26, r24
    3514:	cb 01       	movw	r24, r22
    3516:	8f 87       	std	Y+15, r24	; 0x0f
    3518:	98 8b       	std	Y+16, r25	; 0x10
    351a:	a9 8b       	std	Y+17, r26	; 0x11
    351c:	ba 8b       	std	Y+18, r27	; 0x12

		CLCD_voidWriteNumber(Local_u8Number1 / Local_u8Number2);
    351e:	8d 89       	ldd	r24, Y+21	; 0x15
    3520:	9c 89       	ldd	r25, Y+20	; 0x14
    3522:	69 2f       	mov	r22, r25
    3524:	0e 94 7f 24 	call	0x48fe	; 0x48fe <__udivmodqi4>
    3528:	88 2f       	mov	r24, r24
    352a:	90 e0       	ldi	r25, 0x00	; 0
    352c:	a0 e0       	ldi	r26, 0x00	; 0
    352e:	b0 e0       	ldi	r27, 0x00	; 0
    3530:	bc 01       	movw	r22, r24
    3532:	cd 01       	movw	r24, r26
    3534:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
		CLCD_voidSendData('.');
    3538:	8e e2       	ldi	r24, 0x2E	; 46
    353a:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		Local_u32FloatNumber=Local_u32FloatNumber*100;
    353e:	6f 85       	ldd	r22, Y+15	; 0x0f
    3540:	78 89       	ldd	r23, Y+16	; 0x10
    3542:	89 89       	ldd	r24, Y+17	; 0x11
    3544:	9a 89       	ldd	r25, Y+18	; 0x12
    3546:	20 e0       	ldi	r18, 0x00	; 0
    3548:	30 e0       	ldi	r19, 0x00	; 0
    354a:	48 ec       	ldi	r20, 0xC8	; 200
    354c:	52 e4       	ldi	r21, 0x42	; 66
    354e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3552:	dc 01       	movw	r26, r24
    3554:	cb 01       	movw	r24, r22
    3556:	8f 87       	std	Y+15, r24	; 0x0f
    3558:	98 8b       	std	Y+16, r25	; 0x10
    355a:	a9 8b       	std	Y+17, r26	; 0x11
    355c:	ba 8b       	std	Y+18, r27	; 0x12
		CLCD_voidWriteNumber(Local_u32FloatNumber);
    355e:	6f 85       	ldd	r22, Y+15	; 0x0f
    3560:	78 89       	ldd	r23, Y+16	; 0x10
    3562:	89 89       	ldd	r24, Y+17	; 0x11
    3564:	9a 89       	ldd	r25, Y+18	; 0x12
    3566:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    356a:	dc 01       	movw	r26, r24
    356c:	cb 01       	movw	r24, r22
    356e:	bc 01       	movw	r22, r24
    3570:	cd 01       	movw	r24, r26
    3572:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    3576:	04 c0       	rjmp	.+8      	; 0x3580 <Keypad_voidComplateCalculator+0x32a>
	}
	else{

		CLCD_voidSendString("Infinity");
    3578:	89 e6       	ldi	r24, 0x69	; 105
    357a:	90 e0       	ldi	r25, 0x00	; 0
    357c:	0e 94 37 09 	call	0x126e	; 0x126e <CLCD_voidSendString>
    3580:	80 e0       	ldi	r24, 0x00	; 0
    3582:	90 e0       	ldi	r25, 0x00	; 0
    3584:	aa ef       	ldi	r26, 0xFA	; 250
    3586:	b4 e4       	ldi	r27, 0x44	; 68
    3588:	8b 87       	std	Y+11, r24	; 0x0b
    358a:	9c 87       	std	Y+12, r25	; 0x0c
    358c:	ad 87       	std	Y+13, r26	; 0x0d
    358e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3590:	6b 85       	ldd	r22, Y+11	; 0x0b
    3592:	7c 85       	ldd	r23, Y+12	; 0x0c
    3594:	8d 85       	ldd	r24, Y+13	; 0x0d
    3596:	9e 85       	ldd	r25, Y+14	; 0x0e
    3598:	20 e0       	ldi	r18, 0x00	; 0
    359a:	30 e0       	ldi	r19, 0x00	; 0
    359c:	4a ef       	ldi	r20, 0xFA	; 250
    359e:	54 e4       	ldi	r21, 0x44	; 68
    35a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35a4:	dc 01       	movw	r26, r24
    35a6:	cb 01       	movw	r24, r22
    35a8:	8f 83       	std	Y+7, r24	; 0x07
    35aa:	98 87       	std	Y+8, r25	; 0x08
    35ac:	a9 87       	std	Y+9, r26	; 0x09
    35ae:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    35b0:	6f 81       	ldd	r22, Y+7	; 0x07
    35b2:	78 85       	ldd	r23, Y+8	; 0x08
    35b4:	89 85       	ldd	r24, Y+9	; 0x09
    35b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    35b8:	20 e0       	ldi	r18, 0x00	; 0
    35ba:	30 e0       	ldi	r19, 0x00	; 0
    35bc:	40 e8       	ldi	r20, 0x80	; 128
    35be:	5f e3       	ldi	r21, 0x3F	; 63
    35c0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    35c4:	88 23       	and	r24, r24
    35c6:	2c f4       	brge	.+10     	; 0x35d2 <Keypad_voidComplateCalculator+0x37c>
		__ticks = 1;
    35c8:	81 e0       	ldi	r24, 0x01	; 1
    35ca:	90 e0       	ldi	r25, 0x00	; 0
    35cc:	9e 83       	std	Y+6, r25	; 0x06
    35ce:	8d 83       	std	Y+5, r24	; 0x05
    35d0:	3f c0       	rjmp	.+126    	; 0x3650 <Keypad_voidComplateCalculator+0x3fa>
	else if (__tmp > 65535)
    35d2:	6f 81       	ldd	r22, Y+7	; 0x07
    35d4:	78 85       	ldd	r23, Y+8	; 0x08
    35d6:	89 85       	ldd	r24, Y+9	; 0x09
    35d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    35da:	20 e0       	ldi	r18, 0x00	; 0
    35dc:	3f ef       	ldi	r19, 0xFF	; 255
    35de:	4f e7       	ldi	r20, 0x7F	; 127
    35e0:	57 e4       	ldi	r21, 0x47	; 71
    35e2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    35e6:	18 16       	cp	r1, r24
    35e8:	4c f5       	brge	.+82     	; 0x363c <Keypad_voidComplateCalculator+0x3e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35ea:	6b 85       	ldd	r22, Y+11	; 0x0b
    35ec:	7c 85       	ldd	r23, Y+12	; 0x0c
    35ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    35f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    35f2:	20 e0       	ldi	r18, 0x00	; 0
    35f4:	30 e0       	ldi	r19, 0x00	; 0
    35f6:	40 e2       	ldi	r20, 0x20	; 32
    35f8:	51 e4       	ldi	r21, 0x41	; 65
    35fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35fe:	dc 01       	movw	r26, r24
    3600:	cb 01       	movw	r24, r22
    3602:	bc 01       	movw	r22, r24
    3604:	cd 01       	movw	r24, r26
    3606:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    360a:	dc 01       	movw	r26, r24
    360c:	cb 01       	movw	r24, r22
    360e:	9e 83       	std	Y+6, r25	; 0x06
    3610:	8d 83       	std	Y+5, r24	; 0x05
    3612:	0f c0       	rjmp	.+30     	; 0x3632 <Keypad_voidComplateCalculator+0x3dc>
    3614:	88 ec       	ldi	r24, 0xC8	; 200
    3616:	90 e0       	ldi	r25, 0x00	; 0
    3618:	9c 83       	std	Y+4, r25	; 0x04
    361a:	8b 83       	std	Y+3, r24	; 0x03
    361c:	8b 81       	ldd	r24, Y+3	; 0x03
    361e:	9c 81       	ldd	r25, Y+4	; 0x04
    3620:	01 97       	sbiw	r24, 0x01	; 1
    3622:	f1 f7       	brne	.-4      	; 0x3620 <Keypad_voidComplateCalculator+0x3ca>
    3624:	9c 83       	std	Y+4, r25	; 0x04
    3626:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3628:	8d 81       	ldd	r24, Y+5	; 0x05
    362a:	9e 81       	ldd	r25, Y+6	; 0x06
    362c:	01 97       	sbiw	r24, 0x01	; 1
    362e:	9e 83       	std	Y+6, r25	; 0x06
    3630:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3632:	8d 81       	ldd	r24, Y+5	; 0x05
    3634:	9e 81       	ldd	r25, Y+6	; 0x06
    3636:	00 97       	sbiw	r24, 0x00	; 0
    3638:	69 f7       	brne	.-38     	; 0x3614 <Keypad_voidComplateCalculator+0x3be>
    363a:	14 c0       	rjmp	.+40     	; 0x3664 <Keypad_voidComplateCalculator+0x40e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    363c:	6f 81       	ldd	r22, Y+7	; 0x07
    363e:	78 85       	ldd	r23, Y+8	; 0x08
    3640:	89 85       	ldd	r24, Y+9	; 0x09
    3642:	9a 85       	ldd	r25, Y+10	; 0x0a
    3644:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3648:	dc 01       	movw	r26, r24
    364a:	cb 01       	movw	r24, r22
    364c:	9e 83       	std	Y+6, r25	; 0x06
    364e:	8d 83       	std	Y+5, r24	; 0x05
    3650:	8d 81       	ldd	r24, Y+5	; 0x05
    3652:	9e 81       	ldd	r25, Y+6	; 0x06
    3654:	9a 83       	std	Y+2, r25	; 0x02
    3656:	89 83       	std	Y+1, r24	; 0x01
    3658:	89 81       	ldd	r24, Y+1	; 0x01
    365a:	9a 81       	ldd	r25, Y+2	; 0x02
    365c:	01 97       	sbiw	r24, 0x01	; 1
    365e:	f1 f7       	brne	.-4      	; 0x365c <Keypad_voidComplateCalculator+0x406>
    3660:	9a 83       	std	Y+2, r25	; 0x02
    3662:	89 83       	std	Y+1, r24	; 0x01
	break ;


	}
	_delay_ms(2000);
	CLCD_voidSendCommend(1);
    3664:	81 e0       	ldi	r24, 0x01	; 1
    3666:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_voidSendCommend>
}
    366a:	68 96       	adiw	r28, 0x18	; 24
    366c:	0f b6       	in	r0, 0x3f	; 63
    366e:	f8 94       	cli
    3670:	de bf       	out	0x3e, r29	; 62
    3672:	0f be       	out	0x3f, r0	; 63
    3674:	cd bf       	out	0x3d, r28	; 61
    3676:	cf 91       	pop	r28
    3678:	df 91       	pop	r29
    367a:	1f 91       	pop	r17
    367c:	0f 91       	pop	r16
    367e:	ff 90       	pop	r15
    3680:	ef 90       	pop	r14
    3682:	08 95       	ret

00003684 <Keypad_voidTimer>:

void Keypad_voidTimer()
{
    3684:	0f 93       	push	r16
    3686:	1f 93       	push	r17
    3688:	df 93       	push	r29
    368a:	cf 93       	push	r28
    368c:	cd b7       	in	r28, 0x3d	; 61
    368e:	de b7       	in	r29, 0x3e	; 62
    3690:	cc 58       	subi	r28, 0x8C	; 140
    3692:	d0 40       	sbci	r29, 0x00	; 0
    3694:	0f b6       	in	r0, 0x3f	; 63
    3696:	f8 94       	cli
    3698:	de bf       	out	0x3e, r29	; 62
    369a:	0f be       	out	0x3f, r0	; 63
    369c:	cd bf       	out	0x3d, r28	; 61
	u8 Local_u8Number=0xff;
    369e:	fe 01       	movw	r30, r28
    36a0:	e3 5a       	subi	r30, 0xA3	; 163
    36a2:	ff 4f       	sbci	r31, 0xFF	; 255
    36a4:	8f ef       	ldi	r24, 0xFF	; 255
    36a6:	80 83       	st	Z, r24
	u8 Local_u8Number1=0xff;
    36a8:	fe 01       	movw	r30, r28
    36aa:	e4 5a       	subi	r30, 0xA4	; 164
    36ac:	ff 4f       	sbci	r31, 0xFF	; 255
    36ae:	8f ef       	ldi	r24, 0xFF	; 255
    36b0:	80 83       	st	Z, r24
	u8 Local_u8Number2=0xff;
    36b2:	fe 01       	movw	r30, r28
    36b4:	e5 5a       	subi	r30, 0xA5	; 165
    36b6:	ff 4f       	sbci	r31, 0xFF	; 255
    36b8:	8f ef       	ldi	r24, 0xFF	; 255
    36ba:	80 83       	st	Z, r24
	u8 Local_u8Number3=0xff;
    36bc:	fe 01       	movw	r30, r28
    36be:	e6 5a       	subi	r30, 0xA6	; 166
    36c0:	ff 4f       	sbci	r31, 0xFF	; 255
    36c2:	8f ef       	ldi	r24, 0xFF	; 255
    36c4:	80 83       	st	Z, r24
	u8 Local_u8Number4=0xff;
    36c6:	fe 01       	movw	r30, r28
    36c8:	e7 5a       	subi	r30, 0xA7	; 167
    36ca:	ff 4f       	sbci	r31, 0xFF	; 255
    36cc:	8f ef       	ldi	r24, 0xFF	; 255
    36ce:	80 83       	st	Z, r24
	u8 Local_u8Number5=0xff;
    36d0:	fe 01       	movw	r30, r28
    36d2:	e8 5a       	subi	r30, 0xA8	; 168
    36d4:	ff 4f       	sbci	r31, 0xFF	; 255
    36d6:	8f ef       	ldi	r24, 0xFF	; 255
    36d8:	80 83       	st	Z, r24
	u8 Local_u8Number6=0xff;
    36da:	fe 01       	movw	r30, r28
    36dc:	e9 5a       	subi	r30, 0xA9	; 169
    36de:	ff 4f       	sbci	r31, 0xFF	; 255
    36e0:	8f ef       	ldi	r24, 0xFF	; 255
    36e2:	80 83       	st	Z, r24
	u8 Local_u8Minite;
	u8 Local_u8Second;
	u8 Local_u8Initial;
	u8 Local_u8Initial2;
	u8 Local_u8Initial3;
	u8 Local_u8XPos=0;
    36e4:	fe 01       	movw	r30, r28
    36e6:	e0 5b       	subi	r30, 0xB0	; 176
    36e8:	ff 4f       	sbci	r31, 0xFF	; 255
    36ea:	10 82       	st	Z, r1
	u8 Local_u8YPos=0;
    36ec:	fe 01       	movw	r30, r28
    36ee:	e1 5b       	subi	r30, 0xB1	; 177
    36f0:	ff 4f       	sbci	r31, 0xFF	; 255
    36f2:	10 82       	st	Z, r1
	u8 Local_u8n4;
	u8 Local_u8n5;
	u8 Local_u8n6;
	u8 Local_u8i;
	u8 Local_u8j;
	u8 Local_u8Pattern[8]={0b00000100,0b00000100,0b00001110,0b00010101,0b00010101,0b00000100,0b00000100,0};
    36f4:	ce 01       	movw	r24, r28
    36f6:	82 5a       	subi	r24, 0xA2	; 162
    36f8:	9f 4f       	sbci	r25, 0xFF	; 255
    36fa:	c2 58       	subi	r28, 0x82	; 130
    36fc:	df 4f       	sbci	r29, 0xFF	; 255
    36fe:	99 83       	std	Y+1, r25	; 0x01
    3700:	88 83       	st	Y, r24
    3702:	ce 57       	subi	r28, 0x7E	; 126
    3704:	d0 40       	sbci	r29, 0x00	; 0
    3706:	8b ea       	ldi	r24, 0xAB	; 171
    3708:	91 e0       	ldi	r25, 0x01	; 1
    370a:	c0 58       	subi	r28, 0x80	; 128
    370c:	df 4f       	sbci	r29, 0xFF	; 255
    370e:	99 83       	std	Y+1, r25	; 0x01
    3710:	88 83       	st	Y, r24
    3712:	c0 58       	subi	r28, 0x80	; 128
    3714:	d0 40       	sbci	r29, 0x00	; 0
    3716:	98 e0       	ldi	r25, 0x08	; 8
    3718:	ce 57       	subi	r28, 0x7E	; 126
    371a:	df 4f       	sbci	r29, 0xFF	; 255
    371c:	98 83       	st	Y, r25
    371e:	c2 58       	subi	r28, 0x82	; 130
    3720:	d0 40       	sbci	r29, 0x00	; 0
    3722:	c0 58       	subi	r28, 0x80	; 128
    3724:	df 4f       	sbci	r29, 0xFF	; 255
    3726:	a8 81       	ld	r26, Y
    3728:	b9 81       	ldd	r27, Y+1	; 0x01
    372a:	c0 58       	subi	r28, 0x80	; 128
    372c:	d0 40       	sbci	r29, 0x00	; 0
    372e:	0c 90       	ld	r0, X
    3730:	c0 58       	subi	r28, 0x80	; 128
    3732:	df 4f       	sbci	r29, 0xFF	; 255
    3734:	e8 81       	ld	r30, Y
    3736:	f9 81       	ldd	r31, Y+1	; 0x01
    3738:	c0 58       	subi	r28, 0x80	; 128
    373a:	d0 40       	sbci	r29, 0x00	; 0
    373c:	31 96       	adiw	r30, 0x01	; 1
    373e:	c0 58       	subi	r28, 0x80	; 128
    3740:	df 4f       	sbci	r29, 0xFF	; 255
    3742:	f9 83       	std	Y+1, r31	; 0x01
    3744:	e8 83       	st	Y, r30
    3746:	c0 58       	subi	r28, 0x80	; 128
    3748:	d0 40       	sbci	r29, 0x00	; 0
    374a:	c2 58       	subi	r28, 0x82	; 130
    374c:	df 4f       	sbci	r29, 0xFF	; 255
    374e:	a8 81       	ld	r26, Y
    3750:	b9 81       	ldd	r27, Y+1	; 0x01
    3752:	ce 57       	subi	r28, 0x7E	; 126
    3754:	d0 40       	sbci	r29, 0x00	; 0
    3756:	0c 92       	st	X, r0
    3758:	c2 58       	subi	r28, 0x82	; 130
    375a:	df 4f       	sbci	r29, 0xFF	; 255
    375c:	e8 81       	ld	r30, Y
    375e:	f9 81       	ldd	r31, Y+1	; 0x01
    3760:	ce 57       	subi	r28, 0x7E	; 126
    3762:	d0 40       	sbci	r29, 0x00	; 0
    3764:	31 96       	adiw	r30, 0x01	; 1
    3766:	c2 58       	subi	r28, 0x82	; 130
    3768:	df 4f       	sbci	r29, 0xFF	; 255
    376a:	f9 83       	std	Y+1, r31	; 0x01
    376c:	e8 83       	st	Y, r30
    376e:	ce 57       	subi	r28, 0x7E	; 126
    3770:	d0 40       	sbci	r29, 0x00	; 0
    3772:	ce 57       	subi	r28, 0x7E	; 126
    3774:	df 4f       	sbci	r29, 0xFF	; 255
    3776:	f8 81       	ld	r31, Y
    3778:	c2 58       	subi	r28, 0x82	; 130
    377a:	d0 40       	sbci	r29, 0x00	; 0
    377c:	f1 50       	subi	r31, 0x01	; 1
    377e:	ce 57       	subi	r28, 0x7E	; 126
    3780:	df 4f       	sbci	r29, 0xFF	; 255
    3782:	f8 83       	st	Y, r31
    3784:	c2 58       	subi	r28, 0x82	; 130
    3786:	d0 40       	sbci	r29, 0x00	; 0
    3788:	ce 57       	subi	r28, 0x7E	; 126
    378a:	df 4f       	sbci	r29, 0xFF	; 255
    378c:	88 81       	ld	r24, Y
    378e:	c2 58       	subi	r28, 0x82	; 130
    3790:	d0 40       	sbci	r29, 0x00	; 0
    3792:	88 23       	and	r24, r24
    3794:	31 f6       	brne	.-116    	; 0x3722 <Keypad_voidTimer+0x9e>
		u8 Local_u8Pattern1[8]={0};
    3796:	ce 01       	movw	r24, r28
    3798:	8a 59       	subi	r24, 0x9A	; 154
    379a:	9f 4f       	sbci	r25, 0xFF	; 255
    379c:	28 e0       	ldi	r18, 0x08	; 8
    379e:	fc 01       	movw	r30, r24
    37a0:	df 01       	movw	r26, r30
    37a2:	82 2f       	mov	r24, r18
    37a4:	1d 92       	st	X+, r1
    37a6:	8a 95       	dec	r24
    37a8:	e9 f7       	brne	.-6      	; 0x37a4 <Keypad_voidTimer+0x120>
		u8 Local_u8Hamoksha_UP[8]={0,0b00000100,0b00001010,0b00000100,0b00000100,0b00001110,0b00000100,0};
    37aa:	ce 01       	movw	r24, r28
    37ac:	82 59       	subi	r24, 0x92	; 146
    37ae:	9f 4f       	sbci	r25, 0xFF	; 255
    37b0:	cd 57       	subi	r28, 0x7D	; 125
    37b2:	df 4f       	sbci	r29, 0xFF	; 255
    37b4:	99 83       	std	Y+1, r25	; 0x01
    37b6:	88 83       	st	Y, r24
    37b8:	c3 58       	subi	r28, 0x83	; 131
    37ba:	d0 40       	sbci	r29, 0x00	; 0
    37bc:	a3 ea       	ldi	r26, 0xA3	; 163
    37be:	b1 e0       	ldi	r27, 0x01	; 1
    37c0:	cb 57       	subi	r28, 0x7B	; 123
    37c2:	df 4f       	sbci	r29, 0xFF	; 255
    37c4:	b9 83       	std	Y+1, r27	; 0x01
    37c6:	a8 83       	st	Y, r26
    37c8:	c5 58       	subi	r28, 0x85	; 133
    37ca:	d0 40       	sbci	r29, 0x00	; 0
    37cc:	b8 e0       	ldi	r27, 0x08	; 8
    37ce:	c9 57       	subi	r28, 0x79	; 121
    37d0:	df 4f       	sbci	r29, 0xFF	; 255
    37d2:	b8 83       	st	Y, r27
    37d4:	c7 58       	subi	r28, 0x87	; 135
    37d6:	d0 40       	sbci	r29, 0x00	; 0
    37d8:	cb 57       	subi	r28, 0x7B	; 123
    37da:	df 4f       	sbci	r29, 0xFF	; 255
    37dc:	e8 81       	ld	r30, Y
    37de:	f9 81       	ldd	r31, Y+1	; 0x01
    37e0:	c5 58       	subi	r28, 0x85	; 133
    37e2:	d0 40       	sbci	r29, 0x00	; 0
    37e4:	00 80       	ld	r0, Z
    37e6:	cb 57       	subi	r28, 0x7B	; 123
    37e8:	df 4f       	sbci	r29, 0xFF	; 255
    37ea:	88 81       	ld	r24, Y
    37ec:	99 81       	ldd	r25, Y+1	; 0x01
    37ee:	c5 58       	subi	r28, 0x85	; 133
    37f0:	d0 40       	sbci	r29, 0x00	; 0
    37f2:	01 96       	adiw	r24, 0x01	; 1
    37f4:	cb 57       	subi	r28, 0x7B	; 123
    37f6:	df 4f       	sbci	r29, 0xFF	; 255
    37f8:	99 83       	std	Y+1, r25	; 0x01
    37fa:	88 83       	st	Y, r24
    37fc:	c5 58       	subi	r28, 0x85	; 133
    37fe:	d0 40       	sbci	r29, 0x00	; 0
    3800:	cd 57       	subi	r28, 0x7D	; 125
    3802:	df 4f       	sbci	r29, 0xFF	; 255
    3804:	a8 81       	ld	r26, Y
    3806:	b9 81       	ldd	r27, Y+1	; 0x01
    3808:	c3 58       	subi	r28, 0x83	; 131
    380a:	d0 40       	sbci	r29, 0x00	; 0
    380c:	0c 92       	st	X, r0
    380e:	cd 57       	subi	r28, 0x7D	; 125
    3810:	df 4f       	sbci	r29, 0xFF	; 255
    3812:	e8 81       	ld	r30, Y
    3814:	f9 81       	ldd	r31, Y+1	; 0x01
    3816:	c3 58       	subi	r28, 0x83	; 131
    3818:	d0 40       	sbci	r29, 0x00	; 0
    381a:	31 96       	adiw	r30, 0x01	; 1
    381c:	cd 57       	subi	r28, 0x7D	; 125
    381e:	df 4f       	sbci	r29, 0xFF	; 255
    3820:	f9 83       	std	Y+1, r31	; 0x01
    3822:	e8 83       	st	Y, r30
    3824:	c3 58       	subi	r28, 0x83	; 131
    3826:	d0 40       	sbci	r29, 0x00	; 0
    3828:	c9 57       	subi	r28, 0x79	; 121
    382a:	df 4f       	sbci	r29, 0xFF	; 255
    382c:	f8 81       	ld	r31, Y
    382e:	c7 58       	subi	r28, 0x87	; 135
    3830:	d0 40       	sbci	r29, 0x00	; 0
    3832:	f1 50       	subi	r31, 0x01	; 1
    3834:	c9 57       	subi	r28, 0x79	; 121
    3836:	df 4f       	sbci	r29, 0xFF	; 255
    3838:	f8 83       	st	Y, r31
    383a:	c7 58       	subi	r28, 0x87	; 135
    383c:	d0 40       	sbci	r29, 0x00	; 0
    383e:	c9 57       	subi	r28, 0x79	; 121
    3840:	df 4f       	sbci	r29, 0xFF	; 255
    3842:	88 81       	ld	r24, Y
    3844:	c7 58       	subi	r28, 0x87	; 135
    3846:	d0 40       	sbci	r29, 0x00	; 0
    3848:	88 23       	and	r24, r24
    384a:	31 f6       	brne	.-116    	; 0x37d8 <Keypad_voidTimer+0x154>
			u8 Local_u8Hamoksha_Down[8]={0b00000100,0b00000100,0b00000100,0b00000100,0b00000100,0b00001010,0b00000000,0};
    384c:	ce 01       	movw	r24, r28
    384e:	8a 58       	subi	r24, 0x8A	; 138
    3850:	9f 4f       	sbci	r25, 0xFF	; 255
    3852:	c8 57       	subi	r28, 0x78	; 120
    3854:	df 4f       	sbci	r29, 0xFF	; 255
    3856:	99 83       	std	Y+1, r25	; 0x01
    3858:	88 83       	st	Y, r24
    385a:	c8 58       	subi	r28, 0x88	; 136
    385c:	d0 40       	sbci	r29, 0x00	; 0
    385e:	ab e9       	ldi	r26, 0x9B	; 155
    3860:	b1 e0       	ldi	r27, 0x01	; 1
    3862:	c6 57       	subi	r28, 0x76	; 118
    3864:	df 4f       	sbci	r29, 0xFF	; 255
    3866:	b9 83       	std	Y+1, r27	; 0x01
    3868:	a8 83       	st	Y, r26
    386a:	ca 58       	subi	r28, 0x8A	; 138
    386c:	d0 40       	sbci	r29, 0x00	; 0
    386e:	b8 e0       	ldi	r27, 0x08	; 8
    3870:	c4 57       	subi	r28, 0x74	; 116
    3872:	df 4f       	sbci	r29, 0xFF	; 255
    3874:	b8 83       	st	Y, r27
    3876:	cc 58       	subi	r28, 0x8C	; 140
    3878:	d0 40       	sbci	r29, 0x00	; 0
    387a:	c6 57       	subi	r28, 0x76	; 118
    387c:	df 4f       	sbci	r29, 0xFF	; 255
    387e:	e8 81       	ld	r30, Y
    3880:	f9 81       	ldd	r31, Y+1	; 0x01
    3882:	ca 58       	subi	r28, 0x8A	; 138
    3884:	d0 40       	sbci	r29, 0x00	; 0
    3886:	00 80       	ld	r0, Z
    3888:	c6 57       	subi	r28, 0x76	; 118
    388a:	df 4f       	sbci	r29, 0xFF	; 255
    388c:	88 81       	ld	r24, Y
    388e:	99 81       	ldd	r25, Y+1	; 0x01
    3890:	ca 58       	subi	r28, 0x8A	; 138
    3892:	d0 40       	sbci	r29, 0x00	; 0
    3894:	01 96       	adiw	r24, 0x01	; 1
    3896:	c6 57       	subi	r28, 0x76	; 118
    3898:	df 4f       	sbci	r29, 0xFF	; 255
    389a:	99 83       	std	Y+1, r25	; 0x01
    389c:	88 83       	st	Y, r24
    389e:	ca 58       	subi	r28, 0x8A	; 138
    38a0:	d0 40       	sbci	r29, 0x00	; 0
    38a2:	c8 57       	subi	r28, 0x78	; 120
    38a4:	df 4f       	sbci	r29, 0xFF	; 255
    38a6:	a8 81       	ld	r26, Y
    38a8:	b9 81       	ldd	r27, Y+1	; 0x01
    38aa:	c8 58       	subi	r28, 0x88	; 136
    38ac:	d0 40       	sbci	r29, 0x00	; 0
    38ae:	0c 92       	st	X, r0
    38b0:	c8 57       	subi	r28, 0x78	; 120
    38b2:	df 4f       	sbci	r29, 0xFF	; 255
    38b4:	e8 81       	ld	r30, Y
    38b6:	f9 81       	ldd	r31, Y+1	; 0x01
    38b8:	c8 58       	subi	r28, 0x88	; 136
    38ba:	d0 40       	sbci	r29, 0x00	; 0
    38bc:	31 96       	adiw	r30, 0x01	; 1
    38be:	c8 57       	subi	r28, 0x78	; 120
    38c0:	df 4f       	sbci	r29, 0xFF	; 255
    38c2:	f9 83       	std	Y+1, r31	; 0x01
    38c4:	e8 83       	st	Y, r30
    38c6:	c8 58       	subi	r28, 0x88	; 136
    38c8:	d0 40       	sbci	r29, 0x00	; 0
    38ca:	c4 57       	subi	r28, 0x74	; 116
    38cc:	df 4f       	sbci	r29, 0xFF	; 255
    38ce:	f8 81       	ld	r31, Y
    38d0:	cc 58       	subi	r28, 0x8C	; 140
    38d2:	d0 40       	sbci	r29, 0x00	; 0
    38d4:	f1 50       	subi	r31, 0x01	; 1
    38d6:	c4 57       	subi	r28, 0x74	; 116
    38d8:	df 4f       	sbci	r29, 0xFF	; 255
    38da:	f8 83       	st	Y, r31
    38dc:	cc 58       	subi	r28, 0x8C	; 140
    38de:	d0 40       	sbci	r29, 0x00	; 0
    38e0:	c4 57       	subi	r28, 0x74	; 116
    38e2:	df 4f       	sbci	r29, 0xFF	; 255
    38e4:	88 81       	ld	r24, Y
    38e6:	cc 58       	subi	r28, 0x8C	; 140
    38e8:	d0 40       	sbci	r29, 0x00	; 0
    38ea:	88 23       	and	r24, r24
    38ec:	31 f6       	brne	.-116    	; 0x387a <Keypad_voidTimer+0x1f6>

	CLCD_voidSendData('0');
    38ee:	80 e3       	ldi	r24, 0x30	; 48
    38f0:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
	CLCD_voidSendData('0');
    38f4:	80 e3       	ldi	r24, 0x30	; 48
    38f6:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
	CLCD_voidSendData(':');
    38fa:	8a e3       	ldi	r24, 0x3A	; 58
    38fc:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
	CLCD_voidSendData('0');
    3900:	80 e3       	ldi	r24, 0x30	; 48
    3902:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
	CLCD_voidSendData('0');
    3906:	80 e3       	ldi	r24, 0x30	; 48
    3908:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
	CLCD_voidSendData(':');
    390c:	8a e3       	ldi	r24, 0x3A	; 58
    390e:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
	CLCD_voidSendData('0');
    3912:	80 e3       	ldi	r24, 0x30	; 48
    3914:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
	CLCD_voidSendData('0');
    3918:	80 e3       	ldi	r24, 0x30	; 48
    391a:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
    391e:	74 c0       	rjmp	.+232    	; 0x3a08 <Keypad_voidTimer+0x384>
	{


	while(Local_u8XPos==0)
	{
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,0,1);
    3920:	ce 01       	movw	r24, r28
    3922:	82 5a       	subi	r24, 0xA2	; 162
    3924:	9f 4f       	sbci	r25, 0xFF	; 255
    3926:	60 e0       	ldi	r22, 0x00	; 0
    3928:	40 e0       	ldi	r20, 0x00	; 0
    392a:	21 e0       	ldi	r18, 0x01	; 1
    392c:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
    3930:	fe 01       	movw	r30, r28
    3932:	e0 5b       	subi	r30, 0xB0	; 176
    3934:	ff 4f       	sbci	r31, 0xFF	; 255
    3936:	de 01       	movw	r26, r28
    3938:	a1 5b       	subi	r26, 0xB1	; 177
    393a:	bf 4f       	sbci	r27, 0xFF	; 255
    393c:	80 81       	ld	r24, Z
    393e:	6c 91       	ld	r22, X
    3940:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		CLCD_voidSendData(Local_u8Number1+'0');
    3944:	fe 01       	movw	r30, r28
    3946:	e4 5a       	subi	r30, 0xA4	; 164
    3948:	ff 4f       	sbci	r31, 0xFF	; 255
    394a:	80 81       	ld	r24, Z
    394c:	80 5d       	subi	r24, 0xD0	; 208
    394e:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		Local_u8n1=	Local_u8Number1;
    3952:	de 01       	movw	r26, r28
    3954:	a2 5b       	subi	r26, 0xB2	; 178
    3956:	bf 4f       	sbci	r27, 0xFF	; 255
    3958:	fe 01       	movw	r30, r28
    395a:	e4 5a       	subi	r30, 0xA4	; 164
    395c:	ff 4f       	sbci	r31, 0xFF	; 255
    395e:	80 81       	ld	r24, Z
    3960:	8c 93       	st	X, r24
		Local_u8Number1=KPD_U8GetPressedKey();
    3962:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3966:	fe 01       	movw	r30, r28
    3968:	e4 5a       	subi	r30, 0xA4	; 164
    396a:	ff 4f       	sbci	r31, 0xFF	; 255
    396c:	80 83       	st	Z, r24
    396e:	06 c0       	rjmp	.+12     	; 0x397c <Keypad_voidTimer+0x2f8>
		while (Local_u8Number1==0xff)
		{

			Local_u8Number1=KPD_U8GetPressedKey();
    3970:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3974:	fe 01       	movw	r30, r28
    3976:	e4 5a       	subi	r30, 0xA4	; 164
    3978:	ff 4f       	sbci	r31, 0xFF	; 255
    397a:	80 83       	st	Z, r24
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,0,1);
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
		CLCD_voidSendData(Local_u8Number1+'0');
		Local_u8n1=	Local_u8Number1;
		Local_u8Number1=KPD_U8GetPressedKey();
		while (Local_u8Number1==0xff)
    397c:	fe 01       	movw	r30, r28
    397e:	e4 5a       	subi	r30, 0xA4	; 164
    3980:	ff 4f       	sbci	r31, 0xFF	; 255
    3982:	80 81       	ld	r24, Z
    3984:	8f 3f       	cpi	r24, 0xFF	; 255
    3986:	a1 f3       	breq	.-24     	; 0x3970 <Keypad_voidTimer+0x2ec>
		{

			Local_u8Number1=KPD_U8GetPressedKey();
		}
		if(Local_u8Number1=='+')
    3988:	fe 01       	movw	r30, r28
    398a:	e4 5a       	subi	r30, 0xA4	; 164
    398c:	ff 4f       	sbci	r31, 0xFF	; 255
    398e:	80 81       	ld	r24, Z
    3990:	8b 32       	cpi	r24, 0x2B	; 43
    3992:	71 f4       	brne	.+28     	; 0x39b0 <Keypad_voidTimer+0x32c>
		{

			Local_u8XPos=1;
    3994:	fe 01       	movw	r30, r28
    3996:	e0 5b       	subi	r30, 0xB0	; 176
    3998:	ff 4f       	sbci	r31, 0xFF	; 255
    399a:	81 e0       	ldi	r24, 0x01	; 1
    399c:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,0,1);
    399e:	ce 01       	movw	r24, r28
    39a0:	8a 59       	subi	r24, 0x9A	; 154
    39a2:	9f 4f       	sbci	r25, 0xFF	; 255
    39a4:	61 e0       	ldi	r22, 0x01	; 1
    39a6:	40 e0       	ldi	r20, 0x00	; 0
    39a8:	21 e0       	ldi	r18, 0x01	; 1
    39aa:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    39ae:	2c c0       	rjmp	.+88     	; 0x3a08 <Keypad_voidTimer+0x384>
		}
		else if(Local_u8Number1=='-')
    39b0:	fe 01       	movw	r30, r28
    39b2:	e4 5a       	subi	r30, 0xA4	; 164
    39b4:	ff 4f       	sbci	r31, 0xFF	; 255
    39b6:	80 81       	ld	r24, Z
    39b8:	8d 32       	cpi	r24, 0x2D	; 45
    39ba:	71 f4       	brne	.+28     	; 0x39d8 <Keypad_voidTimer+0x354>
		{
			Local_u8XPos=7;
    39bc:	fe 01       	movw	r30, r28
    39be:	e0 5b       	subi	r30, 0xB0	; 176
    39c0:	ff 4f       	sbci	r31, 0xFF	; 255
    39c2:	87 e0       	ldi	r24, 0x07	; 7
    39c4:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,0,1);
    39c6:	ce 01       	movw	r24, r28
    39c8:	8a 59       	subi	r24, 0x9A	; 154
    39ca:	9f 4f       	sbci	r25, 0xFF	; 255
    39cc:	61 e0       	ldi	r22, 0x01	; 1
    39ce:	40 e0       	ldi	r20, 0x00	; 0
    39d0:	21 e0       	ldi	r18, 0x01	; 1
    39d2:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    39d6:	18 c0       	rjmp	.+48     	; 0x3a08 <Keypad_voidTimer+0x384>
		}
		else if(Local_u8Number1=='=')
    39d8:	fe 01       	movw	r30, r28
    39da:	e4 5a       	subi	r30, 0xA4	; 164
    39dc:	ff 4f       	sbci	r31, 0xFF	; 255
    39de:	80 81       	ld	r24, Z
    39e0:	8d 33       	cpi	r24, 0x3D	; 61
    39e2:	91 f4       	brne	.+36     	; 0x3a08 <Keypad_voidTimer+0x384>
		{
			Local_u8XPos=10;
    39e4:	fe 01       	movw	r30, r28
    39e6:	e0 5b       	subi	r30, 0xB0	; 176
    39e8:	ff 4f       	sbci	r31, 0xFF	; 255
    39ea:	8a e0       	ldi	r24, 0x0A	; 10
    39ec:	80 83       	st	Z, r24
			Local_u8Number='=';
    39ee:	fe 01       	movw	r30, r28
    39f0:	e3 5a       	subi	r30, 0xA3	; 163
    39f2:	ff 4f       	sbci	r31, 0xFF	; 255
    39f4:	8d e3       	ldi	r24, 0x3D	; 61
    39f6:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,0,1);
    39f8:	ce 01       	movw	r24, r28
    39fa:	8a 59       	subi	r24, 0x9A	; 154
    39fc:	9f 4f       	sbci	r25, 0xFF	; 255
    39fe:	61 e0       	ldi	r22, 0x01	; 1
    3a00:	40 e0       	ldi	r20, 0x00	; 0
    3a02:	21 e0       	ldi	r18, 0x01	; 1
    3a04:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
	CLCD_voidSendData('0');
	while (1)
	{


	while(Local_u8XPos==0)
    3a08:	fe 01       	movw	r30, r28
    3a0a:	e0 5b       	subi	r30, 0xB0	; 176
    3a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a0e:	80 81       	ld	r24, Z
    3a10:	88 23       	and	r24, r24
    3a12:	09 f4       	brne	.+2      	; 0x3a16 <Keypad_voidTimer+0x392>
    3a14:	85 cf       	rjmp	.-246    	; 0x3920 <Keypad_voidTimer+0x29c>
    3a16:	73 c0       	rjmp	.+230    	; 0x3afe <Keypad_voidTimer+0x47a>
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,0,1);
		}
	}
	while(Local_u8XPos==1)
	{
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,1,1);
    3a18:	ce 01       	movw	r24, r28
    3a1a:	82 5a       	subi	r24, 0xA2	; 162
    3a1c:	9f 4f       	sbci	r25, 0xFF	; 255
    3a1e:	60 e0       	ldi	r22, 0x00	; 0
    3a20:	41 e0       	ldi	r20, 0x01	; 1
    3a22:	21 e0       	ldi	r18, 0x01	; 1
    3a24:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
    3a28:	fe 01       	movw	r30, r28
    3a2a:	e0 5b       	subi	r30, 0xB0	; 176
    3a2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a2e:	de 01       	movw	r26, r28
    3a30:	a1 5b       	subi	r26, 0xB1	; 177
    3a32:	bf 4f       	sbci	r27, 0xFF	; 255
    3a34:	80 81       	ld	r24, Z
    3a36:	6c 91       	ld	r22, X
    3a38:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		CLCD_voidSendData(Local_u8Number2+'0');
    3a3c:	fe 01       	movw	r30, r28
    3a3e:	e5 5a       	subi	r30, 0xA5	; 165
    3a40:	ff 4f       	sbci	r31, 0xFF	; 255
    3a42:	80 81       	ld	r24, Z
    3a44:	80 5d       	subi	r24, 0xD0	; 208
    3a46:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		Local_u8n2=Local_u8Number2;
    3a4a:	de 01       	movw	r26, r28
    3a4c:	a3 5b       	subi	r26, 0xB3	; 179
    3a4e:	bf 4f       	sbci	r27, 0xFF	; 255
    3a50:	fe 01       	movw	r30, r28
    3a52:	e5 5a       	subi	r30, 0xA5	; 165
    3a54:	ff 4f       	sbci	r31, 0xFF	; 255
    3a56:	80 81       	ld	r24, Z
    3a58:	8c 93       	st	X, r24
		Local_u8Number2=KPD_U8GetPressedKey();
    3a5a:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3a5e:	fe 01       	movw	r30, r28
    3a60:	e5 5a       	subi	r30, 0xA5	; 165
    3a62:	ff 4f       	sbci	r31, 0xFF	; 255
    3a64:	80 83       	st	Z, r24
    3a66:	06 c0       	rjmp	.+12     	; 0x3a74 <Keypad_voidTimer+0x3f0>
		while (Local_u8Number2==0xff)
		{
			Local_u8Number2=KPD_U8GetPressedKey();
    3a68:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3a6c:	fe 01       	movw	r30, r28
    3a6e:	e5 5a       	subi	r30, 0xA5	; 165
    3a70:	ff 4f       	sbci	r31, 0xFF	; 255
    3a72:	80 83       	st	Z, r24
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,1,1);
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
		CLCD_voidSendData(Local_u8Number2+'0');
		Local_u8n2=Local_u8Number2;
		Local_u8Number2=KPD_U8GetPressedKey();
		while (Local_u8Number2==0xff)
    3a74:	fe 01       	movw	r30, r28
    3a76:	e5 5a       	subi	r30, 0xA5	; 165
    3a78:	ff 4f       	sbci	r31, 0xFF	; 255
    3a7a:	80 81       	ld	r24, Z
    3a7c:	8f 3f       	cpi	r24, 0xFF	; 255
    3a7e:	a1 f3       	breq	.-24     	; 0x3a68 <Keypad_voidTimer+0x3e4>
		{
			Local_u8Number2=KPD_U8GetPressedKey();
		}
		if(Local_u8Number2=='+')
    3a80:	fe 01       	movw	r30, r28
    3a82:	e5 5a       	subi	r30, 0xA5	; 165
    3a84:	ff 4f       	sbci	r31, 0xFF	; 255
    3a86:	80 81       	ld	r24, Z
    3a88:	8b 32       	cpi	r24, 0x2B	; 43
    3a8a:	71 f4       	brne	.+28     	; 0x3aa8 <Keypad_voidTimer+0x424>
		{

			Local_u8XPos=3;
    3a8c:	fe 01       	movw	r30, r28
    3a8e:	e0 5b       	subi	r30, 0xB0	; 176
    3a90:	ff 4f       	sbci	r31, 0xFF	; 255
    3a92:	83 e0       	ldi	r24, 0x03	; 3
    3a94:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,1,1);
    3a96:	ce 01       	movw	r24, r28
    3a98:	8a 59       	subi	r24, 0x9A	; 154
    3a9a:	9f 4f       	sbci	r25, 0xFF	; 255
    3a9c:	61 e0       	ldi	r22, 0x01	; 1
    3a9e:	41 e0       	ldi	r20, 0x01	; 1
    3aa0:	21 e0       	ldi	r18, 0x01	; 1
    3aa2:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    3aa6:	2b c0       	rjmp	.+86     	; 0x3afe <Keypad_voidTimer+0x47a>
		}
		else if(Local_u8Number2=='-')
    3aa8:	fe 01       	movw	r30, r28
    3aaa:	e5 5a       	subi	r30, 0xA5	; 165
    3aac:	ff 4f       	sbci	r31, 0xFF	; 255
    3aae:	80 81       	ld	r24, Z
    3ab0:	8d 32       	cpi	r24, 0x2D	; 45
    3ab2:	69 f4       	brne	.+26     	; 0x3ace <Keypad_voidTimer+0x44a>
		{
			Local_u8XPos=0;
    3ab4:	fe 01       	movw	r30, r28
    3ab6:	e0 5b       	subi	r30, 0xB0	; 176
    3ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    3aba:	10 82       	st	Z, r1
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,1,1);
    3abc:	ce 01       	movw	r24, r28
    3abe:	8a 59       	subi	r24, 0x9A	; 154
    3ac0:	9f 4f       	sbci	r25, 0xFF	; 255
    3ac2:	61 e0       	ldi	r22, 0x01	; 1
    3ac4:	41 e0       	ldi	r20, 0x01	; 1
    3ac6:	21 e0       	ldi	r18, 0x01	; 1
    3ac8:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    3acc:	18 c0       	rjmp	.+48     	; 0x3afe <Keypad_voidTimer+0x47a>
		}
		else if(Local_u8Number2=='=')
    3ace:	fe 01       	movw	r30, r28
    3ad0:	e5 5a       	subi	r30, 0xA5	; 165
    3ad2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ad4:	80 81       	ld	r24, Z
    3ad6:	8d 33       	cpi	r24, 0x3D	; 61
    3ad8:	91 f4       	brne	.+36     	; 0x3afe <Keypad_voidTimer+0x47a>
		{
			Local_u8XPos=10;
    3ada:	fe 01       	movw	r30, r28
    3adc:	e0 5b       	subi	r30, 0xB0	; 176
    3ade:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae0:	8a e0       	ldi	r24, 0x0A	; 10
    3ae2:	80 83       	st	Z, r24
			Local_u8Number='=';
    3ae4:	fe 01       	movw	r30, r28
    3ae6:	e3 5a       	subi	r30, 0xA3	; 163
    3ae8:	ff 4f       	sbci	r31, 0xFF	; 255
    3aea:	8d e3       	ldi	r24, 0x3D	; 61
    3aec:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,1,1);
    3aee:	ce 01       	movw	r24, r28
    3af0:	8a 59       	subi	r24, 0x9A	; 154
    3af2:	9f 4f       	sbci	r25, 0xFF	; 255
    3af4:	61 e0       	ldi	r22, 0x01	; 1
    3af6:	41 e0       	ldi	r20, 0x01	; 1
    3af8:	21 e0       	ldi	r18, 0x01	; 1
    3afa:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
			Local_u8XPos=10;
			Local_u8Number='=';
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,0,1);
		}
	}
	while(Local_u8XPos==1)
    3afe:	fe 01       	movw	r30, r28
    3b00:	e0 5b       	subi	r30, 0xB0	; 176
    3b02:	ff 4f       	sbci	r31, 0xFF	; 255
    3b04:	80 81       	ld	r24, Z
    3b06:	81 30       	cpi	r24, 0x01	; 1
    3b08:	09 f4       	brne	.+2      	; 0x3b0c <Keypad_voidTimer+0x488>
    3b0a:	86 cf       	rjmp	.-244    	; 0x3a18 <Keypad_voidTimer+0x394>
			Local_u8XPos=10;
			Local_u8Number='=';
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,1,1);
		}
	}
	CLCD_voidGoToXY(2,Local_u8YPos);
    3b0c:	fe 01       	movw	r30, r28
    3b0e:	e1 5b       	subi	r30, 0xB1	; 177
    3b10:	ff 4f       	sbci	r31, 0xFF	; 255
    3b12:	82 e0       	ldi	r24, 0x02	; 2
    3b14:	60 81       	ld	r22, Z
    3b16:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
	CLCD_voidSendData(':');
    3b1a:	8a e3       	ldi	r24, 0x3A	; 58
    3b1c:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
    3b20:	74 c0       	rjmp	.+232    	; 0x3c0a <Keypad_voidTimer+0x586>
	while(Local_u8XPos==3)
	{
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,3,1);
    3b22:	ce 01       	movw	r24, r28
    3b24:	82 5a       	subi	r24, 0xA2	; 162
    3b26:	9f 4f       	sbci	r25, 0xFF	; 255
    3b28:	60 e0       	ldi	r22, 0x00	; 0
    3b2a:	43 e0       	ldi	r20, 0x03	; 3
    3b2c:	21 e0       	ldi	r18, 0x01	; 1
    3b2e:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
    3b32:	fe 01       	movw	r30, r28
    3b34:	e0 5b       	subi	r30, 0xB0	; 176
    3b36:	ff 4f       	sbci	r31, 0xFF	; 255
    3b38:	de 01       	movw	r26, r28
    3b3a:	a1 5b       	subi	r26, 0xB1	; 177
    3b3c:	bf 4f       	sbci	r27, 0xFF	; 255
    3b3e:	80 81       	ld	r24, Z
    3b40:	6c 91       	ld	r22, X
    3b42:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		CLCD_voidSendData(Local_u8Number3+'0');
    3b46:	fe 01       	movw	r30, r28
    3b48:	e6 5a       	subi	r30, 0xA6	; 166
    3b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b4c:	80 81       	ld	r24, Z
    3b4e:	80 5d       	subi	r24, 0xD0	; 208
    3b50:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		Local_u8n3=Local_u8Number3;
    3b54:	de 01       	movw	r26, r28
    3b56:	a4 5b       	subi	r26, 0xB4	; 180
    3b58:	bf 4f       	sbci	r27, 0xFF	; 255
    3b5a:	fe 01       	movw	r30, r28
    3b5c:	e6 5a       	subi	r30, 0xA6	; 166
    3b5e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b60:	80 81       	ld	r24, Z
    3b62:	8c 93       	st	X, r24
		Local_u8Number3=KPD_U8GetPressedKey();
    3b64:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3b68:	fe 01       	movw	r30, r28
    3b6a:	e6 5a       	subi	r30, 0xA6	; 166
    3b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b6e:	80 83       	st	Z, r24
    3b70:	06 c0       	rjmp	.+12     	; 0x3b7e <Keypad_voidTimer+0x4fa>
		while (Local_u8Number3==0xff)
		{
			Local_u8Number3=KPD_U8GetPressedKey();
    3b72:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3b76:	fe 01       	movw	r30, r28
    3b78:	e6 5a       	subi	r30, 0xA6	; 166
    3b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b7c:	80 83       	st	Z, r24
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,3,1);
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
		CLCD_voidSendData(Local_u8Number3+'0');
		Local_u8n3=Local_u8Number3;
		Local_u8Number3=KPD_U8GetPressedKey();
		while (Local_u8Number3==0xff)
    3b7e:	fe 01       	movw	r30, r28
    3b80:	e6 5a       	subi	r30, 0xA6	; 166
    3b82:	ff 4f       	sbci	r31, 0xFF	; 255
    3b84:	80 81       	ld	r24, Z
    3b86:	8f 3f       	cpi	r24, 0xFF	; 255
    3b88:	a1 f3       	breq	.-24     	; 0x3b72 <Keypad_voidTimer+0x4ee>
		{
			Local_u8Number3=KPD_U8GetPressedKey();
		}
		if(Local_u8Number3=='+')
    3b8a:	fe 01       	movw	r30, r28
    3b8c:	e6 5a       	subi	r30, 0xA6	; 166
    3b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b90:	80 81       	ld	r24, Z
    3b92:	8b 32       	cpi	r24, 0x2B	; 43
    3b94:	71 f4       	brne	.+28     	; 0x3bb2 <Keypad_voidTimer+0x52e>
		{

			Local_u8XPos=4;
    3b96:	fe 01       	movw	r30, r28
    3b98:	e0 5b       	subi	r30, 0xB0	; 176
    3b9a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b9c:	84 e0       	ldi	r24, 0x04	; 4
    3b9e:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,3,1);
    3ba0:	ce 01       	movw	r24, r28
    3ba2:	8a 59       	subi	r24, 0x9A	; 154
    3ba4:	9f 4f       	sbci	r25, 0xFF	; 255
    3ba6:	61 e0       	ldi	r22, 0x01	; 1
    3ba8:	43 e0       	ldi	r20, 0x03	; 3
    3baa:	21 e0       	ldi	r18, 0x01	; 1
    3bac:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    3bb0:	2c c0       	rjmp	.+88     	; 0x3c0a <Keypad_voidTimer+0x586>
		}
		else if(Local_u8Number3=='-')
    3bb2:	fe 01       	movw	r30, r28
    3bb4:	e6 5a       	subi	r30, 0xA6	; 166
    3bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    3bb8:	80 81       	ld	r24, Z
    3bba:	8d 32       	cpi	r24, 0x2D	; 45
    3bbc:	71 f4       	brne	.+28     	; 0x3bda <Keypad_voidTimer+0x556>
		{
			Local_u8XPos=1;
    3bbe:	fe 01       	movw	r30, r28
    3bc0:	e0 5b       	subi	r30, 0xB0	; 176
    3bc2:	ff 4f       	sbci	r31, 0xFF	; 255
    3bc4:	81 e0       	ldi	r24, 0x01	; 1
    3bc6:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,3,1);
    3bc8:	ce 01       	movw	r24, r28
    3bca:	8a 59       	subi	r24, 0x9A	; 154
    3bcc:	9f 4f       	sbci	r25, 0xFF	; 255
    3bce:	61 e0       	ldi	r22, 0x01	; 1
    3bd0:	43 e0       	ldi	r20, 0x03	; 3
    3bd2:	21 e0       	ldi	r18, 0x01	; 1
    3bd4:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    3bd8:	18 c0       	rjmp	.+48     	; 0x3c0a <Keypad_voidTimer+0x586>
		}
		else if(Local_u8Number3=='=')
    3bda:	fe 01       	movw	r30, r28
    3bdc:	e6 5a       	subi	r30, 0xA6	; 166
    3bde:	ff 4f       	sbci	r31, 0xFF	; 255
    3be0:	80 81       	ld	r24, Z
    3be2:	8d 33       	cpi	r24, 0x3D	; 61
    3be4:	91 f4       	brne	.+36     	; 0x3c0a <Keypad_voidTimer+0x586>
		{
			Local_u8XPos=10;
    3be6:	fe 01       	movw	r30, r28
    3be8:	e0 5b       	subi	r30, 0xB0	; 176
    3bea:	ff 4f       	sbci	r31, 0xFF	; 255
    3bec:	8a e0       	ldi	r24, 0x0A	; 10
    3bee:	80 83       	st	Z, r24
			Local_u8Number='=';
    3bf0:	fe 01       	movw	r30, r28
    3bf2:	e3 5a       	subi	r30, 0xA3	; 163
    3bf4:	ff 4f       	sbci	r31, 0xFF	; 255
    3bf6:	8d e3       	ldi	r24, 0x3D	; 61
    3bf8:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,3,1);
    3bfa:	ce 01       	movw	r24, r28
    3bfc:	8a 59       	subi	r24, 0x9A	; 154
    3bfe:	9f 4f       	sbci	r25, 0xFF	; 255
    3c00:	61 e0       	ldi	r22, 0x01	; 1
    3c02:	43 e0       	ldi	r20, 0x03	; 3
    3c04:	21 e0       	ldi	r18, 0x01	; 1
    3c06:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,1,1);
		}
	}
	CLCD_voidGoToXY(2,Local_u8YPos);
	CLCD_voidSendData(':');
	while(Local_u8XPos==3)
    3c0a:	fe 01       	movw	r30, r28
    3c0c:	e0 5b       	subi	r30, 0xB0	; 176
    3c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c10:	80 81       	ld	r24, Z
    3c12:	83 30       	cpi	r24, 0x03	; 3
    3c14:	09 f4       	brne	.+2      	; 0x3c18 <Keypad_voidTimer+0x594>
    3c16:	85 cf       	rjmp	.-246    	; 0x3b22 <Keypad_voidTimer+0x49e>
    3c18:	74 c0       	rjmp	.+232    	; 0x3d02 <Keypad_voidTimer+0x67e>
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,3,1);
		}
	}
	while(Local_u8XPos==4)
	{
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,4,1);
    3c1a:	ce 01       	movw	r24, r28
    3c1c:	82 5a       	subi	r24, 0xA2	; 162
    3c1e:	9f 4f       	sbci	r25, 0xFF	; 255
    3c20:	60 e0       	ldi	r22, 0x00	; 0
    3c22:	44 e0       	ldi	r20, 0x04	; 4
    3c24:	21 e0       	ldi	r18, 0x01	; 1
    3c26:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
    3c2a:	fe 01       	movw	r30, r28
    3c2c:	e0 5b       	subi	r30, 0xB0	; 176
    3c2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c30:	de 01       	movw	r26, r28
    3c32:	a1 5b       	subi	r26, 0xB1	; 177
    3c34:	bf 4f       	sbci	r27, 0xFF	; 255
    3c36:	80 81       	ld	r24, Z
    3c38:	6c 91       	ld	r22, X
    3c3a:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		CLCD_voidSendData(Local_u8Number4+'0');
    3c3e:	fe 01       	movw	r30, r28
    3c40:	e7 5a       	subi	r30, 0xA7	; 167
    3c42:	ff 4f       	sbci	r31, 0xFF	; 255
    3c44:	80 81       	ld	r24, Z
    3c46:	80 5d       	subi	r24, 0xD0	; 208
    3c48:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		Local_u8n4=Local_u8Number4;
    3c4c:	de 01       	movw	r26, r28
    3c4e:	a5 5b       	subi	r26, 0xB5	; 181
    3c50:	bf 4f       	sbci	r27, 0xFF	; 255
    3c52:	fe 01       	movw	r30, r28
    3c54:	e7 5a       	subi	r30, 0xA7	; 167
    3c56:	ff 4f       	sbci	r31, 0xFF	; 255
    3c58:	80 81       	ld	r24, Z
    3c5a:	8c 93       	st	X, r24
		Local_u8Number4=KPD_U8GetPressedKey();
    3c5c:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3c60:	fe 01       	movw	r30, r28
    3c62:	e7 5a       	subi	r30, 0xA7	; 167
    3c64:	ff 4f       	sbci	r31, 0xFF	; 255
    3c66:	80 83       	st	Z, r24
    3c68:	06 c0       	rjmp	.+12     	; 0x3c76 <Keypad_voidTimer+0x5f2>
		while (Local_u8Number4==0xff)
		{
			Local_u8Number4=KPD_U8GetPressedKey();
    3c6a:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3c6e:	fe 01       	movw	r30, r28
    3c70:	e7 5a       	subi	r30, 0xA7	; 167
    3c72:	ff 4f       	sbci	r31, 0xFF	; 255
    3c74:	80 83       	st	Z, r24
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,4,1);
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
		CLCD_voidSendData(Local_u8Number4+'0');
		Local_u8n4=Local_u8Number4;
		Local_u8Number4=KPD_U8GetPressedKey();
		while (Local_u8Number4==0xff)
    3c76:	fe 01       	movw	r30, r28
    3c78:	e7 5a       	subi	r30, 0xA7	; 167
    3c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c7c:	80 81       	ld	r24, Z
    3c7e:	8f 3f       	cpi	r24, 0xFF	; 255
    3c80:	a1 f3       	breq	.-24     	; 0x3c6a <Keypad_voidTimer+0x5e6>
		{
			Local_u8Number4=KPD_U8GetPressedKey();
		}
		if(Local_u8Number4=='+')
    3c82:	fe 01       	movw	r30, r28
    3c84:	e7 5a       	subi	r30, 0xA7	; 167
    3c86:	ff 4f       	sbci	r31, 0xFF	; 255
    3c88:	80 81       	ld	r24, Z
    3c8a:	8b 32       	cpi	r24, 0x2B	; 43
    3c8c:	71 f4       	brne	.+28     	; 0x3caa <Keypad_voidTimer+0x626>
		{

			Local_u8XPos=6;
    3c8e:	fe 01       	movw	r30, r28
    3c90:	e0 5b       	subi	r30, 0xB0	; 176
    3c92:	ff 4f       	sbci	r31, 0xFF	; 255
    3c94:	86 e0       	ldi	r24, 0x06	; 6
    3c96:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,4,1);
    3c98:	ce 01       	movw	r24, r28
    3c9a:	8a 59       	subi	r24, 0x9A	; 154
    3c9c:	9f 4f       	sbci	r25, 0xFF	; 255
    3c9e:	61 e0       	ldi	r22, 0x01	; 1
    3ca0:	44 e0       	ldi	r20, 0x04	; 4
    3ca2:	21 e0       	ldi	r18, 0x01	; 1
    3ca4:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    3ca8:	2c c0       	rjmp	.+88     	; 0x3d02 <Keypad_voidTimer+0x67e>
		}
		else if(Local_u8Number4=='-')
    3caa:	fe 01       	movw	r30, r28
    3cac:	e7 5a       	subi	r30, 0xA7	; 167
    3cae:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb0:	80 81       	ld	r24, Z
    3cb2:	8d 32       	cpi	r24, 0x2D	; 45
    3cb4:	71 f4       	brne	.+28     	; 0x3cd2 <Keypad_voidTimer+0x64e>
		{
			Local_u8XPos=3;
    3cb6:	fe 01       	movw	r30, r28
    3cb8:	e0 5b       	subi	r30, 0xB0	; 176
    3cba:	ff 4f       	sbci	r31, 0xFF	; 255
    3cbc:	83 e0       	ldi	r24, 0x03	; 3
    3cbe:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,4,1);
    3cc0:	ce 01       	movw	r24, r28
    3cc2:	8a 59       	subi	r24, 0x9A	; 154
    3cc4:	9f 4f       	sbci	r25, 0xFF	; 255
    3cc6:	61 e0       	ldi	r22, 0x01	; 1
    3cc8:	44 e0       	ldi	r20, 0x04	; 4
    3cca:	21 e0       	ldi	r18, 0x01	; 1
    3ccc:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    3cd0:	18 c0       	rjmp	.+48     	; 0x3d02 <Keypad_voidTimer+0x67e>
		}
		else if(Local_u8Number4=='=')
    3cd2:	fe 01       	movw	r30, r28
    3cd4:	e7 5a       	subi	r30, 0xA7	; 167
    3cd6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd8:	80 81       	ld	r24, Z
    3cda:	8d 33       	cpi	r24, 0x3D	; 61
    3cdc:	91 f4       	brne	.+36     	; 0x3d02 <Keypad_voidTimer+0x67e>
		{
			Local_u8XPos=10;
    3cde:	fe 01       	movw	r30, r28
    3ce0:	e0 5b       	subi	r30, 0xB0	; 176
    3ce2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ce4:	8a e0       	ldi	r24, 0x0A	; 10
    3ce6:	80 83       	st	Z, r24
			Local_u8Number='=';
    3ce8:	fe 01       	movw	r30, r28
    3cea:	e3 5a       	subi	r30, 0xA3	; 163
    3cec:	ff 4f       	sbci	r31, 0xFF	; 255
    3cee:	8d e3       	ldi	r24, 0x3D	; 61
    3cf0:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,4,1);
    3cf2:	ce 01       	movw	r24, r28
    3cf4:	8a 59       	subi	r24, 0x9A	; 154
    3cf6:	9f 4f       	sbci	r25, 0xFF	; 255
    3cf8:	61 e0       	ldi	r22, 0x01	; 1
    3cfa:	44 e0       	ldi	r20, 0x04	; 4
    3cfc:	21 e0       	ldi	r18, 0x01	; 1
    3cfe:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
			Local_u8XPos=10;
			Local_u8Number='=';
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,3,1);
		}
	}
	while(Local_u8XPos==4)
    3d02:	fe 01       	movw	r30, r28
    3d04:	e0 5b       	subi	r30, 0xB0	; 176
    3d06:	ff 4f       	sbci	r31, 0xFF	; 255
    3d08:	80 81       	ld	r24, Z
    3d0a:	84 30       	cpi	r24, 0x04	; 4
    3d0c:	09 f4       	brne	.+2      	; 0x3d10 <Keypad_voidTimer+0x68c>
    3d0e:	85 cf       	rjmp	.-246    	; 0x3c1a <Keypad_voidTimer+0x596>
			Local_u8XPos=10;
			Local_u8Number='=';
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,4,1);
		}
	}
	CLCD_voidGoToXY(5,Local_u8YPos);
    3d10:	fe 01       	movw	r30, r28
    3d12:	e1 5b       	subi	r30, 0xB1	; 177
    3d14:	ff 4f       	sbci	r31, 0xFF	; 255
    3d16:	85 e0       	ldi	r24, 0x05	; 5
    3d18:	60 81       	ld	r22, Z
    3d1a:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
	CLCD_voidSendData(':');
    3d1e:	8a e3       	ldi	r24, 0x3A	; 58
    3d20:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
    3d24:	74 c0       	rjmp	.+232    	; 0x3e0e <Keypad_voidTimer+0x78a>
	while(Local_u8XPos==6)
	{
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,6,1);
    3d26:	ce 01       	movw	r24, r28
    3d28:	82 5a       	subi	r24, 0xA2	; 162
    3d2a:	9f 4f       	sbci	r25, 0xFF	; 255
    3d2c:	60 e0       	ldi	r22, 0x00	; 0
    3d2e:	46 e0       	ldi	r20, 0x06	; 6
    3d30:	21 e0       	ldi	r18, 0x01	; 1
    3d32:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
    3d36:	fe 01       	movw	r30, r28
    3d38:	e0 5b       	subi	r30, 0xB0	; 176
    3d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d3c:	de 01       	movw	r26, r28
    3d3e:	a1 5b       	subi	r26, 0xB1	; 177
    3d40:	bf 4f       	sbci	r27, 0xFF	; 255
    3d42:	80 81       	ld	r24, Z
    3d44:	6c 91       	ld	r22, X
    3d46:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		CLCD_voidSendData(Local_u8Number5+'0');
    3d4a:	fe 01       	movw	r30, r28
    3d4c:	e8 5a       	subi	r30, 0xA8	; 168
    3d4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d50:	80 81       	ld	r24, Z
    3d52:	80 5d       	subi	r24, 0xD0	; 208
    3d54:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		Local_u8n5=Local_u8Number5;
    3d58:	de 01       	movw	r26, r28
    3d5a:	a6 5b       	subi	r26, 0xB6	; 182
    3d5c:	bf 4f       	sbci	r27, 0xFF	; 255
    3d5e:	fe 01       	movw	r30, r28
    3d60:	e8 5a       	subi	r30, 0xA8	; 168
    3d62:	ff 4f       	sbci	r31, 0xFF	; 255
    3d64:	80 81       	ld	r24, Z
    3d66:	8c 93       	st	X, r24
		Local_u8Number5=KPD_U8GetPressedKey();
    3d68:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3d6c:	fe 01       	movw	r30, r28
    3d6e:	e8 5a       	subi	r30, 0xA8	; 168
    3d70:	ff 4f       	sbci	r31, 0xFF	; 255
    3d72:	80 83       	st	Z, r24
    3d74:	06 c0       	rjmp	.+12     	; 0x3d82 <Keypad_voidTimer+0x6fe>
		while (Local_u8Number5==0xff)
		{
			Local_u8Number5=KPD_U8GetPressedKey();
    3d76:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3d7a:	fe 01       	movw	r30, r28
    3d7c:	e8 5a       	subi	r30, 0xA8	; 168
    3d7e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d80:	80 83       	st	Z, r24
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,6,1);
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
		CLCD_voidSendData(Local_u8Number5+'0');
		Local_u8n5=Local_u8Number5;
		Local_u8Number5=KPD_U8GetPressedKey();
		while (Local_u8Number5==0xff)
    3d82:	fe 01       	movw	r30, r28
    3d84:	e8 5a       	subi	r30, 0xA8	; 168
    3d86:	ff 4f       	sbci	r31, 0xFF	; 255
    3d88:	80 81       	ld	r24, Z
    3d8a:	8f 3f       	cpi	r24, 0xFF	; 255
    3d8c:	a1 f3       	breq	.-24     	; 0x3d76 <Keypad_voidTimer+0x6f2>
		{
			Local_u8Number5=KPD_U8GetPressedKey();
		}
		if(Local_u8Number5=='+')
    3d8e:	fe 01       	movw	r30, r28
    3d90:	e8 5a       	subi	r30, 0xA8	; 168
    3d92:	ff 4f       	sbci	r31, 0xFF	; 255
    3d94:	80 81       	ld	r24, Z
    3d96:	8b 32       	cpi	r24, 0x2B	; 43
    3d98:	71 f4       	brne	.+28     	; 0x3db6 <Keypad_voidTimer+0x732>
		{

			Local_u8XPos=7;
    3d9a:	fe 01       	movw	r30, r28
    3d9c:	e0 5b       	subi	r30, 0xB0	; 176
    3d9e:	ff 4f       	sbci	r31, 0xFF	; 255
    3da0:	87 e0       	ldi	r24, 0x07	; 7
    3da2:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,6,1);
    3da4:	ce 01       	movw	r24, r28
    3da6:	8a 59       	subi	r24, 0x9A	; 154
    3da8:	9f 4f       	sbci	r25, 0xFF	; 255
    3daa:	61 e0       	ldi	r22, 0x01	; 1
    3dac:	46 e0       	ldi	r20, 0x06	; 6
    3dae:	21 e0       	ldi	r18, 0x01	; 1
    3db0:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    3db4:	2c c0       	rjmp	.+88     	; 0x3e0e <Keypad_voidTimer+0x78a>
		}
		else if(Local_u8Number5=='-')
    3db6:	fe 01       	movw	r30, r28
    3db8:	e8 5a       	subi	r30, 0xA8	; 168
    3dba:	ff 4f       	sbci	r31, 0xFF	; 255
    3dbc:	80 81       	ld	r24, Z
    3dbe:	8d 32       	cpi	r24, 0x2D	; 45
    3dc0:	71 f4       	brne	.+28     	; 0x3dde <Keypad_voidTimer+0x75a>
		{
			Local_u8XPos=4;
    3dc2:	fe 01       	movw	r30, r28
    3dc4:	e0 5b       	subi	r30, 0xB0	; 176
    3dc6:	ff 4f       	sbci	r31, 0xFF	; 255
    3dc8:	84 e0       	ldi	r24, 0x04	; 4
    3dca:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,6,1);
    3dcc:	ce 01       	movw	r24, r28
    3dce:	8a 59       	subi	r24, 0x9A	; 154
    3dd0:	9f 4f       	sbci	r25, 0xFF	; 255
    3dd2:	61 e0       	ldi	r22, 0x01	; 1
    3dd4:	46 e0       	ldi	r20, 0x06	; 6
    3dd6:	21 e0       	ldi	r18, 0x01	; 1
    3dd8:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    3ddc:	18 c0       	rjmp	.+48     	; 0x3e0e <Keypad_voidTimer+0x78a>
		}
		else if(Local_u8Number5=='=')
    3dde:	fe 01       	movw	r30, r28
    3de0:	e8 5a       	subi	r30, 0xA8	; 168
    3de2:	ff 4f       	sbci	r31, 0xFF	; 255
    3de4:	80 81       	ld	r24, Z
    3de6:	8d 33       	cpi	r24, 0x3D	; 61
    3de8:	91 f4       	brne	.+36     	; 0x3e0e <Keypad_voidTimer+0x78a>
		{
			Local_u8XPos=10;
    3dea:	fe 01       	movw	r30, r28
    3dec:	e0 5b       	subi	r30, 0xB0	; 176
    3dee:	ff 4f       	sbci	r31, 0xFF	; 255
    3df0:	8a e0       	ldi	r24, 0x0A	; 10
    3df2:	80 83       	st	Z, r24
			Local_u8Number='=';
    3df4:	fe 01       	movw	r30, r28
    3df6:	e3 5a       	subi	r30, 0xA3	; 163
    3df8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dfa:	8d e3       	ldi	r24, 0x3D	; 61
    3dfc:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,6,1);
    3dfe:	ce 01       	movw	r24, r28
    3e00:	8a 59       	subi	r24, 0x9A	; 154
    3e02:	9f 4f       	sbci	r25, 0xFF	; 255
    3e04:	61 e0       	ldi	r22, 0x01	; 1
    3e06:	46 e0       	ldi	r20, 0x06	; 6
    3e08:	21 e0       	ldi	r18, 0x01	; 1
    3e0a:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,4,1);
		}
	}
	CLCD_voidGoToXY(5,Local_u8YPos);
	CLCD_voidSendData(':');
	while(Local_u8XPos==6)
    3e0e:	fe 01       	movw	r30, r28
    3e10:	e0 5b       	subi	r30, 0xB0	; 176
    3e12:	ff 4f       	sbci	r31, 0xFF	; 255
    3e14:	80 81       	ld	r24, Z
    3e16:	86 30       	cpi	r24, 0x06	; 6
    3e18:	09 f4       	brne	.+2      	; 0x3e1c <Keypad_voidTimer+0x798>
    3e1a:	85 cf       	rjmp	.-246    	; 0x3d26 <Keypad_voidTimer+0x6a2>
    3e1c:	73 c0       	rjmp	.+230    	; 0x3f04 <Keypad_voidTimer+0x880>
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,6,1);
		}
	}
	while(Local_u8XPos==7)
	{
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,7,1);
    3e1e:	ce 01       	movw	r24, r28
    3e20:	82 5a       	subi	r24, 0xA2	; 162
    3e22:	9f 4f       	sbci	r25, 0xFF	; 255
    3e24:	60 e0       	ldi	r22, 0x00	; 0
    3e26:	47 e0       	ldi	r20, 0x07	; 7
    3e28:	21 e0       	ldi	r18, 0x01	; 1
    3e2a:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
    3e2e:	fe 01       	movw	r30, r28
    3e30:	e0 5b       	subi	r30, 0xB0	; 176
    3e32:	ff 4f       	sbci	r31, 0xFF	; 255
    3e34:	de 01       	movw	r26, r28
    3e36:	a1 5b       	subi	r26, 0xB1	; 177
    3e38:	bf 4f       	sbci	r27, 0xFF	; 255
    3e3a:	80 81       	ld	r24, Z
    3e3c:	6c 91       	ld	r22, X
    3e3e:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
		CLCD_voidSendData(Local_u8Number6+'0');
    3e42:	fe 01       	movw	r30, r28
    3e44:	e9 5a       	subi	r30, 0xA9	; 169
    3e46:	ff 4f       	sbci	r31, 0xFF	; 255
    3e48:	80 81       	ld	r24, Z
    3e4a:	80 5d       	subi	r24, 0xD0	; 208
    3e4c:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
		Local_u8n6=Local_u8Number6;
    3e50:	de 01       	movw	r26, r28
    3e52:	a7 5b       	subi	r26, 0xB7	; 183
    3e54:	bf 4f       	sbci	r27, 0xFF	; 255
    3e56:	fe 01       	movw	r30, r28
    3e58:	e9 5a       	subi	r30, 0xA9	; 169
    3e5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e5c:	80 81       	ld	r24, Z
    3e5e:	8c 93       	st	X, r24
		Local_u8Number6=KPD_U8GetPressedKey();
    3e60:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3e64:	fe 01       	movw	r30, r28
    3e66:	e9 5a       	subi	r30, 0xA9	; 169
    3e68:	ff 4f       	sbci	r31, 0xFF	; 255
    3e6a:	80 83       	st	Z, r24
    3e6c:	06 c0       	rjmp	.+12     	; 0x3e7a <Keypad_voidTimer+0x7f6>
		while (Local_u8Number6==0xff)
		{
			Local_u8Number6=KPD_U8GetPressedKey();
    3e6e:	0e 94 76 18 	call	0x30ec	; 0x30ec <KPD_U8GetPressedKey>
    3e72:	fe 01       	movw	r30, r28
    3e74:	e9 5a       	subi	r30, 0xA9	; 169
    3e76:	ff 4f       	sbci	r31, 0xFF	; 255
    3e78:	80 83       	st	Z, r24
		CLCD_voidWriteSpecialCharacter(Local_u8Pattern,0,7,1);
		CLCD_voidGoToXY(Local_u8XPos,Local_u8YPos);
		CLCD_voidSendData(Local_u8Number6+'0');
		Local_u8n6=Local_u8Number6;
		Local_u8Number6=KPD_U8GetPressedKey();
		while (Local_u8Number6==0xff)
    3e7a:	fe 01       	movw	r30, r28
    3e7c:	e9 5a       	subi	r30, 0xA9	; 169
    3e7e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e80:	80 81       	ld	r24, Z
    3e82:	8f 3f       	cpi	r24, 0xFF	; 255
    3e84:	a1 f3       	breq	.-24     	; 0x3e6e <Keypad_voidTimer+0x7ea>
		{
			Local_u8Number6=KPD_U8GetPressedKey();
		}
		if(Local_u8Number6=='+')
    3e86:	fe 01       	movw	r30, r28
    3e88:	e9 5a       	subi	r30, 0xA9	; 169
    3e8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e8c:	80 81       	ld	r24, Z
    3e8e:	8b 32       	cpi	r24, 0x2B	; 43
    3e90:	69 f4       	brne	.+26     	; 0x3eac <Keypad_voidTimer+0x828>
		{

			Local_u8XPos=0;
    3e92:	fe 01       	movw	r30, r28
    3e94:	e0 5b       	subi	r30, 0xB0	; 176
    3e96:	ff 4f       	sbci	r31, 0xFF	; 255
    3e98:	10 82       	st	Z, r1
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,7,1);
    3e9a:	ce 01       	movw	r24, r28
    3e9c:	8a 59       	subi	r24, 0x9A	; 154
    3e9e:	9f 4f       	sbci	r25, 0xFF	; 255
    3ea0:	61 e0       	ldi	r22, 0x01	; 1
    3ea2:	47 e0       	ldi	r20, 0x07	; 7
    3ea4:	21 e0       	ldi	r18, 0x01	; 1
    3ea6:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    3eaa:	2c c0       	rjmp	.+88     	; 0x3f04 <Keypad_voidTimer+0x880>
		}
		else if(Local_u8Number6=='-')
    3eac:	fe 01       	movw	r30, r28
    3eae:	e9 5a       	subi	r30, 0xA9	; 169
    3eb0:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb2:	80 81       	ld	r24, Z
    3eb4:	8d 32       	cpi	r24, 0x2D	; 45
    3eb6:	71 f4       	brne	.+28     	; 0x3ed4 <Keypad_voidTimer+0x850>
		{
			Local_u8XPos=6;
    3eb8:	fe 01       	movw	r30, r28
    3eba:	e0 5b       	subi	r30, 0xB0	; 176
    3ebc:	ff 4f       	sbci	r31, 0xFF	; 255
    3ebe:	86 e0       	ldi	r24, 0x06	; 6
    3ec0:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,7,1);
    3ec2:	ce 01       	movw	r24, r28
    3ec4:	8a 59       	subi	r24, 0x9A	; 154
    3ec6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ec8:	61 e0       	ldi	r22, 0x01	; 1
    3eca:	47 e0       	ldi	r20, 0x07	; 7
    3ecc:	21 e0       	ldi	r18, 0x01	; 1
    3ece:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
    3ed2:	18 c0       	rjmp	.+48     	; 0x3f04 <Keypad_voidTimer+0x880>
		}
		else if(Local_u8Number6=='=')
    3ed4:	fe 01       	movw	r30, r28
    3ed6:	e9 5a       	subi	r30, 0xA9	; 169
    3ed8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eda:	80 81       	ld	r24, Z
    3edc:	8d 33       	cpi	r24, 0x3D	; 61
    3ede:	91 f4       	brne	.+36     	; 0x3f04 <Keypad_voidTimer+0x880>
		{
			Local_u8XPos=10;
    3ee0:	fe 01       	movw	r30, r28
    3ee2:	e0 5b       	subi	r30, 0xB0	; 176
    3ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ee6:	8a e0       	ldi	r24, 0x0A	; 10
    3ee8:	80 83       	st	Z, r24
			Local_u8Number='=';
    3eea:	fe 01       	movw	r30, r28
    3eec:	e3 5a       	subi	r30, 0xA3	; 163
    3eee:	ff 4f       	sbci	r31, 0xFF	; 255
    3ef0:	8d e3       	ldi	r24, 0x3D	; 61
    3ef2:	80 83       	st	Z, r24
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,7,1);
    3ef4:	ce 01       	movw	r24, r28
    3ef6:	8a 59       	subi	r24, 0x9A	; 154
    3ef8:	9f 4f       	sbci	r25, 0xFF	; 255
    3efa:	61 e0       	ldi	r22, 0x01	; 1
    3efc:	47 e0       	ldi	r20, 0x07	; 7
    3efe:	21 e0       	ldi	r18, 0x01	; 1
    3f00:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
			Local_u8XPos=10;
			Local_u8Number='=';
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,6,1);
		}
	}
	while(Local_u8XPos==7)
    3f04:	fe 01       	movw	r30, r28
    3f06:	e0 5b       	subi	r30, 0xB0	; 176
    3f08:	ff 4f       	sbci	r31, 0xFF	; 255
    3f0a:	80 81       	ld	r24, Z
    3f0c:	87 30       	cpi	r24, 0x07	; 7
    3f0e:	09 f4       	brne	.+2      	; 0x3f12 <Keypad_voidTimer+0x88e>
    3f10:	86 cf       	rjmp	.-244    	; 0x3e1e <Keypad_voidTimer+0x79a>
			Local_u8Number='=';
			CLCD_voidWriteSpecialCharacter(Local_u8Pattern1,1,7,1);
		}

	}
	if(Local_u8Number=='=')
    3f12:	fe 01       	movw	r30, r28
    3f14:	e3 5a       	subi	r30, 0xA3	; 163
    3f16:	ff 4f       	sbci	r31, 0xFF	; 255
    3f18:	80 81       	ld	r24, Z
    3f1a:	8d 33       	cpi	r24, 0x3D	; 61
    3f1c:	09 f0       	breq	.+2      	; 0x3f20 <Keypad_voidTimer+0x89c>
    3f1e:	74 cd       	rjmp	.-1304   	; 0x3a08 <Keypad_voidTimer+0x384>
			}

	}


	while(Local_u8Number=='=')
    3f20:	fe 01       	movw	r30, r28
    3f22:	e3 5a       	subi	r30, 0xA3	; 163
    3f24:	ff 4f       	sbci	r31, 0xFF	; 255
    3f26:	80 81       	ld	r24, Z
    3f28:	8d 33       	cpi	r24, 0x3D	; 61
    3f2a:	09 f0       	breq	.+2      	; 0x3f2e <Keypad_voidTimer+0x8aa>
    3f2c:	8e c4       	rjmp	.+2332   	; 0x484a <Keypad_voidTimer+0x11c6>
	{
		Local_u8Haor=Local_u8n1*10+Local_u8n2;
    3f2e:	fe 01       	movw	r30, r28
    3f30:	e2 5b       	subi	r30, 0xB2	; 178
    3f32:	ff 4f       	sbci	r31, 0xFF	; 255
    3f34:	80 81       	ld	r24, Z
    3f36:	88 2f       	mov	r24, r24
    3f38:	90 e0       	ldi	r25, 0x00	; 0
    3f3a:	9c 01       	movw	r18, r24
    3f3c:	22 0f       	add	r18, r18
    3f3e:	33 1f       	adc	r19, r19
    3f40:	c9 01       	movw	r24, r18
    3f42:	88 0f       	add	r24, r24
    3f44:	99 1f       	adc	r25, r25
    3f46:	88 0f       	add	r24, r24
    3f48:	99 1f       	adc	r25, r25
    3f4a:	82 0f       	add	r24, r18
    3f4c:	93 1f       	adc	r25, r19
    3f4e:	98 2f       	mov	r25, r24
    3f50:	de 01       	movw	r26, r28
    3f52:	aa 5a       	subi	r26, 0xAA	; 170
    3f54:	bf 4f       	sbci	r27, 0xFF	; 255
    3f56:	fe 01       	movw	r30, r28
    3f58:	e3 5b       	subi	r30, 0xB3	; 179
    3f5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f5c:	80 81       	ld	r24, Z
    3f5e:	89 0f       	add	r24, r25
    3f60:	8c 93       	st	X, r24
		Local_u8Minite=Local_u8n3*10+Local_u8n4;
    3f62:	fe 01       	movw	r30, r28
    3f64:	e4 5b       	subi	r30, 0xB4	; 180
    3f66:	ff 4f       	sbci	r31, 0xFF	; 255
    3f68:	80 81       	ld	r24, Z
    3f6a:	88 2f       	mov	r24, r24
    3f6c:	90 e0       	ldi	r25, 0x00	; 0
    3f6e:	9c 01       	movw	r18, r24
    3f70:	22 0f       	add	r18, r18
    3f72:	33 1f       	adc	r19, r19
    3f74:	c9 01       	movw	r24, r18
    3f76:	88 0f       	add	r24, r24
    3f78:	99 1f       	adc	r25, r25
    3f7a:	88 0f       	add	r24, r24
    3f7c:	99 1f       	adc	r25, r25
    3f7e:	82 0f       	add	r24, r18
    3f80:	93 1f       	adc	r25, r19
    3f82:	98 2f       	mov	r25, r24
    3f84:	de 01       	movw	r26, r28
    3f86:	ab 5a       	subi	r26, 0xAB	; 171
    3f88:	bf 4f       	sbci	r27, 0xFF	; 255
    3f8a:	fe 01       	movw	r30, r28
    3f8c:	e5 5b       	subi	r30, 0xB5	; 181
    3f8e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f90:	80 81       	ld	r24, Z
    3f92:	89 0f       	add	r24, r25
    3f94:	8c 93       	st	X, r24
		Local_u8Second=Local_u8n5*10+Local_u8n6;
    3f96:	fe 01       	movw	r30, r28
    3f98:	e6 5b       	subi	r30, 0xB6	; 182
    3f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f9c:	80 81       	ld	r24, Z
    3f9e:	88 2f       	mov	r24, r24
    3fa0:	90 e0       	ldi	r25, 0x00	; 0
    3fa2:	9c 01       	movw	r18, r24
    3fa4:	22 0f       	add	r18, r18
    3fa6:	33 1f       	adc	r19, r19
    3fa8:	c9 01       	movw	r24, r18
    3faa:	88 0f       	add	r24, r24
    3fac:	99 1f       	adc	r25, r25
    3fae:	88 0f       	add	r24, r24
    3fb0:	99 1f       	adc	r25, r25
    3fb2:	82 0f       	add	r24, r18
    3fb4:	93 1f       	adc	r25, r19
    3fb6:	98 2f       	mov	r25, r24
    3fb8:	de 01       	movw	r26, r28
    3fba:	ac 5a       	subi	r26, 0xAC	; 172
    3fbc:	bf 4f       	sbci	r27, 0xFF	; 255
    3fbe:	fe 01       	movw	r30, r28
    3fc0:	e7 5b       	subi	r30, 0xB7	; 183
    3fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    3fc4:	80 81       	ld	r24, Z
    3fc6:	89 0f       	add	r24, r25
    3fc8:	8c 93       	st	X, r24
		Local_u8Initial2=Local_u8Minite;
    3fca:	de 01       	movw	r26, r28
    3fcc:	ae 5a       	subi	r26, 0xAE	; 174
    3fce:	bf 4f       	sbci	r27, 0xFF	; 255
    3fd0:	fe 01       	movw	r30, r28
    3fd2:	eb 5a       	subi	r30, 0xAB	; 171
    3fd4:	ff 4f       	sbci	r31, 0xFF	; 255
    3fd6:	80 81       	ld	r24, Z
    3fd8:	8c 93       	st	X, r24
		Local_u8Initial3=Local_u8Second;
    3fda:	de 01       	movw	r26, r28
    3fdc:	af 5a       	subi	r26, 0xAF	; 175
    3fde:	bf 4f       	sbci	r27, 0xFF	; 255
    3fe0:	fe 01       	movw	r30, r28
    3fe2:	ec 5a       	subi	r30, 0xAC	; 172
    3fe4:	ff 4f       	sbci	r31, 0xFF	; 255
    3fe6:	80 81       	ld	r24, Z
    3fe8:	8c 93       	st	X, r24

		for(Local_u8Initial=Local_u8Haor;(Local_u8Initial>=0)&&(Local_u8Initial<=Local_u8Haor);Local_u8Initial--)
    3fea:	de 01       	movw	r26, r28
    3fec:	ad 5a       	subi	r26, 0xAD	; 173
    3fee:	bf 4f       	sbci	r27, 0xFF	; 255
    3ff0:	fe 01       	movw	r30, r28
    3ff2:	ea 5a       	subi	r30, 0xAA	; 170
    3ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ff6:	80 81       	ld	r24, Z
    3ff8:	8c 93       	st	X, r24
    3ffa:	82 c3       	rjmp	.+1796   	; 0x4700 <Keypad_voidTimer+0x107c>
		{
			CLCD_voidSendCommend(1);
    3ffc:	81 e0       	ldi	r24, 0x01	; 1
    3ffe:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_voidSendCommend>
			CLCD_voidGoToXY(0,0);
    4002:	80 e0       	ldi	r24, 0x00	; 0
    4004:	60 e0       	ldi	r22, 0x00	; 0
    4006:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
			CLCD_voidWriteNumber(Local_u8Initial);
    400a:	fe 01       	movw	r30, r28
    400c:	ed 5a       	subi	r30, 0xAD	; 173
    400e:	ff 4f       	sbci	r31, 0xFF	; 255
    4010:	80 81       	ld	r24, Z
    4012:	88 2f       	mov	r24, r24
    4014:	90 e0       	ldi	r25, 0x00	; 0
    4016:	a0 e0       	ldi	r26, 0x00	; 0
    4018:	b0 e0       	ldi	r27, 0x00	; 0
    401a:	bc 01       	movw	r22, r24
    401c:	cd 01       	movw	r24, r26
    401e:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
			CLCD_voidGoToXY(2,0);
    4022:	82 e0       	ldi	r24, 0x02	; 2
    4024:	60 e0       	ldi	r22, 0x00	; 0
    4026:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
			CLCD_voidSendData(':');
    402a:	8a e3       	ldi	r24, 0x3A	; 58
    402c:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>

			if(Local_u8Initial2!=0){
    4030:	fe 01       	movw	r30, r28
    4032:	ee 5a       	subi	r30, 0xAE	; 174
    4034:	ff 4f       	sbci	r31, 0xFF	; 255
    4036:	80 81       	ld	r24, Z
    4038:	88 23       	and	r24, r24
    403a:	09 f4       	brne	.+2      	; 0x403e <Keypad_voidTimer+0x9ba>
    403c:	b7 c1       	rjmp	.+878    	; 0x43ac <Keypad_voidTimer+0xd28>
				for(Local_u8Initial2=Local_u8Minite;(Local_u8Initial2>=0)&&(Local_u8Initial2<=Local_u8Minite);Local_u8Initial2--)
    403e:	fe 01       	movw	r30, r28
    4040:	ee 5a       	subi	r30, 0xAE	; 174
    4042:	ff 4f       	sbci	r31, 0xFF	; 255
    4044:	de 01       	movw	r26, r28
    4046:	ab 5a       	subi	r26, 0xAB	; 171
    4048:	bf 4f       	sbci	r27, 0xFF	; 255
    404a:	8c 91       	ld	r24, X
    404c:	80 83       	st	Z, r24
    404e:	a2 c1       	rjmp	.+836    	; 0x4394 <Keypad_voidTimer+0xd10>
				{
					CLCD_voidGoToXY(3,0);
    4050:	83 e0       	ldi	r24, 0x03	; 3
    4052:	60 e0       	ldi	r22, 0x00	; 0
    4054:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
					CLCD_voidWriteNumber(Local_u8Initial2);
    4058:	fe 01       	movw	r30, r28
    405a:	ee 5a       	subi	r30, 0xAE	; 174
    405c:	ff 4f       	sbci	r31, 0xFF	; 255
    405e:	80 81       	ld	r24, Z
    4060:	88 2f       	mov	r24, r24
    4062:	90 e0       	ldi	r25, 0x00	; 0
    4064:	a0 e0       	ldi	r26, 0x00	; 0
    4066:	b0 e0       	ldi	r27, 0x00	; 0
    4068:	bc 01       	movw	r22, r24
    406a:	cd 01       	movw	r24, r26
    406c:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
					CLCD_voidGoToXY(5,0);
    4070:	85 e0       	ldi	r24, 0x05	; 5
    4072:	60 e0       	ldi	r22, 0x00	; 0
    4074:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
					CLCD_voidSendData(':');
    4078:	8a e3       	ldi	r24, 0x3A	; 58
    407a:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>

					if(Local_u8Initial3!=0){
    407e:	fe 01       	movw	r30, r28
    4080:	ef 5a       	subi	r30, 0xAF	; 175
    4082:	ff 4f       	sbci	r31, 0xFF	; 255
    4084:	80 81       	ld	r24, Z
    4086:	88 23       	and	r24, r24
    4088:	09 f4       	brne	.+2      	; 0x408c <Keypad_voidTimer+0xa08>
    408a:	c8 c0       	rjmp	.+400    	; 0x421c <Keypad_voidTimer+0xb98>
						for(Local_u8Initial3=Local_u8Second;(Local_u8Initial3>=0)&&(Local_u8Initial3<=Local_u8Second);Local_u8Initial3--)
    408c:	fe 01       	movw	r30, r28
    408e:	ef 5a       	subi	r30, 0xAF	; 175
    4090:	ff 4f       	sbci	r31, 0xFF	; 255
    4092:	de 01       	movw	r26, r28
    4094:	ac 5a       	subi	r26, 0xAC	; 172
    4096:	bf 4f       	sbci	r27, 0xFF	; 255
    4098:	8c 91       	ld	r24, X
    409a:	80 83       	st	Z, r24
    409c:	b3 c0       	rjmp	.+358    	; 0x4204 <Keypad_voidTimer+0xb80>
						{
							CLCD_voidGoToXY(6,0);
    409e:	86 e0       	ldi	r24, 0x06	; 6
    40a0:	60 e0       	ldi	r22, 0x00	; 0
    40a2:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidSendData(' ');
    40a6:	80 e2       	ldi	r24, 0x20	; 32
    40a8:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
							CLCD_voidGoToXY(7,0);
    40ac:	87 e0       	ldi	r24, 0x07	; 7
    40ae:	60 e0       	ldi	r22, 0x00	; 0
    40b0:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidSendData(' ');
    40b4:	80 e2       	ldi	r24, 0x20	; 32
    40b6:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
							CLCD_voidGoToXY(6,0);
    40ba:	86 e0       	ldi	r24, 0x06	; 6
    40bc:	60 e0       	ldi	r22, 0x00	; 0
    40be:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidWriteNumber(Local_u8Initial3);
    40c2:	fe 01       	movw	r30, r28
    40c4:	ef 5a       	subi	r30, 0xAF	; 175
    40c6:	ff 4f       	sbci	r31, 0xFF	; 255
    40c8:	80 81       	ld	r24, Z
    40ca:	88 2f       	mov	r24, r24
    40cc:	90 e0       	ldi	r25, 0x00	; 0
    40ce:	a0 e0       	ldi	r26, 0x00	; 0
    40d0:	b0 e0       	ldi	r27, 0x00	; 0
    40d2:	bc 01       	movw	r22, r24
    40d4:	cd 01       	movw	r24, r26
    40d6:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    40da:	fe 01       	movw	r30, r28
    40dc:	ed 5b       	subi	r30, 0xBD	; 189
    40de:	ff 4f       	sbci	r31, 0xFF	; 255
    40e0:	80 e0       	ldi	r24, 0x00	; 0
    40e2:	90 e0       	ldi	r25, 0x00	; 0
    40e4:	aa e7       	ldi	r26, 0x7A	; 122
    40e6:	b4 e4       	ldi	r27, 0x44	; 68
    40e8:	80 83       	st	Z, r24
    40ea:	91 83       	std	Z+1, r25	; 0x01
    40ec:	a2 83       	std	Z+2, r26	; 0x02
    40ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40f0:	8e 01       	movw	r16, r28
    40f2:	01 5c       	subi	r16, 0xC1	; 193
    40f4:	1f 4f       	sbci	r17, 0xFF	; 255
    40f6:	fe 01       	movw	r30, r28
    40f8:	ed 5b       	subi	r30, 0xBD	; 189
    40fa:	ff 4f       	sbci	r31, 0xFF	; 255
    40fc:	60 81       	ld	r22, Z
    40fe:	71 81       	ldd	r23, Z+1	; 0x01
    4100:	82 81       	ldd	r24, Z+2	; 0x02
    4102:	93 81       	ldd	r25, Z+3	; 0x03
    4104:	20 e0       	ldi	r18, 0x00	; 0
    4106:	30 e0       	ldi	r19, 0x00	; 0
    4108:	4a ef       	ldi	r20, 0xFA	; 250
    410a:	54 e4       	ldi	r21, 0x44	; 68
    410c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4110:	dc 01       	movw	r26, r24
    4112:	cb 01       	movw	r24, r22
    4114:	f8 01       	movw	r30, r16
    4116:	80 83       	st	Z, r24
    4118:	91 83       	std	Z+1, r25	; 0x01
    411a:	a2 83       	std	Z+2, r26	; 0x02
    411c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    411e:	fe 01       	movw	r30, r28
    4120:	ff 96       	adiw	r30, 0x3f	; 63
    4122:	60 81       	ld	r22, Z
    4124:	71 81       	ldd	r23, Z+1	; 0x01
    4126:	82 81       	ldd	r24, Z+2	; 0x02
    4128:	93 81       	ldd	r25, Z+3	; 0x03
    412a:	20 e0       	ldi	r18, 0x00	; 0
    412c:	30 e0       	ldi	r19, 0x00	; 0
    412e:	40 e8       	ldi	r20, 0x80	; 128
    4130:	5f e3       	ldi	r21, 0x3F	; 63
    4132:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    4136:	88 23       	and	r24, r24
    4138:	2c f4       	brge	.+10     	; 0x4144 <Keypad_voidTimer+0xac0>
		__ticks = 1;
    413a:	81 e0       	ldi	r24, 0x01	; 1
    413c:	90 e0       	ldi	r25, 0x00	; 0
    413e:	9e af       	std	Y+62, r25	; 0x3e
    4140:	8d af       	std	Y+61, r24	; 0x3d
    4142:	46 c0       	rjmp	.+140    	; 0x41d0 <Keypad_voidTimer+0xb4c>
	else if (__tmp > 65535)
    4144:	fe 01       	movw	r30, r28
    4146:	ff 96       	adiw	r30, 0x3f	; 63
    4148:	60 81       	ld	r22, Z
    414a:	71 81       	ldd	r23, Z+1	; 0x01
    414c:	82 81       	ldd	r24, Z+2	; 0x02
    414e:	93 81       	ldd	r25, Z+3	; 0x03
    4150:	20 e0       	ldi	r18, 0x00	; 0
    4152:	3f ef       	ldi	r19, 0xFF	; 255
    4154:	4f e7       	ldi	r20, 0x7F	; 127
    4156:	57 e4       	ldi	r21, 0x47	; 71
    4158:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    415c:	18 16       	cp	r1, r24
    415e:	64 f5       	brge	.+88     	; 0x41b8 <Keypad_voidTimer+0xb34>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4160:	fe 01       	movw	r30, r28
    4162:	ed 5b       	subi	r30, 0xBD	; 189
    4164:	ff 4f       	sbci	r31, 0xFF	; 255
    4166:	60 81       	ld	r22, Z
    4168:	71 81       	ldd	r23, Z+1	; 0x01
    416a:	82 81       	ldd	r24, Z+2	; 0x02
    416c:	93 81       	ldd	r25, Z+3	; 0x03
    416e:	20 e0       	ldi	r18, 0x00	; 0
    4170:	30 e0       	ldi	r19, 0x00	; 0
    4172:	40 e2       	ldi	r20, 0x20	; 32
    4174:	51 e4       	ldi	r21, 0x41	; 65
    4176:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    417a:	dc 01       	movw	r26, r24
    417c:	cb 01       	movw	r24, r22
    417e:	bc 01       	movw	r22, r24
    4180:	cd 01       	movw	r24, r26
    4182:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4186:	dc 01       	movw	r26, r24
    4188:	cb 01       	movw	r24, r22
    418a:	9e af       	std	Y+62, r25	; 0x3e
    418c:	8d af       	std	Y+61, r24	; 0x3d
    418e:	0f c0       	rjmp	.+30     	; 0x41ae <Keypad_voidTimer+0xb2a>
    4190:	88 ec       	ldi	r24, 0xC8	; 200
    4192:	90 e0       	ldi	r25, 0x00	; 0
    4194:	9c af       	std	Y+60, r25	; 0x3c
    4196:	8b af       	std	Y+59, r24	; 0x3b
    4198:	8b ad       	ldd	r24, Y+59	; 0x3b
    419a:	9c ad       	ldd	r25, Y+60	; 0x3c
    419c:	01 97       	sbiw	r24, 0x01	; 1
    419e:	f1 f7       	brne	.-4      	; 0x419c <Keypad_voidTimer+0xb18>
    41a0:	9c af       	std	Y+60, r25	; 0x3c
    41a2:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41a4:	8d ad       	ldd	r24, Y+61	; 0x3d
    41a6:	9e ad       	ldd	r25, Y+62	; 0x3e
    41a8:	01 97       	sbiw	r24, 0x01	; 1
    41aa:	9e af       	std	Y+62, r25	; 0x3e
    41ac:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41ae:	8d ad       	ldd	r24, Y+61	; 0x3d
    41b0:	9e ad       	ldd	r25, Y+62	; 0x3e
    41b2:	00 97       	sbiw	r24, 0x00	; 0
    41b4:	69 f7       	brne	.-38     	; 0x4190 <Keypad_voidTimer+0xb0c>
    41b6:	16 c0       	rjmp	.+44     	; 0x41e4 <Keypad_voidTimer+0xb60>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41b8:	fe 01       	movw	r30, r28
    41ba:	ff 96       	adiw	r30, 0x3f	; 63
    41bc:	60 81       	ld	r22, Z
    41be:	71 81       	ldd	r23, Z+1	; 0x01
    41c0:	82 81       	ldd	r24, Z+2	; 0x02
    41c2:	93 81       	ldd	r25, Z+3	; 0x03
    41c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    41c8:	dc 01       	movw	r26, r24
    41ca:	cb 01       	movw	r24, r22
    41cc:	9e af       	std	Y+62, r25	; 0x3e
    41ce:	8d af       	std	Y+61, r24	; 0x3d
    41d0:	8d ad       	ldd	r24, Y+61	; 0x3d
    41d2:	9e ad       	ldd	r25, Y+62	; 0x3e
    41d4:	9a af       	std	Y+58, r25	; 0x3a
    41d6:	89 af       	std	Y+57, r24	; 0x39
    41d8:	89 ad       	ldd	r24, Y+57	; 0x39
    41da:	9a ad       	ldd	r25, Y+58	; 0x3a
    41dc:	01 97       	sbiw	r24, 0x01	; 1
    41de:	f1 f7       	brne	.-4      	; 0x41dc <Keypad_voidTimer+0xb58>
    41e0:	9a af       	std	Y+58, r25	; 0x3a
    41e2:	89 af       	std	Y+57, r24	; 0x39
							_delay_ms(1000);
							if(Local_u8Initial3==0)
    41e4:	fe 01       	movw	r30, r28
    41e6:	ef 5a       	subi	r30, 0xAF	; 175
    41e8:	ff 4f       	sbci	r31, 0xFF	; 255
    41ea:	80 81       	ld	r24, Z
    41ec:	88 23       	and	r24, r24
    41ee:	09 f4       	brne	.+2      	; 0x41f2 <Keypad_voidTimer+0xb6e>
    41f0:	c1 c0       	rjmp	.+386    	; 0x4374 <Keypad_voidTimer+0xcf0>
					CLCD_voidWriteNumber(Local_u8Initial2);
					CLCD_voidGoToXY(5,0);
					CLCD_voidSendData(':');

					if(Local_u8Initial3!=0){
						for(Local_u8Initial3=Local_u8Second;(Local_u8Initial3>=0)&&(Local_u8Initial3<=Local_u8Second);Local_u8Initial3--)
    41f2:	de 01       	movw	r26, r28
    41f4:	af 5a       	subi	r26, 0xAF	; 175
    41f6:	bf 4f       	sbci	r27, 0xFF	; 255
    41f8:	fe 01       	movw	r30, r28
    41fa:	ef 5a       	subi	r30, 0xAF	; 175
    41fc:	ff 4f       	sbci	r31, 0xFF	; 255
    41fe:	80 81       	ld	r24, Z
    4200:	81 50       	subi	r24, 0x01	; 1
    4202:	8c 93       	st	X, r24
    4204:	fe 01       	movw	r30, r28
    4206:	ef 5a       	subi	r30, 0xAF	; 175
    4208:	ff 4f       	sbci	r31, 0xFF	; 255
    420a:	de 01       	movw	r26, r28
    420c:	ac 5a       	subi	r26, 0xAC	; 172
    420e:	bf 4f       	sbci	r27, 0xFF	; 255
    4210:	90 81       	ld	r25, Z
    4212:	8c 91       	ld	r24, X
    4214:	89 17       	cp	r24, r25
    4216:	08 f0       	brcs	.+2      	; 0x421a <Keypad_voidTimer+0xb96>
    4218:	42 cf       	rjmp	.-380    	; 0x409e <Keypad_voidTimer+0xa1a>
    421a:	ac c0       	rjmp	.+344    	; 0x4374 <Keypad_voidTimer+0xcf0>
							if(Local_u8Initial3==0)
							{
								break ;
							}
						}
					}else if(Local_u8Initial3==0){
    421c:	fe 01       	movw	r30, r28
    421e:	ef 5a       	subi	r30, 0xAF	; 175
    4220:	ff 4f       	sbci	r31, 0xFF	; 255
    4222:	80 81       	ld	r24, Z
    4224:	88 23       	and	r24, r24
    4226:	09 f0       	breq	.+2      	; 0x422a <Keypad_voidTimer+0xba6>
    4228:	a5 c0       	rjmp	.+330    	; 0x4374 <Keypad_voidTimer+0xcf0>
						for(Local_u8i=59;(Local_u8i>=0);Local_u8i--)
    422a:	fe 01       	movw	r30, r28
    422c:	e8 5b       	subi	r30, 0xB8	; 184
    422e:	ff 4f       	sbci	r31, 0xFF	; 255
    4230:	8b e3       	ldi	r24, 0x3B	; 59
    4232:	80 83       	st	Z, r24
						{
							CLCD_voidGoToXY(6,0);
    4234:	86 e0       	ldi	r24, 0x06	; 6
    4236:	60 e0       	ldi	r22, 0x00	; 0
    4238:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidSendData(' ');
    423c:	80 e2       	ldi	r24, 0x20	; 32
    423e:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
							CLCD_voidGoToXY(7,0);
    4242:	87 e0       	ldi	r24, 0x07	; 7
    4244:	60 e0       	ldi	r22, 0x00	; 0
    4246:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidSendData(' ');
    424a:	80 e2       	ldi	r24, 0x20	; 32
    424c:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
							CLCD_voidGoToXY(6,0);
    4250:	86 e0       	ldi	r24, 0x06	; 6
    4252:	60 e0       	ldi	r22, 0x00	; 0
    4254:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidWriteNumber(Local_u8i);
    4258:	fe 01       	movw	r30, r28
    425a:	e8 5b       	subi	r30, 0xB8	; 184
    425c:	ff 4f       	sbci	r31, 0xFF	; 255
    425e:	80 81       	ld	r24, Z
    4260:	88 2f       	mov	r24, r24
    4262:	90 e0       	ldi	r25, 0x00	; 0
    4264:	a0 e0       	ldi	r26, 0x00	; 0
    4266:	b0 e0       	ldi	r27, 0x00	; 0
    4268:	bc 01       	movw	r22, r24
    426a:	cd 01       	movw	r24, r26
    426c:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    4270:	80 e0       	ldi	r24, 0x00	; 0
    4272:	90 e0       	ldi	r25, 0x00	; 0
    4274:	aa e7       	ldi	r26, 0x7A	; 122
    4276:	b4 e4       	ldi	r27, 0x44	; 68
    4278:	8d ab       	std	Y+53, r24	; 0x35
    427a:	9e ab       	std	Y+54, r25	; 0x36
    427c:	af ab       	std	Y+55, r26	; 0x37
    427e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4280:	6d a9       	ldd	r22, Y+53	; 0x35
    4282:	7e a9       	ldd	r23, Y+54	; 0x36
    4284:	8f a9       	ldd	r24, Y+55	; 0x37
    4286:	98 ad       	ldd	r25, Y+56	; 0x38
    4288:	20 e0       	ldi	r18, 0x00	; 0
    428a:	30 e0       	ldi	r19, 0x00	; 0
    428c:	4a ef       	ldi	r20, 0xFA	; 250
    428e:	54 e4       	ldi	r21, 0x44	; 68
    4290:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4294:	dc 01       	movw	r26, r24
    4296:	cb 01       	movw	r24, r22
    4298:	89 ab       	std	Y+49, r24	; 0x31
    429a:	9a ab       	std	Y+50, r25	; 0x32
    429c:	ab ab       	std	Y+51, r26	; 0x33
    429e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    42a0:	69 a9       	ldd	r22, Y+49	; 0x31
    42a2:	7a a9       	ldd	r23, Y+50	; 0x32
    42a4:	8b a9       	ldd	r24, Y+51	; 0x33
    42a6:	9c a9       	ldd	r25, Y+52	; 0x34
    42a8:	20 e0       	ldi	r18, 0x00	; 0
    42aa:	30 e0       	ldi	r19, 0x00	; 0
    42ac:	40 e8       	ldi	r20, 0x80	; 128
    42ae:	5f e3       	ldi	r21, 0x3F	; 63
    42b0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    42b4:	88 23       	and	r24, r24
    42b6:	2c f4       	brge	.+10     	; 0x42c2 <Keypad_voidTimer+0xc3e>
		__ticks = 1;
    42b8:	81 e0       	ldi	r24, 0x01	; 1
    42ba:	90 e0       	ldi	r25, 0x00	; 0
    42bc:	98 ab       	std	Y+48, r25	; 0x30
    42be:	8f a7       	std	Y+47, r24	; 0x2f
    42c0:	3f c0       	rjmp	.+126    	; 0x4340 <Keypad_voidTimer+0xcbc>
	else if (__tmp > 65535)
    42c2:	69 a9       	ldd	r22, Y+49	; 0x31
    42c4:	7a a9       	ldd	r23, Y+50	; 0x32
    42c6:	8b a9       	ldd	r24, Y+51	; 0x33
    42c8:	9c a9       	ldd	r25, Y+52	; 0x34
    42ca:	20 e0       	ldi	r18, 0x00	; 0
    42cc:	3f ef       	ldi	r19, 0xFF	; 255
    42ce:	4f e7       	ldi	r20, 0x7F	; 127
    42d0:	57 e4       	ldi	r21, 0x47	; 71
    42d2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    42d6:	18 16       	cp	r1, r24
    42d8:	4c f5       	brge	.+82     	; 0x432c <Keypad_voidTimer+0xca8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42da:	6d a9       	ldd	r22, Y+53	; 0x35
    42dc:	7e a9       	ldd	r23, Y+54	; 0x36
    42de:	8f a9       	ldd	r24, Y+55	; 0x37
    42e0:	98 ad       	ldd	r25, Y+56	; 0x38
    42e2:	20 e0       	ldi	r18, 0x00	; 0
    42e4:	30 e0       	ldi	r19, 0x00	; 0
    42e6:	40 e2       	ldi	r20, 0x20	; 32
    42e8:	51 e4       	ldi	r21, 0x41	; 65
    42ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42ee:	dc 01       	movw	r26, r24
    42f0:	cb 01       	movw	r24, r22
    42f2:	bc 01       	movw	r22, r24
    42f4:	cd 01       	movw	r24, r26
    42f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42fa:	dc 01       	movw	r26, r24
    42fc:	cb 01       	movw	r24, r22
    42fe:	98 ab       	std	Y+48, r25	; 0x30
    4300:	8f a7       	std	Y+47, r24	; 0x2f
    4302:	0f c0       	rjmp	.+30     	; 0x4322 <Keypad_voidTimer+0xc9e>
    4304:	88 ec       	ldi	r24, 0xC8	; 200
    4306:	90 e0       	ldi	r25, 0x00	; 0
    4308:	9e a7       	std	Y+46, r25	; 0x2e
    430a:	8d a7       	std	Y+45, r24	; 0x2d
    430c:	8d a5       	ldd	r24, Y+45	; 0x2d
    430e:	9e a5       	ldd	r25, Y+46	; 0x2e
    4310:	01 97       	sbiw	r24, 0x01	; 1
    4312:	f1 f7       	brne	.-4      	; 0x4310 <Keypad_voidTimer+0xc8c>
    4314:	9e a7       	std	Y+46, r25	; 0x2e
    4316:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4318:	8f a5       	ldd	r24, Y+47	; 0x2f
    431a:	98 a9       	ldd	r25, Y+48	; 0x30
    431c:	01 97       	sbiw	r24, 0x01	; 1
    431e:	98 ab       	std	Y+48, r25	; 0x30
    4320:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4322:	8f a5       	ldd	r24, Y+47	; 0x2f
    4324:	98 a9       	ldd	r25, Y+48	; 0x30
    4326:	00 97       	sbiw	r24, 0x00	; 0
    4328:	69 f7       	brne	.-38     	; 0x4304 <Keypad_voidTimer+0xc80>
    432a:	14 c0       	rjmp	.+40     	; 0x4354 <Keypad_voidTimer+0xcd0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    432c:	69 a9       	ldd	r22, Y+49	; 0x31
    432e:	7a a9       	ldd	r23, Y+50	; 0x32
    4330:	8b a9       	ldd	r24, Y+51	; 0x33
    4332:	9c a9       	ldd	r25, Y+52	; 0x34
    4334:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4338:	dc 01       	movw	r26, r24
    433a:	cb 01       	movw	r24, r22
    433c:	98 ab       	std	Y+48, r25	; 0x30
    433e:	8f a7       	std	Y+47, r24	; 0x2f
    4340:	8f a5       	ldd	r24, Y+47	; 0x2f
    4342:	98 a9       	ldd	r25, Y+48	; 0x30
    4344:	9c a7       	std	Y+44, r25	; 0x2c
    4346:	8b a7       	std	Y+43, r24	; 0x2b
    4348:	8b a5       	ldd	r24, Y+43	; 0x2b
    434a:	9c a5       	ldd	r25, Y+44	; 0x2c
    434c:	01 97       	sbiw	r24, 0x01	; 1
    434e:	f1 f7       	brne	.-4      	; 0x434c <Keypad_voidTimer+0xcc8>
    4350:	9c a7       	std	Y+44, r25	; 0x2c
    4352:	8b a7       	std	Y+43, r24	; 0x2b
							_delay_ms(1000);
							if(Local_u8i==0)
    4354:	fe 01       	movw	r30, r28
    4356:	e8 5b       	subi	r30, 0xB8	; 184
    4358:	ff 4f       	sbci	r31, 0xFF	; 255
    435a:	80 81       	ld	r24, Z
    435c:	88 23       	and	r24, r24
    435e:	51 f0       	breq	.+20     	; 0x4374 <Keypad_voidTimer+0xcf0>
							{
								break ;
							}
						}
					}else if(Local_u8Initial3==0){
						for(Local_u8i=59;(Local_u8i>=0);Local_u8i--)
    4360:	de 01       	movw	r26, r28
    4362:	a8 5b       	subi	r26, 0xB8	; 184
    4364:	bf 4f       	sbci	r27, 0xFF	; 255
    4366:	fe 01       	movw	r30, r28
    4368:	e8 5b       	subi	r30, 0xB8	; 184
    436a:	ff 4f       	sbci	r31, 0xFF	; 255
    436c:	80 81       	ld	r24, Z
    436e:	81 50       	subi	r24, 0x01	; 1
    4370:	8c 93       	st	X, r24
    4372:	60 cf       	rjmp	.-320    	; 0x4234 <Keypad_voidTimer+0xbb0>
							{
								break ;
							}
						}
					}
					if(Local_u8Initial2==0)
    4374:	fe 01       	movw	r30, r28
    4376:	ee 5a       	subi	r30, 0xAE	; 174
    4378:	ff 4f       	sbci	r31, 0xFF	; 255
    437a:	80 81       	ld	r24, Z
    437c:	88 23       	and	r24, r24
    437e:	09 f4       	brne	.+2      	; 0x4382 <Keypad_voidTimer+0xcfe>
    4380:	b0 c1       	rjmp	.+864    	; 0x46e2 <Keypad_voidTimer+0x105e>
			CLCD_voidWriteNumber(Local_u8Initial);
			CLCD_voidGoToXY(2,0);
			CLCD_voidSendData(':');

			if(Local_u8Initial2!=0){
				for(Local_u8Initial2=Local_u8Minite;(Local_u8Initial2>=0)&&(Local_u8Initial2<=Local_u8Minite);Local_u8Initial2--)
    4382:	de 01       	movw	r26, r28
    4384:	ae 5a       	subi	r26, 0xAE	; 174
    4386:	bf 4f       	sbci	r27, 0xFF	; 255
    4388:	fe 01       	movw	r30, r28
    438a:	ee 5a       	subi	r30, 0xAE	; 174
    438c:	ff 4f       	sbci	r31, 0xFF	; 255
    438e:	80 81       	ld	r24, Z
    4390:	81 50       	subi	r24, 0x01	; 1
    4392:	8c 93       	st	X, r24
    4394:	fe 01       	movw	r30, r28
    4396:	ee 5a       	subi	r30, 0xAE	; 174
    4398:	ff 4f       	sbci	r31, 0xFF	; 255
    439a:	de 01       	movw	r26, r28
    439c:	ab 5a       	subi	r26, 0xAB	; 171
    439e:	bf 4f       	sbci	r27, 0xFF	; 255
    43a0:	90 81       	ld	r25, Z
    43a2:	8c 91       	ld	r24, X
    43a4:	89 17       	cp	r24, r25
    43a6:	08 f0       	brcs	.+2      	; 0x43aa <Keypad_voidTimer+0xd26>
    43a8:	53 ce       	rjmp	.-858    	; 0x4050 <Keypad_voidTimer+0x9cc>
    43aa:	9b c1       	rjmp	.+822    	; 0x46e2 <Keypad_voidTimer+0x105e>
					{
						break ;
					}
				}
			}
			else if(Local_u8Initial2==0)
    43ac:	fe 01       	movw	r30, r28
    43ae:	ee 5a       	subi	r30, 0xAE	; 174
    43b0:	ff 4f       	sbci	r31, 0xFF	; 255
    43b2:	80 81       	ld	r24, Z
    43b4:	88 23       	and	r24, r24
    43b6:	09 f0       	breq	.+2      	; 0x43ba <Keypad_voidTimer+0xd36>
    43b8:	94 c1       	rjmp	.+808    	; 0x46e2 <Keypad_voidTimer+0x105e>
			{
				for(Local_u8j=59;(Local_u8j>=0);Local_u8j--)
    43ba:	fe 01       	movw	r30, r28
    43bc:	e9 5b       	subi	r30, 0xB9	; 185
    43be:	ff 4f       	sbci	r31, 0xFF	; 255
    43c0:	8b e3       	ldi	r24, 0x3B	; 59
    43c2:	80 83       	st	Z, r24
				{
					CLCD_voidGoToXY(3,0);
    43c4:	83 e0       	ldi	r24, 0x03	; 3
    43c6:	60 e0       	ldi	r22, 0x00	; 0
    43c8:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
					CLCD_voidWriteNumber(Local_u8Initial2);
    43cc:	fe 01       	movw	r30, r28
    43ce:	ee 5a       	subi	r30, 0xAE	; 174
    43d0:	ff 4f       	sbci	r31, 0xFF	; 255
    43d2:	80 81       	ld	r24, Z
    43d4:	88 2f       	mov	r24, r24
    43d6:	90 e0       	ldi	r25, 0x00	; 0
    43d8:	a0 e0       	ldi	r26, 0x00	; 0
    43da:	b0 e0       	ldi	r27, 0x00	; 0
    43dc:	bc 01       	movw	r22, r24
    43de:	cd 01       	movw	r24, r26
    43e0:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
					CLCD_voidGoToXY(5,0);
    43e4:	85 e0       	ldi	r24, 0x05	; 5
    43e6:	60 e0       	ldi	r22, 0x00	; 0
    43e8:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
					CLCD_voidSendData(':');
    43ec:	8a e3       	ldi	r24, 0x3A	; 58
    43ee:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
					if(Local_u8Initial3!=0){
    43f2:	fe 01       	movw	r30, r28
    43f4:	ef 5a       	subi	r30, 0xAF	; 175
    43f6:	ff 4f       	sbci	r31, 0xFF	; 255
    43f8:	80 81       	ld	r24, Z
    43fa:	88 23       	and	r24, r24
    43fc:	09 f4       	brne	.+2      	; 0x4400 <Keypad_voidTimer+0xd7c>
    43fe:	b5 c0       	rjmp	.+362    	; 0x456a <Keypad_voidTimer+0xee6>
						for(Local_u8Initial3=Local_u8Second;(Local_u8Initial3>=0)&&(Local_u8Initial3<=Local_u8Second);Local_u8Initial3--)
    4400:	fe 01       	movw	r30, r28
    4402:	ef 5a       	subi	r30, 0xAF	; 175
    4404:	ff 4f       	sbci	r31, 0xFF	; 255
    4406:	de 01       	movw	r26, r28
    4408:	ac 5a       	subi	r26, 0xAC	; 172
    440a:	bf 4f       	sbci	r27, 0xFF	; 255
    440c:	8c 91       	ld	r24, X
    440e:	80 83       	st	Z, r24
    4410:	a0 c0       	rjmp	.+320    	; 0x4552 <Keypad_voidTimer+0xece>
						{
							CLCD_voidGoToXY(6,0);
    4412:	86 e0       	ldi	r24, 0x06	; 6
    4414:	60 e0       	ldi	r22, 0x00	; 0
    4416:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidSendData(' ');
    441a:	80 e2       	ldi	r24, 0x20	; 32
    441c:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
							CLCD_voidGoToXY(7,0);
    4420:	87 e0       	ldi	r24, 0x07	; 7
    4422:	60 e0       	ldi	r22, 0x00	; 0
    4424:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidSendData(' ');
    4428:	80 e2       	ldi	r24, 0x20	; 32
    442a:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
							CLCD_voidGoToXY(6,0);
    442e:	86 e0       	ldi	r24, 0x06	; 6
    4430:	60 e0       	ldi	r22, 0x00	; 0
    4432:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidWriteNumber(Local_u8Initial3);
    4436:	fe 01       	movw	r30, r28
    4438:	ef 5a       	subi	r30, 0xAF	; 175
    443a:	ff 4f       	sbci	r31, 0xFF	; 255
    443c:	80 81       	ld	r24, Z
    443e:	88 2f       	mov	r24, r24
    4440:	90 e0       	ldi	r25, 0x00	; 0
    4442:	a0 e0       	ldi	r26, 0x00	; 0
    4444:	b0 e0       	ldi	r27, 0x00	; 0
    4446:	bc 01       	movw	r22, r24
    4448:	cd 01       	movw	r24, r26
    444a:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    444e:	80 e0       	ldi	r24, 0x00	; 0
    4450:	90 e0       	ldi	r25, 0x00	; 0
    4452:	aa e7       	ldi	r26, 0x7A	; 122
    4454:	b4 e4       	ldi	r27, 0x44	; 68
    4456:	8f a3       	std	Y+39, r24	; 0x27
    4458:	98 a7       	std	Y+40, r25	; 0x28
    445a:	a9 a7       	std	Y+41, r26	; 0x29
    445c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    445e:	6f a1       	ldd	r22, Y+39	; 0x27
    4460:	78 a5       	ldd	r23, Y+40	; 0x28
    4462:	89 a5       	ldd	r24, Y+41	; 0x29
    4464:	9a a5       	ldd	r25, Y+42	; 0x2a
    4466:	20 e0       	ldi	r18, 0x00	; 0
    4468:	30 e0       	ldi	r19, 0x00	; 0
    446a:	4a ef       	ldi	r20, 0xFA	; 250
    446c:	54 e4       	ldi	r21, 0x44	; 68
    446e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4472:	dc 01       	movw	r26, r24
    4474:	cb 01       	movw	r24, r22
    4476:	8b a3       	std	Y+35, r24	; 0x23
    4478:	9c a3       	std	Y+36, r25	; 0x24
    447a:	ad a3       	std	Y+37, r26	; 0x25
    447c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    447e:	6b a1       	ldd	r22, Y+35	; 0x23
    4480:	7c a1       	ldd	r23, Y+36	; 0x24
    4482:	8d a1       	ldd	r24, Y+37	; 0x25
    4484:	9e a1       	ldd	r25, Y+38	; 0x26
    4486:	20 e0       	ldi	r18, 0x00	; 0
    4488:	30 e0       	ldi	r19, 0x00	; 0
    448a:	40 e8       	ldi	r20, 0x80	; 128
    448c:	5f e3       	ldi	r21, 0x3F	; 63
    448e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    4492:	88 23       	and	r24, r24
    4494:	2c f4       	brge	.+10     	; 0x44a0 <Keypad_voidTimer+0xe1c>
		__ticks = 1;
    4496:	81 e0       	ldi	r24, 0x01	; 1
    4498:	90 e0       	ldi	r25, 0x00	; 0
    449a:	9a a3       	std	Y+34, r25	; 0x22
    449c:	89 a3       	std	Y+33, r24	; 0x21
    449e:	3f c0       	rjmp	.+126    	; 0x451e <Keypad_voidTimer+0xe9a>
	else if (__tmp > 65535)
    44a0:	6b a1       	ldd	r22, Y+35	; 0x23
    44a2:	7c a1       	ldd	r23, Y+36	; 0x24
    44a4:	8d a1       	ldd	r24, Y+37	; 0x25
    44a6:	9e a1       	ldd	r25, Y+38	; 0x26
    44a8:	20 e0       	ldi	r18, 0x00	; 0
    44aa:	3f ef       	ldi	r19, 0xFF	; 255
    44ac:	4f e7       	ldi	r20, 0x7F	; 127
    44ae:	57 e4       	ldi	r21, 0x47	; 71
    44b0:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    44b4:	18 16       	cp	r1, r24
    44b6:	4c f5       	brge	.+82     	; 0x450a <Keypad_voidTimer+0xe86>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44b8:	6f a1       	ldd	r22, Y+39	; 0x27
    44ba:	78 a5       	ldd	r23, Y+40	; 0x28
    44bc:	89 a5       	ldd	r24, Y+41	; 0x29
    44be:	9a a5       	ldd	r25, Y+42	; 0x2a
    44c0:	20 e0       	ldi	r18, 0x00	; 0
    44c2:	30 e0       	ldi	r19, 0x00	; 0
    44c4:	40 e2       	ldi	r20, 0x20	; 32
    44c6:	51 e4       	ldi	r21, 0x41	; 65
    44c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    44cc:	dc 01       	movw	r26, r24
    44ce:	cb 01       	movw	r24, r22
    44d0:	bc 01       	movw	r22, r24
    44d2:	cd 01       	movw	r24, r26
    44d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44d8:	dc 01       	movw	r26, r24
    44da:	cb 01       	movw	r24, r22
    44dc:	9a a3       	std	Y+34, r25	; 0x22
    44de:	89 a3       	std	Y+33, r24	; 0x21
    44e0:	0f c0       	rjmp	.+30     	; 0x4500 <Keypad_voidTimer+0xe7c>
    44e2:	88 ec       	ldi	r24, 0xC8	; 200
    44e4:	90 e0       	ldi	r25, 0x00	; 0
    44e6:	98 a3       	std	Y+32, r25	; 0x20
    44e8:	8f 8f       	std	Y+31, r24	; 0x1f
    44ea:	8f 8d       	ldd	r24, Y+31	; 0x1f
    44ec:	98 a1       	ldd	r25, Y+32	; 0x20
    44ee:	01 97       	sbiw	r24, 0x01	; 1
    44f0:	f1 f7       	brne	.-4      	; 0x44ee <Keypad_voidTimer+0xe6a>
    44f2:	98 a3       	std	Y+32, r25	; 0x20
    44f4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44f6:	89 a1       	ldd	r24, Y+33	; 0x21
    44f8:	9a a1       	ldd	r25, Y+34	; 0x22
    44fa:	01 97       	sbiw	r24, 0x01	; 1
    44fc:	9a a3       	std	Y+34, r25	; 0x22
    44fe:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4500:	89 a1       	ldd	r24, Y+33	; 0x21
    4502:	9a a1       	ldd	r25, Y+34	; 0x22
    4504:	00 97       	sbiw	r24, 0x00	; 0
    4506:	69 f7       	brne	.-38     	; 0x44e2 <Keypad_voidTimer+0xe5e>
    4508:	14 c0       	rjmp	.+40     	; 0x4532 <Keypad_voidTimer+0xeae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    450a:	6b a1       	ldd	r22, Y+35	; 0x23
    450c:	7c a1       	ldd	r23, Y+36	; 0x24
    450e:	8d a1       	ldd	r24, Y+37	; 0x25
    4510:	9e a1       	ldd	r25, Y+38	; 0x26
    4512:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4516:	dc 01       	movw	r26, r24
    4518:	cb 01       	movw	r24, r22
    451a:	9a a3       	std	Y+34, r25	; 0x22
    451c:	89 a3       	std	Y+33, r24	; 0x21
    451e:	89 a1       	ldd	r24, Y+33	; 0x21
    4520:	9a a1       	ldd	r25, Y+34	; 0x22
    4522:	9e 8f       	std	Y+30, r25	; 0x1e
    4524:	8d 8f       	std	Y+29, r24	; 0x1d
    4526:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4528:	9e 8d       	ldd	r25, Y+30	; 0x1e
    452a:	01 97       	sbiw	r24, 0x01	; 1
    452c:	f1 f7       	brne	.-4      	; 0x452a <Keypad_voidTimer+0xea6>
    452e:	9e 8f       	std	Y+30, r25	; 0x1e
    4530:	8d 8f       	std	Y+29, r24	; 0x1d
							_delay_ms(1000);
							if(Local_u8Initial3==0)
    4532:	fe 01       	movw	r30, r28
    4534:	ef 5a       	subi	r30, 0xAF	; 175
    4536:	ff 4f       	sbci	r31, 0xFF	; 255
    4538:	80 81       	ld	r24, Z
    453a:	88 23       	and	r24, r24
    453c:	09 f4       	brne	.+2      	; 0x4540 <Keypad_voidTimer+0xebc>
    453e:	c1 c0       	rjmp	.+386    	; 0x46c2 <Keypad_voidTimer+0x103e>
					CLCD_voidGoToXY(3,0);
					CLCD_voidWriteNumber(Local_u8Initial2);
					CLCD_voidGoToXY(5,0);
					CLCD_voidSendData(':');
					if(Local_u8Initial3!=0){
						for(Local_u8Initial3=Local_u8Second;(Local_u8Initial3>=0)&&(Local_u8Initial3<=Local_u8Second);Local_u8Initial3--)
    4540:	de 01       	movw	r26, r28
    4542:	af 5a       	subi	r26, 0xAF	; 175
    4544:	bf 4f       	sbci	r27, 0xFF	; 255
    4546:	fe 01       	movw	r30, r28
    4548:	ef 5a       	subi	r30, 0xAF	; 175
    454a:	ff 4f       	sbci	r31, 0xFF	; 255
    454c:	80 81       	ld	r24, Z
    454e:	81 50       	subi	r24, 0x01	; 1
    4550:	8c 93       	st	X, r24
    4552:	fe 01       	movw	r30, r28
    4554:	ef 5a       	subi	r30, 0xAF	; 175
    4556:	ff 4f       	sbci	r31, 0xFF	; 255
    4558:	de 01       	movw	r26, r28
    455a:	ac 5a       	subi	r26, 0xAC	; 172
    455c:	bf 4f       	sbci	r27, 0xFF	; 255
    455e:	90 81       	ld	r25, Z
    4560:	8c 91       	ld	r24, X
    4562:	89 17       	cp	r24, r25
    4564:	08 f0       	brcs	.+2      	; 0x4568 <Keypad_voidTimer+0xee4>
    4566:	55 cf       	rjmp	.-342    	; 0x4412 <Keypad_voidTimer+0xd8e>
    4568:	ac c0       	rjmp	.+344    	; 0x46c2 <Keypad_voidTimer+0x103e>
							if(Local_u8Initial3==0)
							{
								break ;
							}
						}
					}else if(Local_u8Initial3==0){
    456a:	fe 01       	movw	r30, r28
    456c:	ef 5a       	subi	r30, 0xAF	; 175
    456e:	ff 4f       	sbci	r31, 0xFF	; 255
    4570:	80 81       	ld	r24, Z
    4572:	88 23       	and	r24, r24
    4574:	09 f0       	breq	.+2      	; 0x4578 <Keypad_voidTimer+0xef4>
    4576:	a5 c0       	rjmp	.+330    	; 0x46c2 <Keypad_voidTimer+0x103e>
						for(Local_u8i=59;(Local_u8i>=0);Local_u8i--)
    4578:	fe 01       	movw	r30, r28
    457a:	e8 5b       	subi	r30, 0xB8	; 184
    457c:	ff 4f       	sbci	r31, 0xFF	; 255
    457e:	8b e3       	ldi	r24, 0x3B	; 59
    4580:	80 83       	st	Z, r24
						{
							CLCD_voidGoToXY(6,0);
    4582:	86 e0       	ldi	r24, 0x06	; 6
    4584:	60 e0       	ldi	r22, 0x00	; 0
    4586:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidSendData(' ');
    458a:	80 e2       	ldi	r24, 0x20	; 32
    458c:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
							CLCD_voidGoToXY(7,0);
    4590:	87 e0       	ldi	r24, 0x07	; 7
    4592:	60 e0       	ldi	r22, 0x00	; 0
    4594:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidSendData(' ');
    4598:	80 e2       	ldi	r24, 0x20	; 32
    459a:	0e 94 0b 08 	call	0x1016	; 0x1016 <CLCD_voidSendData>
							CLCD_voidGoToXY(6,0);
    459e:	86 e0       	ldi	r24, 0x06	; 6
    45a0:	60 e0       	ldi	r22, 0x00	; 0
    45a2:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
							CLCD_voidWriteNumber(Local_u8i);
    45a6:	fe 01       	movw	r30, r28
    45a8:	e8 5b       	subi	r30, 0xB8	; 184
    45aa:	ff 4f       	sbci	r31, 0xFF	; 255
    45ac:	80 81       	ld	r24, Z
    45ae:	88 2f       	mov	r24, r24
    45b0:	90 e0       	ldi	r25, 0x00	; 0
    45b2:	a0 e0       	ldi	r26, 0x00	; 0
    45b4:	b0 e0       	ldi	r27, 0x00	; 0
    45b6:	bc 01       	movw	r22, r24
    45b8:	cd 01       	movw	r24, r26
    45ba:	0e 94 be 09 	call	0x137c	; 0x137c <CLCD_voidWriteNumber>
    45be:	80 e0       	ldi	r24, 0x00	; 0
    45c0:	90 e0       	ldi	r25, 0x00	; 0
    45c2:	aa e7       	ldi	r26, 0x7A	; 122
    45c4:	b4 e4       	ldi	r27, 0x44	; 68
    45c6:	89 8f       	std	Y+25, r24	; 0x19
    45c8:	9a 8f       	std	Y+26, r25	; 0x1a
    45ca:	ab 8f       	std	Y+27, r26	; 0x1b
    45cc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    45ce:	69 8d       	ldd	r22, Y+25	; 0x19
    45d0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    45d2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    45d4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    45d6:	20 e0       	ldi	r18, 0x00	; 0
    45d8:	30 e0       	ldi	r19, 0x00	; 0
    45da:	4a ef       	ldi	r20, 0xFA	; 250
    45dc:	54 e4       	ldi	r21, 0x44	; 68
    45de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    45e2:	dc 01       	movw	r26, r24
    45e4:	cb 01       	movw	r24, r22
    45e6:	8d 8b       	std	Y+21, r24	; 0x15
    45e8:	9e 8b       	std	Y+22, r25	; 0x16
    45ea:	af 8b       	std	Y+23, r26	; 0x17
    45ec:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    45ee:	6d 89       	ldd	r22, Y+21	; 0x15
    45f0:	7e 89       	ldd	r23, Y+22	; 0x16
    45f2:	8f 89       	ldd	r24, Y+23	; 0x17
    45f4:	98 8d       	ldd	r25, Y+24	; 0x18
    45f6:	20 e0       	ldi	r18, 0x00	; 0
    45f8:	30 e0       	ldi	r19, 0x00	; 0
    45fa:	40 e8       	ldi	r20, 0x80	; 128
    45fc:	5f e3       	ldi	r21, 0x3F	; 63
    45fe:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    4602:	88 23       	and	r24, r24
    4604:	2c f4       	brge	.+10     	; 0x4610 <Keypad_voidTimer+0xf8c>
		__ticks = 1;
    4606:	81 e0       	ldi	r24, 0x01	; 1
    4608:	90 e0       	ldi	r25, 0x00	; 0
    460a:	9c 8b       	std	Y+20, r25	; 0x14
    460c:	8b 8b       	std	Y+19, r24	; 0x13
    460e:	3f c0       	rjmp	.+126    	; 0x468e <Keypad_voidTimer+0x100a>
	else if (__tmp > 65535)
    4610:	6d 89       	ldd	r22, Y+21	; 0x15
    4612:	7e 89       	ldd	r23, Y+22	; 0x16
    4614:	8f 89       	ldd	r24, Y+23	; 0x17
    4616:	98 8d       	ldd	r25, Y+24	; 0x18
    4618:	20 e0       	ldi	r18, 0x00	; 0
    461a:	3f ef       	ldi	r19, 0xFF	; 255
    461c:	4f e7       	ldi	r20, 0x7F	; 127
    461e:	57 e4       	ldi	r21, 0x47	; 71
    4620:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4624:	18 16       	cp	r1, r24
    4626:	4c f5       	brge	.+82     	; 0x467a <Keypad_voidTimer+0xff6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4628:	69 8d       	ldd	r22, Y+25	; 0x19
    462a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    462c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    462e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4630:	20 e0       	ldi	r18, 0x00	; 0
    4632:	30 e0       	ldi	r19, 0x00	; 0
    4634:	40 e2       	ldi	r20, 0x20	; 32
    4636:	51 e4       	ldi	r21, 0x41	; 65
    4638:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    463c:	dc 01       	movw	r26, r24
    463e:	cb 01       	movw	r24, r22
    4640:	bc 01       	movw	r22, r24
    4642:	cd 01       	movw	r24, r26
    4644:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4648:	dc 01       	movw	r26, r24
    464a:	cb 01       	movw	r24, r22
    464c:	9c 8b       	std	Y+20, r25	; 0x14
    464e:	8b 8b       	std	Y+19, r24	; 0x13
    4650:	0f c0       	rjmp	.+30     	; 0x4670 <Keypad_voidTimer+0xfec>
    4652:	88 ec       	ldi	r24, 0xC8	; 200
    4654:	90 e0       	ldi	r25, 0x00	; 0
    4656:	9a 8b       	std	Y+18, r25	; 0x12
    4658:	89 8b       	std	Y+17, r24	; 0x11
    465a:	89 89       	ldd	r24, Y+17	; 0x11
    465c:	9a 89       	ldd	r25, Y+18	; 0x12
    465e:	01 97       	sbiw	r24, 0x01	; 1
    4660:	f1 f7       	brne	.-4      	; 0x465e <Keypad_voidTimer+0xfda>
    4662:	9a 8b       	std	Y+18, r25	; 0x12
    4664:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4666:	8b 89       	ldd	r24, Y+19	; 0x13
    4668:	9c 89       	ldd	r25, Y+20	; 0x14
    466a:	01 97       	sbiw	r24, 0x01	; 1
    466c:	9c 8b       	std	Y+20, r25	; 0x14
    466e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4670:	8b 89       	ldd	r24, Y+19	; 0x13
    4672:	9c 89       	ldd	r25, Y+20	; 0x14
    4674:	00 97       	sbiw	r24, 0x00	; 0
    4676:	69 f7       	brne	.-38     	; 0x4652 <Keypad_voidTimer+0xfce>
    4678:	14 c0       	rjmp	.+40     	; 0x46a2 <Keypad_voidTimer+0x101e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    467a:	6d 89       	ldd	r22, Y+21	; 0x15
    467c:	7e 89       	ldd	r23, Y+22	; 0x16
    467e:	8f 89       	ldd	r24, Y+23	; 0x17
    4680:	98 8d       	ldd	r25, Y+24	; 0x18
    4682:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4686:	dc 01       	movw	r26, r24
    4688:	cb 01       	movw	r24, r22
    468a:	9c 8b       	std	Y+20, r25	; 0x14
    468c:	8b 8b       	std	Y+19, r24	; 0x13
    468e:	8b 89       	ldd	r24, Y+19	; 0x13
    4690:	9c 89       	ldd	r25, Y+20	; 0x14
    4692:	98 8b       	std	Y+16, r25	; 0x10
    4694:	8f 87       	std	Y+15, r24	; 0x0f
    4696:	8f 85       	ldd	r24, Y+15	; 0x0f
    4698:	98 89       	ldd	r25, Y+16	; 0x10
    469a:	01 97       	sbiw	r24, 0x01	; 1
    469c:	f1 f7       	brne	.-4      	; 0x469a <Keypad_voidTimer+0x1016>
    469e:	98 8b       	std	Y+16, r25	; 0x10
    46a0:	8f 87       	std	Y+15, r24	; 0x0f
							_delay_ms(1000);
							if(Local_u8i==0)
    46a2:	fe 01       	movw	r30, r28
    46a4:	e8 5b       	subi	r30, 0xB8	; 184
    46a6:	ff 4f       	sbci	r31, 0xFF	; 255
    46a8:	80 81       	ld	r24, Z
    46aa:	88 23       	and	r24, r24
    46ac:	51 f0       	breq	.+20     	; 0x46c2 <Keypad_voidTimer+0x103e>
							{
								break ;
							}
						}
					}else if(Local_u8Initial3==0){
						for(Local_u8i=59;(Local_u8i>=0);Local_u8i--)
    46ae:	de 01       	movw	r26, r28
    46b0:	a8 5b       	subi	r26, 0xB8	; 184
    46b2:	bf 4f       	sbci	r27, 0xFF	; 255
    46b4:	fe 01       	movw	r30, r28
    46b6:	e8 5b       	subi	r30, 0xB8	; 184
    46b8:	ff 4f       	sbci	r31, 0xFF	; 255
    46ba:	80 81       	ld	r24, Z
    46bc:	81 50       	subi	r24, 0x01	; 1
    46be:	8c 93       	st	X, r24
    46c0:	60 cf       	rjmp	.-320    	; 0x4582 <Keypad_voidTimer+0xefe>
							{
								break ;
							}
						}
					}
					if(Local_u8j==0)
    46c2:	fe 01       	movw	r30, r28
    46c4:	e9 5b       	subi	r30, 0xB9	; 185
    46c6:	ff 4f       	sbci	r31, 0xFF	; 255
    46c8:	80 81       	ld	r24, Z
    46ca:	88 23       	and	r24, r24
    46cc:	51 f0       	breq	.+20     	; 0x46e2 <Keypad_voidTimer+0x105e>
					}
				}
			}
			else if(Local_u8Initial2==0)
			{
				for(Local_u8j=59;(Local_u8j>=0);Local_u8j--)
    46ce:	de 01       	movw	r26, r28
    46d0:	a9 5b       	subi	r26, 0xB9	; 185
    46d2:	bf 4f       	sbci	r27, 0xFF	; 255
    46d4:	fe 01       	movw	r30, r28
    46d6:	e9 5b       	subi	r30, 0xB9	; 185
    46d8:	ff 4f       	sbci	r31, 0xFF	; 255
    46da:	80 81       	ld	r24, Z
    46dc:	81 50       	subi	r24, 0x01	; 1
    46de:	8c 93       	st	X, r24
    46e0:	71 ce       	rjmp	.-798    	; 0x43c4 <Keypad_voidTimer+0xd40>
					{
						break ;
					}
				}
			}
			if(Local_u8Initial==0)
    46e2:	fe 01       	movw	r30, r28
    46e4:	ed 5a       	subi	r30, 0xAD	; 173
    46e6:	ff 4f       	sbci	r31, 0xFF	; 255
    46e8:	80 81       	ld	r24, Z
    46ea:	88 23       	and	r24, r24
    46ec:	a1 f0       	breq	.+40     	; 0x4716 <Keypad_voidTimer+0x1092>
		Local_u8Minite=Local_u8n3*10+Local_u8n4;
		Local_u8Second=Local_u8n5*10+Local_u8n6;
		Local_u8Initial2=Local_u8Minite;
		Local_u8Initial3=Local_u8Second;

		for(Local_u8Initial=Local_u8Haor;(Local_u8Initial>=0)&&(Local_u8Initial<=Local_u8Haor);Local_u8Initial--)
    46ee:	de 01       	movw	r26, r28
    46f0:	ad 5a       	subi	r26, 0xAD	; 173
    46f2:	bf 4f       	sbci	r27, 0xFF	; 255
    46f4:	fe 01       	movw	r30, r28
    46f6:	ed 5a       	subi	r30, 0xAD	; 173
    46f8:	ff 4f       	sbci	r31, 0xFF	; 255
    46fa:	80 81       	ld	r24, Z
    46fc:	81 50       	subi	r24, 0x01	; 1
    46fe:	8c 93       	st	X, r24
    4700:	fe 01       	movw	r30, r28
    4702:	ed 5a       	subi	r30, 0xAD	; 173
    4704:	ff 4f       	sbci	r31, 0xFF	; 255
    4706:	de 01       	movw	r26, r28
    4708:	aa 5a       	subi	r26, 0xAA	; 170
    470a:	bf 4f       	sbci	r27, 0xFF	; 255
    470c:	90 81       	ld	r25, Z
    470e:	8c 91       	ld	r24, X
    4710:	89 17       	cp	r24, r25
    4712:	08 f0       	brcs	.+2      	; 0x4716 <Keypad_voidTimer+0x1092>
    4714:	73 cc       	rjmp	.-1818   	; 0x3ffc <Keypad_voidTimer+0x978>
			if(Local_u8Initial==0)
			{
				break ;
			}
		}
		CLCD_voidSendCommend(1);
    4716:	81 e0       	ldi	r24, 0x01	; 1
    4718:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_voidSendCommend>

			CLCD_voidWriteSpecialCharacter(Local_u8Hamoksha_UP,4,0,0);
    471c:	ce 01       	movw	r24, r28
    471e:	82 59       	subi	r24, 0x92	; 146
    4720:	9f 4f       	sbci	r25, 0xFF	; 255
    4722:	64 e0       	ldi	r22, 0x04	; 4
    4724:	40 e0       	ldi	r20, 0x00	; 0
    4726:	20 e0       	ldi	r18, 0x00	; 0
    4728:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
				CLCD_voidWriteSpecialCharacter(Local_u8Hamoksha_Down,5,0,1);
    472c:	ce 01       	movw	r24, r28
    472e:	8a 58       	subi	r24, 0x8A	; 138
    4730:	9f 4f       	sbci	r25, 0xFF	; 255
    4732:	65 e0       	ldi	r22, 0x05	; 5
    4734:	40 e0       	ldi	r20, 0x00	; 0
    4736:	21 e0       	ldi	r18, 0x01	; 1
    4738:	0e 94 7e 09 	call	0x12fc	; 0x12fc <CLCD_voidWriteSpecialCharacter>
				CLCD_voidGoToXY(2,0);
    473c:	82 e0       	ldi	r24, 0x02	; 2
    473e:	60 e0       	ldi	r22, 0x00	; 0
    4740:	0e 94 60 09 	call	0x12c0	; 0x12c0 <CLCD_voidGoToXY>
				CLCD_voidSendString("Time off");
    4744:	82 e7       	ldi	r24, 0x72	; 114
    4746:	90 e0       	ldi	r25, 0x00	; 0
    4748:	0e 94 37 09 	call	0x126e	; 0x126e <CLCD_voidSendString>
				DIO_u8SetPinValue (DIO_u8PORTB,DIO_u8PIN2,DIO_u8PIN_HIGH);
    474c:	81 e0       	ldi	r24, 0x01	; 1
    474e:	62 e0       	ldi	r22, 0x02	; 2
    4750:	41 e0       	ldi	r20, 0x01	; 1
    4752:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>
    4756:	80 e0       	ldi	r24, 0x00	; 0
    4758:	90 e8       	ldi	r25, 0x80	; 128
    475a:	ab e3       	ldi	r26, 0x3B	; 59
    475c:	b5 e4       	ldi	r27, 0x45	; 69
    475e:	8b 87       	std	Y+11, r24	; 0x0b
    4760:	9c 87       	std	Y+12, r25	; 0x0c
    4762:	ad 87       	std	Y+13, r26	; 0x0d
    4764:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4766:	6b 85       	ldd	r22, Y+11	; 0x0b
    4768:	7c 85       	ldd	r23, Y+12	; 0x0c
    476a:	8d 85       	ldd	r24, Y+13	; 0x0d
    476c:	9e 85       	ldd	r25, Y+14	; 0x0e
    476e:	20 e0       	ldi	r18, 0x00	; 0
    4770:	30 e0       	ldi	r19, 0x00	; 0
    4772:	4a ef       	ldi	r20, 0xFA	; 250
    4774:	54 e4       	ldi	r21, 0x44	; 68
    4776:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    477a:	dc 01       	movw	r26, r24
    477c:	cb 01       	movw	r24, r22
    477e:	8f 83       	std	Y+7, r24	; 0x07
    4780:	98 87       	std	Y+8, r25	; 0x08
    4782:	a9 87       	std	Y+9, r26	; 0x09
    4784:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4786:	6f 81       	ldd	r22, Y+7	; 0x07
    4788:	78 85       	ldd	r23, Y+8	; 0x08
    478a:	89 85       	ldd	r24, Y+9	; 0x09
    478c:	9a 85       	ldd	r25, Y+10	; 0x0a
    478e:	20 e0       	ldi	r18, 0x00	; 0
    4790:	30 e0       	ldi	r19, 0x00	; 0
    4792:	40 e8       	ldi	r20, 0x80	; 128
    4794:	5f e3       	ldi	r21, 0x3F	; 63
    4796:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    479a:	88 23       	and	r24, r24
    479c:	2c f4       	brge	.+10     	; 0x47a8 <Keypad_voidTimer+0x1124>
		__ticks = 1;
    479e:	81 e0       	ldi	r24, 0x01	; 1
    47a0:	90 e0       	ldi	r25, 0x00	; 0
    47a2:	9e 83       	std	Y+6, r25	; 0x06
    47a4:	8d 83       	std	Y+5, r24	; 0x05
    47a6:	3f c0       	rjmp	.+126    	; 0x4826 <Keypad_voidTimer+0x11a2>
	else if (__tmp > 65535)
    47a8:	6f 81       	ldd	r22, Y+7	; 0x07
    47aa:	78 85       	ldd	r23, Y+8	; 0x08
    47ac:	89 85       	ldd	r24, Y+9	; 0x09
    47ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    47b0:	20 e0       	ldi	r18, 0x00	; 0
    47b2:	3f ef       	ldi	r19, 0xFF	; 255
    47b4:	4f e7       	ldi	r20, 0x7F	; 127
    47b6:	57 e4       	ldi	r21, 0x47	; 71
    47b8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    47bc:	18 16       	cp	r1, r24
    47be:	4c f5       	brge	.+82     	; 0x4812 <Keypad_voidTimer+0x118e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    47c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    47c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    47c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    47c8:	20 e0       	ldi	r18, 0x00	; 0
    47ca:	30 e0       	ldi	r19, 0x00	; 0
    47cc:	40 e2       	ldi	r20, 0x20	; 32
    47ce:	51 e4       	ldi	r21, 0x41	; 65
    47d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    47d4:	dc 01       	movw	r26, r24
    47d6:	cb 01       	movw	r24, r22
    47d8:	bc 01       	movw	r22, r24
    47da:	cd 01       	movw	r24, r26
    47dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    47e0:	dc 01       	movw	r26, r24
    47e2:	cb 01       	movw	r24, r22
    47e4:	9e 83       	std	Y+6, r25	; 0x06
    47e6:	8d 83       	std	Y+5, r24	; 0x05
    47e8:	0f c0       	rjmp	.+30     	; 0x4808 <Keypad_voidTimer+0x1184>
    47ea:	88 ec       	ldi	r24, 0xC8	; 200
    47ec:	90 e0       	ldi	r25, 0x00	; 0
    47ee:	9c 83       	std	Y+4, r25	; 0x04
    47f0:	8b 83       	std	Y+3, r24	; 0x03
    47f2:	8b 81       	ldd	r24, Y+3	; 0x03
    47f4:	9c 81       	ldd	r25, Y+4	; 0x04
    47f6:	01 97       	sbiw	r24, 0x01	; 1
    47f8:	f1 f7       	brne	.-4      	; 0x47f6 <Keypad_voidTimer+0x1172>
    47fa:	9c 83       	std	Y+4, r25	; 0x04
    47fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    47fe:	8d 81       	ldd	r24, Y+5	; 0x05
    4800:	9e 81       	ldd	r25, Y+6	; 0x06
    4802:	01 97       	sbiw	r24, 0x01	; 1
    4804:	9e 83       	std	Y+6, r25	; 0x06
    4806:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4808:	8d 81       	ldd	r24, Y+5	; 0x05
    480a:	9e 81       	ldd	r25, Y+6	; 0x06
    480c:	00 97       	sbiw	r24, 0x00	; 0
    480e:	69 f7       	brne	.-38     	; 0x47ea <Keypad_voidTimer+0x1166>
    4810:	14 c0       	rjmp	.+40     	; 0x483a <Keypad_voidTimer+0x11b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4812:	6f 81       	ldd	r22, Y+7	; 0x07
    4814:	78 85       	ldd	r23, Y+8	; 0x08
    4816:	89 85       	ldd	r24, Y+9	; 0x09
    4818:	9a 85       	ldd	r25, Y+10	; 0x0a
    481a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    481e:	dc 01       	movw	r26, r24
    4820:	cb 01       	movw	r24, r22
    4822:	9e 83       	std	Y+6, r25	; 0x06
    4824:	8d 83       	std	Y+5, r24	; 0x05
    4826:	8d 81       	ldd	r24, Y+5	; 0x05
    4828:	9e 81       	ldd	r25, Y+6	; 0x06
    482a:	9a 83       	std	Y+2, r25	; 0x02
    482c:	89 83       	std	Y+1, r24	; 0x01
    482e:	89 81       	ldd	r24, Y+1	; 0x01
    4830:	9a 81       	ldd	r25, Y+2	; 0x02
    4832:	01 97       	sbiw	r24, 0x01	; 1
    4834:	f1 f7       	brne	.-4      	; 0x4832 <Keypad_voidTimer+0x11ae>
    4836:	9a 83       	std	Y+2, r25	; 0x02
    4838:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(3000);
				DIO_u8SetPinValue (DIO_u8PORTB,DIO_u8PIN2,DIO_u8PIN_LOW);
    483a:	81 e0       	ldi	r24, 0x01	; 1
    483c:	62 e0       	ldi	r22, 0x02	; 2
    483e:	40 e0       	ldi	r20, 0x00	; 0
    4840:	0e 94 84 16 	call	0x2d08	; 0x2d08 <DIO_u8SetPinValue>
				CLCD_voidSendCommend(1);
    4844:	81 e0       	ldi	r24, 0x01	; 1
    4846:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_voidSendCommend>

	}



}
    484a:	c4 57       	subi	r28, 0x74	; 116
    484c:	df 4f       	sbci	r29, 0xFF	; 255
    484e:	0f b6       	in	r0, 0x3f	; 63
    4850:	f8 94       	cli
    4852:	de bf       	out	0x3e, r29	; 62
    4854:	0f be       	out	0x3f, r0	; 63
    4856:	cd bf       	out	0x3d, r28	; 61
    4858:	cf 91       	pop	r28
    485a:	df 91       	pop	r29
    485c:	1f 91       	pop	r17
    485e:	0f 91       	pop	r16
    4860:	08 95       	ret

00004862 <PORT_voidInit>:
#include "PORT_interface.h"
#include "PORT_register.h"


void PORT_voidInit(void)
{
    4862:	df 93       	push	r29
    4864:	cf 93       	push	r28
    4866:	cd b7       	in	r28, 0x3d	; 61
    4868:	de b7       	in	r29, 0x3e	; 62
	DDRA=PORTA_DIR;
    486a:	ea e3       	ldi	r30, 0x3A	; 58
    486c:	f0 e0       	ldi	r31, 0x00	; 0
    486e:	8f ef       	ldi	r24, 0xFF	; 255
    4870:	80 83       	st	Z, r24
	DDRB=PORTB_DIR;
    4872:	e7 e3       	ldi	r30, 0x37	; 55
    4874:	f0 e0       	ldi	r31, 0x00	; 0
    4876:	84 e0       	ldi	r24, 0x04	; 4
    4878:	80 83       	st	Z, r24
	DDRC=PORTC_DIR;
    487a:	e4 e3       	ldi	r30, 0x34	; 52
    487c:	f0 e0       	ldi	r31, 0x00	; 0
    487e:	87 e0       	ldi	r24, 0x07	; 7
    4880:	80 83       	st	Z, r24
	DDRD=PORTD_DIR;
    4882:	e1 e3       	ldi	r30, 0x31	; 49
    4884:	f0 e0       	ldi	r31, 0x00	; 0
    4886:	8f e0       	ldi	r24, 0x0F	; 15
    4888:	80 83       	st	Z, r24
	
	PORTA=PORTA_INITIAL_VALUE;
    488a:	eb e3       	ldi	r30, 0x3B	; 59
    488c:	f0 e0       	ldi	r31, 0x00	; 0
    488e:	10 82       	st	Z, r1
	PORTB=PORTB_INITIAL_VALUE;
    4890:	e8 e3       	ldi	r30, 0x38	; 56
    4892:	f0 e0       	ldi	r31, 0x00	; 0
    4894:	10 82       	st	Z, r1
	PORTC=PORTC_INITIAL_VALUE;
    4896:	e5 e3       	ldi	r30, 0x35	; 53
    4898:	f0 e0       	ldi	r31, 0x00	; 0
    489a:	10 82       	st	Z, r1
	PORTD=PORTD_INITIAL_VALUE;
    489c:	e2 e3       	ldi	r30, 0x32	; 50
    489e:	f0 e0       	ldi	r31, 0x00	; 0
    48a0:	8f ef       	ldi	r24, 0xFF	; 255
    48a2:	80 83       	st	Z, r24


}
    48a4:	cf 91       	pop	r28
    48a6:	df 91       	pop	r29
    48a8:	08 95       	ret

000048aa <main>:
#include "PORT_interface.h"
#include "KPD_interface.h"


	int main()
	{
    48aa:	df 93       	push	r29
    48ac:	cf 93       	push	r28
    48ae:	cd b7       	in	r28, 0x3d	; 61
    48b0:	de b7       	in	r29, 0x3e	; 62
    PORT_voidInit();
    48b2:	0e 94 31 24 	call	0x4862	; 0x4862 <PORT_voidInit>
    CLCD_voidInit();
    48b6:	0e 94 a9 08 	call	0x1152	; 0x1152 <CLCD_voidInit>
    	while (Local_u8Number==0xff)
    	{
    		Local_u8Number=KPD_U8GetPressedKey();
    	}*/
    	//Keypad_voidComplateCalculator();
    	Keypad_voidTimer();
    48ba:	0e 94 42 1b 	call	0x3684	; 0x3684 <Keypad_voidTimer>
    48be:	fd cf       	rjmp	.-6      	; 0x48ba <main+0x10>

000048c0 <__mulsi3>:
    48c0:	62 9f       	mul	r22, r18
    48c2:	d0 01       	movw	r26, r0
    48c4:	73 9f       	mul	r23, r19
    48c6:	f0 01       	movw	r30, r0
    48c8:	82 9f       	mul	r24, r18
    48ca:	e0 0d       	add	r30, r0
    48cc:	f1 1d       	adc	r31, r1
    48ce:	64 9f       	mul	r22, r20
    48d0:	e0 0d       	add	r30, r0
    48d2:	f1 1d       	adc	r31, r1
    48d4:	92 9f       	mul	r25, r18
    48d6:	f0 0d       	add	r31, r0
    48d8:	83 9f       	mul	r24, r19
    48da:	f0 0d       	add	r31, r0
    48dc:	74 9f       	mul	r23, r20
    48de:	f0 0d       	add	r31, r0
    48e0:	65 9f       	mul	r22, r21
    48e2:	f0 0d       	add	r31, r0
    48e4:	99 27       	eor	r25, r25
    48e6:	72 9f       	mul	r23, r18
    48e8:	b0 0d       	add	r27, r0
    48ea:	e1 1d       	adc	r30, r1
    48ec:	f9 1f       	adc	r31, r25
    48ee:	63 9f       	mul	r22, r19
    48f0:	b0 0d       	add	r27, r0
    48f2:	e1 1d       	adc	r30, r1
    48f4:	f9 1f       	adc	r31, r25
    48f6:	bd 01       	movw	r22, r26
    48f8:	cf 01       	movw	r24, r30
    48fa:	11 24       	eor	r1, r1
    48fc:	08 95       	ret

000048fe <__udivmodqi4>:
    48fe:	99 1b       	sub	r25, r25
    4900:	79 e0       	ldi	r23, 0x09	; 9
    4902:	04 c0       	rjmp	.+8      	; 0x490c <__udivmodqi4_ep>

00004904 <__udivmodqi4_loop>:
    4904:	99 1f       	adc	r25, r25
    4906:	96 17       	cp	r25, r22
    4908:	08 f0       	brcs	.+2      	; 0x490c <__udivmodqi4_ep>
    490a:	96 1b       	sub	r25, r22

0000490c <__udivmodqi4_ep>:
    490c:	88 1f       	adc	r24, r24
    490e:	7a 95       	dec	r23
    4910:	c9 f7       	brne	.-14     	; 0x4904 <__udivmodqi4_loop>
    4912:	80 95       	com	r24
    4914:	08 95       	ret

00004916 <__udivmodsi4>:
    4916:	a1 e2       	ldi	r26, 0x21	; 33
    4918:	1a 2e       	mov	r1, r26
    491a:	aa 1b       	sub	r26, r26
    491c:	bb 1b       	sub	r27, r27
    491e:	fd 01       	movw	r30, r26
    4920:	0d c0       	rjmp	.+26     	; 0x493c <__udivmodsi4_ep>

00004922 <__udivmodsi4_loop>:
    4922:	aa 1f       	adc	r26, r26
    4924:	bb 1f       	adc	r27, r27
    4926:	ee 1f       	adc	r30, r30
    4928:	ff 1f       	adc	r31, r31
    492a:	a2 17       	cp	r26, r18
    492c:	b3 07       	cpc	r27, r19
    492e:	e4 07       	cpc	r30, r20
    4930:	f5 07       	cpc	r31, r21
    4932:	20 f0       	brcs	.+8      	; 0x493c <__udivmodsi4_ep>
    4934:	a2 1b       	sub	r26, r18
    4936:	b3 0b       	sbc	r27, r19
    4938:	e4 0b       	sbc	r30, r20
    493a:	f5 0b       	sbc	r31, r21

0000493c <__udivmodsi4_ep>:
    493c:	66 1f       	adc	r22, r22
    493e:	77 1f       	adc	r23, r23
    4940:	88 1f       	adc	r24, r24
    4942:	99 1f       	adc	r25, r25
    4944:	1a 94       	dec	r1
    4946:	69 f7       	brne	.-38     	; 0x4922 <__udivmodsi4_loop>
    4948:	60 95       	com	r22
    494a:	70 95       	com	r23
    494c:	80 95       	com	r24
    494e:	90 95       	com	r25
    4950:	9b 01       	movw	r18, r22
    4952:	ac 01       	movw	r20, r24
    4954:	bd 01       	movw	r22, r26
    4956:	cf 01       	movw	r24, r30
    4958:	08 95       	ret

0000495a <__prologue_saves__>:
    495a:	2f 92       	push	r2
    495c:	3f 92       	push	r3
    495e:	4f 92       	push	r4
    4960:	5f 92       	push	r5
    4962:	6f 92       	push	r6
    4964:	7f 92       	push	r7
    4966:	8f 92       	push	r8
    4968:	9f 92       	push	r9
    496a:	af 92       	push	r10
    496c:	bf 92       	push	r11
    496e:	cf 92       	push	r12
    4970:	df 92       	push	r13
    4972:	ef 92       	push	r14
    4974:	ff 92       	push	r15
    4976:	0f 93       	push	r16
    4978:	1f 93       	push	r17
    497a:	cf 93       	push	r28
    497c:	df 93       	push	r29
    497e:	cd b7       	in	r28, 0x3d	; 61
    4980:	de b7       	in	r29, 0x3e	; 62
    4982:	ca 1b       	sub	r28, r26
    4984:	db 0b       	sbc	r29, r27
    4986:	0f b6       	in	r0, 0x3f	; 63
    4988:	f8 94       	cli
    498a:	de bf       	out	0x3e, r29	; 62
    498c:	0f be       	out	0x3f, r0	; 63
    498e:	cd bf       	out	0x3d, r28	; 61
    4990:	09 94       	ijmp

00004992 <__epilogue_restores__>:
    4992:	2a 88       	ldd	r2, Y+18	; 0x12
    4994:	39 88       	ldd	r3, Y+17	; 0x11
    4996:	48 88       	ldd	r4, Y+16	; 0x10
    4998:	5f 84       	ldd	r5, Y+15	; 0x0f
    499a:	6e 84       	ldd	r6, Y+14	; 0x0e
    499c:	7d 84       	ldd	r7, Y+13	; 0x0d
    499e:	8c 84       	ldd	r8, Y+12	; 0x0c
    49a0:	9b 84       	ldd	r9, Y+11	; 0x0b
    49a2:	aa 84       	ldd	r10, Y+10	; 0x0a
    49a4:	b9 84       	ldd	r11, Y+9	; 0x09
    49a6:	c8 84       	ldd	r12, Y+8	; 0x08
    49a8:	df 80       	ldd	r13, Y+7	; 0x07
    49aa:	ee 80       	ldd	r14, Y+6	; 0x06
    49ac:	fd 80       	ldd	r15, Y+5	; 0x05
    49ae:	0c 81       	ldd	r16, Y+4	; 0x04
    49b0:	1b 81       	ldd	r17, Y+3	; 0x03
    49b2:	aa 81       	ldd	r26, Y+2	; 0x02
    49b4:	b9 81       	ldd	r27, Y+1	; 0x01
    49b6:	ce 0f       	add	r28, r30
    49b8:	d1 1d       	adc	r29, r1
    49ba:	0f b6       	in	r0, 0x3f	; 63
    49bc:	f8 94       	cli
    49be:	de bf       	out	0x3e, r29	; 62
    49c0:	0f be       	out	0x3f, r0	; 63
    49c2:	cd bf       	out	0x3d, r28	; 61
    49c4:	ed 01       	movw	r28, r26
    49c6:	08 95       	ret

000049c8 <_exit>:
    49c8:	f8 94       	cli

000049ca <__stop_program>:
    49ca:	ff cf       	rjmp	.-2      	; 0x49ca <__stop_program>
